[
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose\n\nContent: 1.1 The Scheduling Component su pports Factory Operations, Material Transport and Storage, Production Machine, and Equipment Tracking and Maintenance components by ordering, in time, jobs that process material on equipment, move material, and maintain equipment. The scheduler uses knowledge of product demand, equipment and material state, process flows, throughput bottlenecks, operational policy and constraints, and other information to recommend jobs that maximize effective utilization of factory resources to satisfy product demand and planned objectives. 1.2 Increased control over operatio ns requires an active Scheduling Component that can respond to factory events and changes in state and dynamically adjust the schedules for material processing, material transport and equipment maintenance. The Scheduling Component can react to inventory levels of material in the factory to adjust priorities to minimize queue sizes and ensure that use of bottleneck equipment is optimized to keep WIP inventory levels at desired levels."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose\n\nContent: 1.3 The Scheduling Component ca n minimize turn around time (TAT) by coordinating material transport (for substrates and durables) with processing to reduce equipment idle time. The Scheduling Component can sequence activities to minimize setup time. It can also respond to scheduled and unscheduled equipment down-time to minimize impact on turn around time. In addition to minimizing overall TAT, it can react to the priorities for urgent lots to move them through the process flow in the minimum possible time while adjusting the schedules of lower-priority lots that are impacted. components of the CIM Framework. This illustration does not reflect all of the many inputs to the Scheduling Component that are required to provide it with the current status of the factory resources. 2.2 As described in this standard, the Scheduling Component produces activity option and activity forecast lists. These lists are produced by combining the factory model and status information from other components with scheduling policies in the"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose\n\nContent: Scheduling Component. For example, the Scheduling Component combines data from the Specification Component on how products are made with status data from the Equipment and Product Management Components to give activity options for a machine. 2.3 The Factory Operations Comp onent uses the Scheduling Component services to orchestrate the management of machines and production of lots. For example, when a tool becomes available, Factory Operations uses the Activity Options list to select the next lot to process on the tool. Factory Operations then works with other components to execute the production job for the lot on the machine. Executing the production job changes the state of lot and tool in other components. These status changes are then used by the Scheduling Component when it produces new activity lists. 2.4 The Scheduling Manager supp orts Factory Operations by providing an answer to questions like, “What is next for this material or resource?” The answer may be based on evaluation of current or future constraints and"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 1  Purpose\n\nContent: objectives. Although the dispatcher's output takes the form of a decision for the next activity for the target resource, the interface may also support manual scenarios by providing a list of prioritized activities from which the decision is selected."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 2  Scope (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 2  Scope\n\nContent: 2.1 The primary run-time responsi bilities of the Scheduling Component are to monitor resource and material state and apply scheduling and dispatching decision mechanisms to identify the next activity (dispatching) or sequence of activities (scheduling) for factory resources. The Scheduling Component includes an interface that supports both scheduling and dispatching. Figure 1 illustrates the interactions between the Scheduling Component and other 2.5 The Scheduling Manager inter face also provides forecasts of future activities projected to occur after the next activity. By simulating anticipated future activity sequencing and execution timing the scheduler can generate forecasts that predict future responses from the dispatcher for subsequent requests. These forecasts are subject to change as factory conditions change, but they offer the best current projection of future activity decisions. 2.6 This specification does not des cribe the definition of the policies used by the Scheduling Component to produce activity lists."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 2  Scope (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 2  Scope\n\nContent: This is left to component implementors. 2.7 This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory limitations prior to use."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 3  Limitations (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 3  Limitations\n\nContent: 3.1 Provisional Status — This spe cification is designated as provisional due to known areas that need to be completed. The following items summarize the deficiencies of the provisional specification to be addressed before a subsequent ballot to upgrade it to full standard status. 3.1.1 Dependence on Factory Operations Component — The Scheduling Component provides specifications of activities that are executed by the Factory Operations Component in the form of production jobs, transport jobs and maintenance jobs. The specification of Factory Operations may require changes to the activity specification properties of the Scheduling Component. When the Specification for CIM Framework Factory Operations Component is complete, this dependency can be resolved. 3.1.2 Specification of Event Subscrip tions — The Scheduling Component maintains a current status of the factory resources and material by receiving event notifications of occurrences that indicate changes in other components. Events are specified with the component"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 3  Limitations (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 3  Limitations\n\nContent: responsible for publishing the event notifications. Until all of the required event formats are defined as part of the publishing component specification, the inputs to the Scheduling Component will be defined only in general terms. When event specifications are complete, these event subscriptions can be specified. 3.1.3 Initialization — The Schedulin g Component does not currently provide interfaces that allow the representation of factory conditions to be initialized for the start-up of dispatching and scheduling. The addition of initialization interfaces will be added or deemed out of scope prior to upgrade to full standard status."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 4.1  SEMI Standards",
    "content": "SEMI E81 — Provisional Specification for CIM Framework Domain Architecture  \nSEMI E97 — Provisional Specification for CIM Framework Global Declarations and Abstract Interfaces SEMI E102 — Provisional Specification for CIM Framework Material Transport and Storage Component"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 4.2  Other Documents",
    "content": "UML Notation Guide, Version 1.1, document number ad/97-08-05, Object Management Group.  \nISO/IEC International Standard 14750 (also ITU-T Recommendation X.920): Information Technology – Open Distributed Processing – Interface Definition Language 2"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 5.1  Definitions (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 5.1  Definitions\n\nContent: 5.1.1 activity — work performed as part of the manufacturing operations of a factory. Activities may be specified formally by a predefined type of job specification (for example, Production Job, Transport Job or PM Job), or they may be represented by identifying the minimal set of resources and material needed to allow subsequent completion of the job specification. An activity is the result of dispatching or scheduling. 5.1.2 dispatching — generation of a decision or option for the next activity involving a particular factory resource or material. The dispatch result is determined by evaluating the current state of the factory, the priorities and requirements for the activities, and the relationship of the activities to one another. Dispatching returns only the immediately applicable part of a schedule. 5.1.3 factory planning — recommen dation of lot starts for a particular production facility over an extended period of time. The factory plan is determined by predicting future changes in factory state and available"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 5.1  Definitions (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 5.1  Definitions\n\nContent: capacity as lots progress through production. This prediction is used to determine the optimum sequence of lot starts to best achieve the production goals of the facility. Factory planning is typically the responsibility of enterprise systems. 5.1.4 scheduling — generation of a forecast of future time sequenced activities involving factory resources or material. The schedule is based on the current state of the factory, the priorities and requirements for the activities, the relationship of the activities to one another and knowledge of factory level goals and capacity. Scheduling covers activities projected to occur over a longer future time interval than dispatching."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6  Requirements",
    "content": "6.1  Scheduling Component — The Scheduling Component provides a single interface called the SchedulingManager with operations for both dispatching and scheduling.  \n6.1.1  Any resource or material withi n the factory may have a next activity defined for it. The SchedulingManager interface is responsible for identifying activities that answer questions such as:  \nWhat’s next for this Machine? Where next for this Lot? What’s next for this Operator?  \n6.1.2  The SchedulingManager interf ace is also responsible for generating a time-sequenced forecast of future activities for a resource or for material within the factory.  This forecast is based on projections from the current factory state and may be updated as actual activities are dispatched and executed.  \n6.1.3  The Scheduling Component Information Model is shown in Figure 2."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations\n\nContent: $/ ^ { * }$ The ActivityType enumerated value will determine which kind of activity is represented and the appropriate properties present in the activitySpec. \\*/ enum ActivityType { ProductionActivity, TransportActivity, MaintenanceActivity, DoNothing }; /\\* ActivityOption represents a single activity that is eligible to be dispatched for execution. The prioritySequenceNumber represents the priority ordering of a list of ActivityOptions in the case where a manual process includes selection of one ActivityOption from the list. The deadline is a timestamp that is used to convey start time constraints for activities. It may also be used in a DoNothing activity to specify the timeout for a retry of the dispatch request. \\*/ struct ActivityOption { ActivityType activityType; short prioritySequenceNumber; Global::TimeStamp deadline; AbstractIF::ResourceSequence resources; AbstractIF::MaterialGroupSequence materialGroups; DurablesManagement::DurableSequence durables; Global::Properties activitySpec;"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations\n\nContent: }; // ActivityOption $/ ^ { * }$ ActivityForecast represents a single Activity that may be dispatched and executed in the future. An ActivityForecast includes information that is equivalent to an ActivityOption, but with added start and finish time projections. The timeSequenceNumber represents the time ordering of activities consistent with the projectedStart and projectedFinish. \\*/ struct ActivityForecast { ActivityType activityType; short timeSequenceNumber; AbstractIF::ResourceSequence resources; AbstractIF::MaterialGroupSequence materialGroups; DurablesManagement::DurableSequence durables; Global::TimeStamp projectedStart; Global::TimeStamp projectedFinish; Global::Properties activitySpec; }; // ActivityForecast $/ ^ { * }$ An ActivityList contains one or more ActivityOptions for a Resource, MaterialGroup or Durable which are all eligible for immediate execution. A list of one ActivityOption represents a decision from the SchedulingComponent. A list of more than one ActivityOption"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations\n\nContent: represents recommendations from the SchedulingComponent which require some external interaction for a decision to be reached. \\*/ typedef sequence <ActivityOption> ActivityList; $/ ^ { * }$ A ForecastList contains one or more ActivityForecasts for a Resource or MaterialGroup which are not yet dispatched for execution. \\*/ typedef sequence <ActivityForecast> ForecastList; 6.1.5 Use of ActivitySpec Properties — The ActivitySpec part of the ActivityOption and ActivityForecast are provided to allow implementations to extend the specifications of activities for specific implementations. The names and value types of properties included in these ActivitySpec structure are not part of the standard. 6.1.6 SchedulingManager Interface Module: Scheduling Interface: SchedulingManager Inherited Interface: ComponentManager interface SchedulingManager : FactoryOperations::ComponentManager { Description: The SchedulingManager provides the concrete interfaces that support the registration and control of the"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations\n\nContent: Scheduling Component and enable access to the Dispatcher and Scheduler interfaces. Exceptions: /\\* An attempt was made to request an activity for a resource that is not found within the factory data available to this SchedulingManager. \\*/ exception ResourceNotFound { AbstractIF::Resource requestedObject;}; $/ ^ { * }$ An attempt was made to request an activity for a material group that is not found within the factory data available to this SchedulingManager. \\*/ exception MaterialGroupNotFound { AbstractIF::MaterialGroup requestedObject;}; $/ ^ { * }$ An attempt was made to request an activity for a durable that is not found within the factory data available to this SchedulingManager. \\*/ exception DurableNotFound { DurablesManagement::Durable requestedObject;}; Published Events:. $/ ^ { * }$ The ActivityListAvailable event is published by the Scheduling Component to notify event subscribers that a new ActivityList containing changes is available. The generation of ActivityListAvailable"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations (Part 5)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # 6.1.4  Scheduling Component Declarations\n\nContent: events is controlled as an implementation specific configuration choice. \\*/"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityListAvailable",
    "content": "$/ ^ { * }$ The ForecastListAvailable event is published by the Scheduling Component to notify event subscribers that a new Forecast is available. ForecastList generation is potentially a compute-intensive operation which may benefit from event notification when an updated forecast is available. The generation of ForecastListAvailable events is controlled as an implementation specific configuration choice. \\*/"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ForecastListAvailable",
    "content": "Provided Services:  \n/\\* Return an activity list for this resource. The activity list will contain the number of existing activities requested in listCount in maximum.  If “listCount” is blank, the activity list shall contain all existing activities.  A decision will be represented by an activity list with only one activity option. The ActivityOptions returned by this operation may be ProductionActivity, MaintenanceActivity or DoNothing ActivityTypes. Although Resources are typically immobile (such a Equipment), some Resources may also be subject to TransportActivities. \\*/"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForResourceByCount (",
    "content": "in AbstractIF::Resource aResource) in short listCount) raises (Global::FrameworkErrorSignal, ResourceNotFound);  \n/\\* Return an activity list for this material group. The activity list will contain the number of existing activities requested in listCount in maximum. If “listCount” is blank, the activity list shall contain all existing activities.  A decision will be represented by an activity list with only one activity option. The ActivityOptions returned by this operation may be ProductionActivity, TransportActivity or DoNothing ActivityTypes. \\*/"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount ( (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount (\n\nContent: in AbstractIF::MaterialGroup aMaterialGroup, in short listCount) raises (Global::FrameworkErrorSignal, MaterialGroupNotFound); /\\* Return an activity list for this durable. The activity list will contain the number of existing activities requested in listCount in maximum. If “listCount” is blank, the activity list shall contain all existing activities. A decision will be represented by an activity list with only one activity option. The ActivityOptions returned by this operation may be ProductionActivity, MaintenanceActivity, TransportActivity or DoNothing ActivityTypes. \\*/ ActivityList whatNextForDurableByCount ( in DurablesManagement::Durable aDurable) in short listCount) raises (Global::FrameworkErrorSignal, DurableNotFound); $/ ^ { * }$ Return an activity list containing the next TransportActivity for this material group. A decision will be represented by an activity list with only one activity option. The ActivityOptions returned by this operation may be TransportActivity or"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount ( (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount (\n\nContent: DoNothing ActivityTypes. This operation is defined to support a factory operating with a “push” model that pushes material to the next storage or production machine. \\*/ ActivityList whereNextForMaterialGroup (in AbstractIF::MaterialGroup aMaterialGroup) raises (Global::FrameworkErrorSignal, MaterialGroupNotFound); /\\* Return an activity list containing the next TransportActivity for this durable. A decision will be represented by an activity list with only one activity option. The ActivityOptions returned by this operation may be TransportActivity or DoNothing ActivityTypes. This operation is defined to support a factory operating with a “push” model that pushes material to the next storage or production machine. \\*/ ActivityList whereNextForDurable (in DurablesManagement::Durable aDurable) raises (Global::FrameworkErrorSignal, DurableNotFound); $/ ^ { * }$ Return a forecast list containing future activities for this resource. The forecast list will contain all activities projected to"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount ( (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount (\n\nContent: start before the lookAheadTime, but which have not yet been started. The forecast list may include a mix of different activity types. \\*/ ForecastList forecastForResourceByTime ( in AbstractIF::Resource aResource, in Global::TimeStamp lookAheadTime) raises (Global::FrameworkErrorSignal, ResourceNotFound); /\\* Return a forecast list containing future activities for this material group. The forecast list will contain all activities projected to start before the lookAheadTime, but which have not yet been started. The forecast list may include a mix of different activity types. \\*/ ForecastList forecastForMaterialGroupByTime in AbstractIF::MaterialGroup aMaterialGroup, in Global::TimeStamp lookAheadTime) raises (Global::FrameworkErrorSignal, MaterialGroupNotFound); /\\* Return a forecast list containing future activities for this durable. The forecast list will contain all activities projected to start before the lookAheadTime, but which have not yet been started. The forecast list may"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount ( (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount (\n\nContent: include a mix of different activity types. \\*/ ForecastList forecastForDurableByTime in DurablesManagement::Durable aDurable, in Global::TimeStamp lookAheadTime) raises (Global::FrameworkErrorSignal, DurableNotFound); /\\* Return a forecast list containing future activities for this resource. The forecast list will contain the number of upcoming activities requested in lookAheadCount. The forecast list may include a mix of different activity types. $^ { * } I$ ForecastList forecastForResourceByCount ( in AbstractIF::Resource aResource, in short lookAheadCount) raises (Global::FrameworkErrorSignal, ResourceNotFound); $/ ^ { * }$ Return a forecast list containing future activities for this material group. The forecast list will contain the number of upcoming activities requested in lookAheadCount. The forecast list may include a mix of different activity types. \\*/ ForecastList forecastForMaterialGroupByCount ( in AbstractIF::MaterialGroup aMaterialGroup, in short lookAheadCount) raises"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount ( (Part 5)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # ActivityList whatNextForMaterialGroupByCount (\n\nContent: (Global::FrameworkErrorSignal, MaterialGroupNotFound); /\\* Return a forecast list containing future activities for this durable. The forecast list will contain the number of upcoming activities requested in lookAheadCount. The forecast list may include a mix of different activity types. $^ { * } I$ ForecastList forecastForDurableByCount ( in DurablesManagement::Durable aDurable, in short lookAheadCount) raises (Global::FrameworkErrorSignal, DurableNotFound); Contracted Services: None. Dynamic Model: Inherited from ComponentManager. }; // SchedulingManager"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # APPENDIX 1COMPLETE LISTING OF SCHEDULING COMPONENT IDL",
    "content": "NOTE: The material in this appendix is an official part of SEMI E105 and was approved by full letter ballot procedures on August 28, 2000 by North American Regional Standards Committee.  \nmodule CIMFW  \n#include <Global.idl> #include <AbstractIF.idl> #include <FactoryOperations.idl> #include <DurablesManagement.idl> #ifndef _CIMFW_SCHEDULING_ #define _CIMFW_SCHEDULING_"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # module Scheduling {",
    "content": "enum ActivityType { ProductionActivity, TransportActivity, MaintenanceActivity, DoNothing };"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityOption {",
    "content": "ActivityType activityType; short prioritySequenceNumber; Global::TimeStamp deadline; AbstractIF::ResourceSequence resources; AbstractIF::MaterialGroupSequence materialGroups; DurablesManagement::DurableSequence durables; Global::Properties activitySpec; }; // ActivityOption"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast { (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast {\n\nContent: ActivityType activityType; short timeSequenceNumber; AbstractIF::ResourceSequence resources; AbstractIF::MaterialGroupSequence materialGroups; DurablesManagement::DurableSequence durables; Global::TimeStamp projectedStart; Global::TimeStamp projectedFinish; Global::Properties activitySpec; }; // ActivityForecast typedef sequence <ActivityOption> ActivityList; typedef sequence <ActivityForecast> ForecastList; interface SchedulingManager : FactoryOperations::ComponentManager { exception ResourceNotFound { AbstractIF::Resource requestedObject;}; exception MaterialGroupNotFound { AbstractIF::MaterialGroup requestedObject;}; exception DurableNotFound { DurablesManagement::Durable requestedObject;}; ActivityList whatNextForResourceByCount ( in AbstractIF::Resource aResource) in short listCount) raises (Global::FrameworkErrorSignal, ResourceNotFound); ActivityList whatNextForMaterialGroupByCount ( in AbstractIF::MaterialGroup aMaterialGroup, in short listCount) raises (Global::FrameworkErrorSignal,"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast { (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast {\n\nContent: MaterialGroupNotFound); ActivityList whatNextForDurableByCount ( in DurablesManagement::Durable aDurable) in short listCount) raises (Global::FrameworkErrorSignal, DurableNotFound); ActivityList whereNextForMaterialGroup (in AbstractIF::MaterialGroup aMaterialGroup) raises (Global::FrameworkErrorSignal, MaterialGroupNotFound); ActivityList whereNextForDurable (in DurablesManage raises (Global::FrameworkErrorSignal, DurableNotFound); ForecastList forecastForResourceByTime ( in AbstractIF::Resource aResource, in Global::TimeStamp lookAheadTime) raises (Global::FrameworkErrorSignal, ResourceNotFound); ForecastList forecastForMaterialGroupByTime ( in AbstractIF::MaterialGroup aMaterialGroup, in Global::TimeStamp lookAheadTime) raises (Global::FrameworkErrorSignal, MaterialGroupNotFound); ForecastList forecastForDurableByTime ( in DurablesManagement::Durable aDurable, in Global::TimeStamp lookAheadTime) raises (Global::FrameworkErrorSignal, DurableNotFound); ForecastList forecastForResourceByCount in"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast { (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast {\n\nContent: AbstractIF::Resource aResource, in short lookAheadCount) raises (Global::FrameworkErrorSignal, ResourceNotFound); ForecastList forecastForMaterialGroupByCount ( in AbstractIF::MaterialGroup aMaterialGroup, in short lookAheadCount) raises (Global::FrameworkErrorSignal, MaterialGroupNotFound); ForecastList forecastForDurableByCount ( in DurablesManagement::Durable aDurable, in short lookAheadCount) raises (Global::FrameworkErrorSignal, DurableNotFound); }; // SchedulingManager }; // module Scheduling #endif // _CIMFW_SCHEDULING_ }; // mdoule CIMFW NOTICE: SEMI makes no warranties or representations as to the suitability of the standard set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast { (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # struct ActivityForecast {\n\nContent: attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT\n\nContent: NOTE: This related information is not an official part of SEMI E105. This related information was approved for publication by full letter ballot procedures on August 28, 2000. NOTE: This related information is included with the Scheduling Component specification to aid the readers in understanding the intent and use of the standard. R1-1 The Scheduling Component has two types of interfaces: A. Scheduling and Dispatching Service Interface - this is the interface for services provided by the Scheduling Component in response to requests from the Factory Operations Component or some other client. It also includes interfaces to support asynchronous actions for an active scheduler or dispatcher which provides the same information content on an event driven basis rather than requiring a client request. This is included within the scope of the current standard. B. Scheduling and Dispatching Factory Input Interface - this is the"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT\n\nContent: interface used by other components to provide updated information on factory state used by the Scheduling Component in making scheduling and dispatching decisions. The updates are typically provided by other CIM Framework components to the Scheduling Component asynchronously. This is NOT included within the scope of the current standard. R1-2 The goal for CIM Framework standards is to eventually standardize both of these types of interface. However, at this time there are two major issues that prevent inclusion of the Factory Input Interface to the Scheduling Component. 1. There is inadequate consensus on the technical maturity of the currently available asynchronous input mechanisms. While the CIM Framework specifies events for delivery via an Event Broker mechanism, it is not assumed that the quality of service for events will include guaranteed delivery and performance adequate for keeping a Scheduling Component current"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT\n\nContent: with real-time factory state changes. For a more complete discussion of the CIM Framework technical architecture issues, see SEMI E96. 2. Some key components of the CIM Framework needed to provide factory state to the Scheduling Component have not yet been approved as SEMI standards. R1-3 The following approach is suggested as a possible way to address Scheduling Component Input in the future: 1. Identify the most important inputs required by the Scheduling Component in a follow-on ballot for the Scheduling Component to be used during the interim period until the full component specifications containing those events are approved as SEMI standards. 2. Suppliers who implement the Scheduling Component should take advantage of existing standard interfaces defined in adopted CIM framework standards and use this experience as expert input on future updates to this standard. 3. Encourage technical studies to provide added"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 1IMPLEMENTATION GUIDANCE FOR INPUT OF FACTORY STATEINFORMATION TO THE SCHEDULING COMPONENT\n\nContent: understanding of the tradeoffs and limitations that impact standardization of this interface in the future."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING. (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING.\n\nContent: NOTE: This related information is not an official part of SEMI E105. This related information was approved for publication by full letter ballot procedures on August 28, 2000. These scenarios show possible implementations of the SEMI Scheduling Component. The information shown here is intended to be a guide rather than describe prescriptive implementation rules. Some of the message sequences and implied functionality included in these scenarios will vary across different implementations. This section focuses primarily on the interface between the Scheduling Component and factory operations component. The messaging between the lower level components is for informational purposes, and may not actually reflect what is developed in the future when standards for those components have been completed. R2-1 Scenario 1 — Simulator Based Scheduler/Dispatcher, Stocker is Not Managed by Scheduling Component R2-1.1 Lot 1 is scheduled for equipment 2 at 10:00. Lot is held in stocker"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING. (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING.\n\nContent: until ready to start on equipment 2 Factory operations makes the carrier delivery decisions. Figure R2-1 Scenario Case 1 Figure R2-2 Scenario Case 1 Continued R2-2 Scenario 2 — Simulator Based Scheduler/Dispatcher, Stocker is Not Managed by Scheduling Component R2-2.1 Lot 1 is scheduled for equipment 2. Lot is transported directly from Eqp1 to Eqp 2. Factory Operations makes the carrier delivery decisions. Figure R2-3 Scenario Case 2 Figure R2-4 Scenario Case 2 Continued R2-3 Scenario 3 — Dispatch List Based Scheduler/Dispatcher, Stocker is Not managed by Scheduling Component R2-3.1 Dispatch list based. EQ1- $. >$ EQ2. After lot 1 processing on EQ1 is finished, Scheduler assigns lot 1 to EQ2. FO checks the EQ2 port status and finds the available port. FO makes the logistic decision to transfer lot 1 from EQ1 to EQ2 directly. Scheduler does not assign lots to Stocker. In this scenario 3, the direct transfer “from EQ1 to EQ2” is described. $( ^ { * } 1 )$ FO checks port"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING. (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING.\n\nContent: status on tool. Finds port available. Delivers lot directly to EQ2. R2-4 Scenario 4 — Dispatch List Based Scheduler/Dispatcher, Stocker is Not managed by Scheduling Component R2-4.1 Dispatch list based. EQ1- $. >$ Stocker->EQ2. After lot 1 processing on EQ1 is finished, Scheduler assigns lot 1 to EQ2. FO checks the EQ2 port status and finds No available port. FO makes the logistic decision to transfer lot 1 from “EQ1 to Stocker $2 ^ { \\circ }$ instead of “from EQ1 to EQ2”. Scheduler does not assign lots to Stocker. In this scenario 4, the separate transfers “from EQ1 to Stocker $2 ^ { \\circ }$ and “from Stocker 2 to EQ2” are described. $( ^ { * } 1 )$ FO checks port status on tool. Finds no ports available. Delivers lot to stocker close to tool. R2-5 Scenario 5 — Dispatch List Based Scheduler/Dispatcher, Stocker is managed by Scheduling Component R2-5.1 Dispatch list based. EQ1- $\\cdot >$ EQ2. After lot 1 processing on EQ1 is finished, Scheduler assigns lot 1 to EQ2."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING. (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING.\n\nContent: Scheduler additionally checks the EQ2 port status and finds the available port. Scheduler makes the logistic decision to transfer lot 1 from EQ1 to EQ2 directly. Scheduler assigns lots to Stocker when the next assigned equipment is not available. In this scenario 5, the direct transfer “from EQ1 to EQ2” is described. R2-6 Scenario 6 — Dispatch List Based Scheduler/Dispatcher, Stocker is managed by Scheduling Component R2-6.1 Dispatch list based. EQ1- $. >$ Stocker->EQ2. After lot 1 processing on EQ1 is finished, Scheduler assigns lot 1 to EQ2. FO checks the EQ2 port status and finds the available port. Scheduler makes the logistic decision to transfer lot 1 “from EQ1 to Stocker $2 ^ { \\circ }$ instead of “from EQ1 to EQ2”. Scheduler assigns lots to Stocker when the next equipment is not available. In this scenario 6, the separate transfers “from EQ1 to Stocker $2 ^ { \\circ }$ and “from Stocker 2 to EQ2” are described. $( ^ { * } 1 )$ Scheduler/Dispatcher checks the next"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING. (Part 5)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 2 SCENARIOS FOR SCHEDULING AND DISPATCHING.\n\nContent: equipment EQ2 status and port availability. EQ2 Status: Processing, Available Ports: No vacant port Scheduler/Dispatcher decides to transfer lot 1 to Stocker 2."
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER (Part 1)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER\n\nContent: NOTE: This related information is not an official part of SEMI E105. This related information was approved for publication by full letter ballot procedures on February 1, 2001. The assumed two cases of scheduler/dispatcher were used to have an analysis and to make scenarios when the interfaces defined in SEMI E105 ware developed. This related information describes the assumed two case of scheduler/dispatcher to make easier for the standard user to understand SEMI E105. SEMI E105 does not limit the case of Scheduler/Dispatcher to these two assumed scheduler/dispatcher. R3-1 Dispatch List Based Scheduler/Dispatcher R3-1.1 Basic Functions Dispatch List Based Scheduler/Dispatcher has a waiting lots list in each operation and has a capability to prioritize the existing lots. Figure R3-1 R3-1.2 Case 1 – Factory Operation decides storage machine (Refer to Scenarios R2-3 and R2-4) Figure R3-2 1. Carrier A processing on Eq.1 (Operation 1000) is finished. 2. Next operation for Carrier"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER (Part 2)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER\n\nContent: A is “2000” and the production equipment in operation “2000”is Eq.2 only. 3. Factory Operation makes the logistic decision . (1) Transfer Carrier A from Eq.1 to Eq.2 or (2) Transfer Carrier A from Eq.1 to Stocker 2. 4. Factory Operation uses the following interfaces defined in section 6.1.6. (\\*1) • whatNextForResourceByCount • whatNextForMaterialGroupByCount • whatNextForDurableByCount 5. Factory Operation dose not use the following interfaces defined in section 6.1.6. $( ^ { * } 1 )$ • whereNextForMaterialGroup • whereNextForDurable 6. Scheduler / Dispatcher shows the waiting Lot list in operation $^ { 6 6 } 2 0 0 0 ^ { , 9 }$ (Eq.2) to Factory Operation R3-1.2 Case 2 – Scheduler / Dispatcher decides storage machine (Refer to Scenarios R2-5 and R2-6) 1. Carrier A processing on Eq.1 (Operation 1000) is finished. 2. Next operation for Carrier A is “2000” and the production equipment in operation “2000”is Eq.2 only. 3. Scheduler / Dispatcher checks the port status of Eq.2 and"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER (Part 3)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER\n\nContent: makes the logistic decision . (1) Transfer Carrier A from Eq.1 to Eq.2 or (2) Transfer Carrier A from Eq.1 to Stocker 2. 4. Factory Operation uses the following interfaces defined in section 6.1.6. (\\*1) • whatNextForResourceByCount • whereNextForMaterialGroup whereNextForDurable 5. Factory Operation dose not use the following interfaces defined in section 6.1.6. $( ^ { * } 1 )$ whatNextForMaterialGroupByCount whatNextForDurableByCount R3-2 Simulator Based Scheduler/Dispatcher (Refer to Scenarios R2-1 and R2-2) R3-2.1 Basic Functions Simulator Based Scheduler / Dispatcher has a forecast list for each production equipment and provides the lot list with forecast time stamp to Factory Operation. Factory Operation uses “forecastFor…” interfaces defined in section 6.1.6. $( ^ { * } 1 )$ Figure R3-3 Remarks In $( ^ { * } 1 )$ , the conformance of each interfaces to each case of Scheduler/Dispatcher are described. These are only for reference and are not the requirement to the"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER (Part 4)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER\n\nContent: Scheduler/Dispatcher product. For example, Simulator Based Scheduler / Dispatcher may support “whatNextFor…” interfaces. NOTICE: SEMI makes no warranties or representations as to the suitability of the standard set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that"
  },
  {
    "title": "SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER (Part 5)",
    "content": "Title: SEMI E105-0701 PROVISIONAL SPECIFICATION FOR CIM FRAMEWORK SCHEDULING COMPONENT - # RELATED INFORMATION 3 ASSUMED CASE OF SCHEDULER/DISPATCHER\n\nContent: determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility. Copyright by SEMI® (Semiconductor Equipment and Materials International), 3081 Zanker Road, San Jose, CA 95134. Reproduction of the contents in whole or in part is forbidden without express written consent of SEMI."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the Japanese Information & Control Committee. Current edition approved by the Japanese Regional Standards Committee on July 19, 2002.  Initially available at www.semi.org October 2002; to be published November 2002. Originally published March 2001; previously published November 2001."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 1  Purpose",
    "content": "1.1  The objective of this document is standardization of the specific data format passed from the test equipment to the Yield Management System. The Yield Management System is a kind of data server for detail test data and geometrical defect data of patterns on a wafer as described in the Terminology section of this document.  \n1.2  This document assumes a Yield Management System in which test equipment electrical failure information is managed and analyzed in an integrated manner. Examples of test equipment failure information include bit map data, bin data, and inpsection information obtained by devices such as wafer inspection equipment and review tools. Standardization of the data file format helps to reduce the development burden on customers and related vendors."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 2  Scope",
    "content": "2.1  This document specifies the data file format for transferring from test equipment to a Yield Management System.  \n2.2  This document is an extension of the general map data item standard, i.e. SEMI G81, and the general map data format document, currently under development. This document does not redefine the general specification.  \n2.3  The scope of this document is just defining data items and their formats.  Data file creation methods, data creating environments and file naming conventions are outside of the scope of this document.  Also, communication protocols to transfer the data are beyond the scope of this document.  \n2.4  This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the user of this standard to establish appropriate safety health practices and determine the applicability or regulatory limitations prior to use."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 3  Limitations",
    "content": "3.1  This standard defines extensional data for YMS Link Data map for generic test data map standardized  \nby SEMI G81 and G85, data format of each item for YMS Link Data is defined independently as extra definition here."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 4.1  SEMI Standards",
    "content": "SEMI E5 — SEMI Equipment Communication Standard 2 Message Content (SECS-II) SEMI E30.1 — Inspection and Review Specific Equipment Model (ISEM) SEMI G81 — Specification for Map Data Items SEMI G85 — Specification for Map Data Format  \nNOTE 1: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1  Defintions",
    "content": "5.1.1  analog data — One of three categories of data: measured values such as voltage or current obtained when test equipment measures a semiconductor device’s electrical characteristics, parameter values which are test parameters when measuring, and limit values which are decision parameters if test results are pass or fail."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1.2  bin data — same as Category below. (Part 1)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1.2  bin data — same as Category below.\n\nContent: 5.1.3 category — data indicating the type of electric failure or rank of characteristics of die tested by the test equipment. Used in the same manner as Bin Data in this standard. 5.1.4 cell-logical-address gives the electrical location of a memory cell in a die. 5.1.5 cell-logical-io-number — number identifying the IO data which can be simultaneously electrically accessed within a memory device. 5.1.6 cell-physical-address — gives location of a memory cell in a die on two-dimensional plane. 5.1.7 die — a unit equivalent to one die on a wafer. Also known as Chip. 5.1.8 electrical failure information failure information generated by test equipment; e.g. Bit Map Data, Bin Data and Analog Data. 5.1.9 error class — specifies the type of electrical failure configuration in a memory cell group. Bit-fail, line-fail and block-fail are examples. 5.1.10 fail bit map data — data representing memory cell electrical failure information according to its location information, in units of the die"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1.2  bin data — same as Category below. (Part 2)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1.2  bin data — same as Category below.\n\nContent: or wafer. 5.1.11 inspection information — inspection results for a wafer, indicating defect location and defect details obtained as the result of inspection used in wafer fabrication and the inspection process, such as appearance inspection, contaminant inspection, etc. 5.1.12 test equipment — equipment which tests the electrical characteristics and functions of semiconductor devices. 5.1.13 test program name — name of program used on test equipment when testing a die electrically. 5.1.14 yield management system (YMS) — a system that stores visual inspection data of geometrical defects on wafer and electrical test data of each die. The system processes those data statistically to discover correlation between them. Correlation leads to discovery the cause of failures and understanding of production situation in order to help improve yield. Defect data is standardized in SEMI E30.1 (ISEM). 6.2 Map Data Format — All map data formats appear in map data except those standardized in"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1.2  bin data — same as Category below. (Part 3)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 5.1.2  bin data — same as Category below.\n\nContent: this document shall be specified in the common map data format document, SEMI G85."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 7.1  General File Format",
    "content": "NOTE 2: A standard for Data representation is currently under development."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 8  Description",
    "content": "8.1  The fail-bit map data item specifications defined in this document are shown in Table 2.  The columns in this table are described in the following sections.  \n8.1.1  Item Name Column — The name by which the data item is referenced.  \n8.1.2  Data Type Column — The type of the data as defined in Table 1.  \nTable 1  Data Types and Sizes"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 6  Requirements",
    "content": "6.1  Map Data Item — All map data items appear in map data except those standardized in this document shall be specified in the common map data item document, SEMI G81."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 8.1.3  Size Column — See SEMI G81.",
    "content": "8.1.4  Description Column — See SEMI G81.  \n8.1.5  Coordinate System Conventions — See SEMI G81.  \nTable 2  Data Items for YMS Link  \nTable 3  Data Items for FailBitDataTemplate  \nTable 4  Data Items for AnalogDataTemplate  \nTable 5  Unit Table  \nTable 6  Prefix Symbol Table  \nExample:  \n$$\n\\begin{array} { r } { \\begin{array} { l l } { \\mathrm { [ M e a s u r e U n i t ] } = } & { \\mathrm { \\Lambda ^ { \\circ } V } ^ { \\prime } \\quad \\mathrm { o r ~ \\hat { \\Omega } m V } } \\\\ { \\mathrm { [ P a r a m e t e r U n i t ] } = } & { \\mathrm { \\Lambda ^ { \\circ } A } ^ { \\prime } \\quad \\mathrm { o r ~ \\hat { \\Omega } u \\hat { \\Sigma } } } \\end{array} } \\end{array}\n$$  \nThe units above are a subset of those in Section 9 (“Units of Measure”) of SEMI E5 (SECS-II).  \n8.1.6  Map Data Format of YMS Link — This section is reserved for data format of above items.  \n(The case of BottomLeft)"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # 9   Map Data Format for YMS Link Data",
    "content": "9.1  Because this standard defines extensional data for YMS Link Data map for generic test data map standardized by SEMI G81 and G85, data format of each item for YMS Link Data is defined independently as extra definition here.  \n9.2  It is very appropriate for this document to define such format with XML Schema, for SEMI G85 defines the generic test data map in XML.  List 1 below defines YMS Link Data map format."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 1)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: <xsd:schema xmlns:xsd=\" http://www.w3.org/2001/XMLSchema\" xmlns:mdf=\" http://www.semi.org/ATE\" taregtNamespace $= \"$ http://www.semi.org/YMSLDF\" > <xsd:import namespac $\\mathrel { \\mathop : } =$ \" http://www.semi.org/ATE\" /> <! -- Commonized Part may be imported from schemaLocation \" somehere/mdfSchema.xsd\" --> <xsd:complexType name $\\circleddash$ \" ymsldfMap\" $>$ <xsd:extension base=\" Map\" $>$ <xsd:all> <xsd:element name $\\ c = ^ { \\prime }$ Comment\" type $\\ c = ^ { \\prime }$ \" string256Type\" use=\" optional\" $/ >$ <xsd:element name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\beta } }$ \" TestProgramName\" type=\" string256Type\" use $\\mathrel { \\mathop : } \\stackrel { \\because } { }$ optional\" $/ >$ <xsd:element name $\\cdot = \"$ TestEquipmentId\" type $\\ c = \"$ \" string256Type\" use $\\ c =$ \" optional\" $/ >$ <xsd:element name $\\mathrel { \\mathop = } \\stackrel { \\prime } { }$ DieCoordinate\" type=\" dieCoordinateType\" use=\" optional\" $/ >$ <xsd:element name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 2)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: ErrorClassList\" type $\\ c =$ \" errorClassListType\" use=\" optional\" $/ >$ <xsd:element name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ FailBitDataTemplate\" type=\" failBitDataTemplateType\" use=\" optional\" /> <xsd:element name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" FailBitData\" type=\" failBitDataType\" use=\" optional\" $/ >$ <xsd:element name $\\cdot = \"$ AnalogDataTemplate\" type=\" analogDataTemplateType\" use=\" optional\" $/ >$ <xsd:element name $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ \" Invalid\" type=\" string14Type\" use=\" optional\" $/ >$ <xsd:element name $\\cdot = \"$ AnalogData\" type $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" failBitDataType\" use $\\boldsymbol { = } \"$ optional\" $/ >$ <xsd:element name $\\mathrel { \\mathop = } \\stackrel { \\prime } { }$ ErrorTotal\" type=\" unsignedInt10Type\" use $\\boldsymbol { = } \"$ optional\" $/ >$ <xsd:element name $\\mathrel { \\mathop = } \\stackrel { \\prime } { }$ TestDie\" type=\" unsignedInt10\" use=\" optional\" $/ >$ </xsd:all> </xsd:extension>"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 3)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: </xsd:complexType> <! -- EnumSchemas --> <xsd:simpleType name $\\ c = \\cfrac { \\ d } { \\ d t }$ \" dieCoordinateType\" > <xsd:restriction base=\" xsd:string\" $>$ <xsd:enumeration value=\" TopLeftXY\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" BottomLeftXY\" /> <xsd:enumeration value $= \"$ TopLeftYX\" /> <xsd:enumeration value $= \"$ BottomLeftYX\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\stackrel { \\prime \\prime } { = }$ TopRightXY\" /> <xsd:enumeration value $\\bullet ^ { \\mathfrak { n } }$ BottomRightXY\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { l }$ TopRightYX\" /> <xsd:enumeration value $\\boldsymbol { = } \"$ BottomRightYX\" /> </xsd:restriction> </xsd:simpleType> <! -- Complicated Lists --> <xsd:complexType name=\" errorClassListType\" $>$ <xsd:element name=\" ErrorClass\" type $\\boldsymbol { = } \"$ errorClassType\" minOccurs=\" 1\" maxOccurs=\" 255\" /> </xsd:complexType> <xsd:complexType name=\" errorClassType\" > <xsd:sequence> <xsd:element name=\""
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 4)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: ErrorClassNumber\" type=\" charIntegerType\" /> <xsd:element name $\\circleddash$ \" ErrorQuality\" type=\" string16Type\" use=\" optional\" $/ >$ <xsd:element name $\\circleddash$ \" ErrorDescription\" type $\\ l = \"$ string256Type\" use=\" optional\" /> </xsd:sequence> </xsd:complexType> <xsd:complexType name $\\ c =$ \" failBitDataType\" > <xsd:sequence> <xsd:element name $\\ c =$ \" failBitDataUnit\" type $\\circleddash$ \" failtBDataUnitType\" minOccurs=\" 1\" maxOccurs=\" unbounded\" /> </xsd:sequence> </xsd:complexType> <xsd:simpleType name $= ^ { \\prime }$ \" failBitDataUnitType\" > <xsd:list itemType=\" failBitDataParticleType\" /> </xsd:simpleType> <xsd:simpleType name $= \"$ failBitDataParticleType\" $>$ <xsd:union memberTypes $\\ c = \"$ Seq XAddress YAddressXMin XMax YMin YMax XCenter YCenter XSize YSize Area DefectCate XMinPhysic XMaxPhysic YMinPhysic YMaxPhysic IoNumber XMinLogic XMaxLogic YMinLogic YMaxLogic\" $/ >$ </xsd:simpleType> <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" Seq\" type=\""
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 5)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: unsignedInt10Type\" /> <xsd:simpleType name $\\ c = \\ \"$ \" XAddress\" type $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" int5Type\" /> <xsd:simpleType name $: = \"$ \" YAddress\" type $\\circleddash$ \" int5Type\" /> <xsd:simpleType name $\\ c = ^ { \\prime }$ \" XMin\" type $\\ c =$ \" float14Type\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" XMax\" type=\" float14Type\" /> <xsd:simpleType name=\" YMin\" type=\" float14Type\" /> <xsd:simpleType name=\" YMax\" type=\" float14Type\" /> <xsd:simpleType name $\\ c = \\cfrac { \\ d } { \\ d t }$ \" XCenter\" type $\\ c =$ \" float14Type\" /> <xsd:simpleType name $\\mathbf { \\tau } = \\mathbf { \\dot { \\tau } }$ \" YCenter\" type $\\ O =$ \" float14Type\" /> <xsd:simpleType name $= ^ { \\mathsf { \\prime } }$ \" XSize\" type=\" float14Type\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" YSize\" type $\\circleddash$ \" float14Type\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" Area\" type=\" float14Type\""
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 6)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: /> <xsd:simpleType name=\" DefectCate\" type=\" string16Type\" /> <xsd:simpleType name=\" XMinPhysic\" type=\" unsignedInt10Type\" /> <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" XMaxPhysic\" type $\\ c = ^ { \\prime }$ \" unsignedInt10Type\" /> <xsd:simpleType name $\\cdot = \"$ YMinPhysic\" type $\\ c =$ \" unsignedInt10Type\" $/ >$ <xsd:simpleType name $\\ c =$ \" YMaxPhysic\" type $= \"$ unsignedInt10Type\" /> <xsd:simpleType name $\\mathrel { \\mathop : } = \\mathrel { \\mathop : }$ \" IoNumber\" ype $\\ c =$ \" unsignedInt10Type\" $/ >$ <xsd:simpleType name $\\ c = \\cfrac { \\ d } { \\ d t }$ \" XMinLogic\" type $\\mathrel { \\mathop : } =$ \" unsignedInt10Type\" /> <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" XMaxLogic\"type=\" unsignedInt10Type\" /> <xsd:simpleType name $\\mathrel { \\mathop : } = \\mathrel { \\mathop : }$ \" YMinLogic\" type=\" unsignedInt10Type\" /> <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" YMaxLogic\"type=\" unsignedInt10Type\" /> <xsd:complexType"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 7)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: name=\" analogDataType\" $>$ <xsd:sequence> <xsd:element name=\" analogDataUnit\" type=\" anoaglDataUnitType\" minOccurs=\" 1\" maxOccurs=\" unbounded\" /> </xsd:sequence> </xsd:complexType> <xsd:simpleType name $= \"$ analogDataUnitType\" $>$ <xsd:list itemType=\" analogDataParticleType\" /> </xsd:simpleType> <xsd:simpleType name=\" analogDataParticleType\" $>$ <xsd:union memberTypes=\" XAddress YAddress TestNumber Note Measure MeasureUnit Std Parameter ParameterUnit UpperLimitData LowerLimitData TestResult\" /> </xsd:simpleType> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\beta } }$ \" TestNumber\" type $\\ c =$ \" long7Type\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" Note\" type=\" string256Type\" $/ >$ <xsd:simpleType name $\\ c = \\cfrac { \\ d } { \\ d t }$ \" Mesure\" type=\" float14Type\" $/ >$ <xsd:simpleType name $\\mathrel { \\mathop : } \\stackrel { \\prime \\prime } { = }$ MeasureUnit\" type=\" analogUnitType\" /> <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 8)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: { \\Gamma }$ \" Std\" type=\" float14Type\" $/ >$ <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf { \\Lambda }$ \" Parameter\" type $\\ c =$ \" float14Type\" /> <xsd:simpleType name=\" ParameterUnit\" type=\" analogUnitType\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" UpperLimit\" type=\" float14Type\" /> <xsd:simpleType name=\" LowerLimit\" type=\" float14Type\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" TestResult\" type=\" string256Type\" /> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" analogUnitType\" > <xsd:restriction base $\\mathrel { \\mathop : } =$ \" xsd:string\" $>$ <maxLength Value=\" 4\" fixed $\\boldsymbol { \\mathbf { \\mathit { \\Phi } } } = \\boldsymbol { \\ \" }$ true\" /> </xsd:restriction> </xsd:simpleType> <xsd:simpleType name $\\mathbf { \\sigma } = \\mathbf { \\sigma }$ \" string14Type\" $>$ <xsd:restriction base $\\circleddash$ \" xsd:string\" $>$ <maxLength Value=\" 14\" fixed=\" true\" /> </xsd:restriction>"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 9)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: </xsd:simpleType> <xsd:simpleType name $\\mathrel { \\mathop : } \\frac { \\ d } { \\ d t }$ \" string16Type\" $>$ <xsd:restriction base $\\circleddash$ \" xsd:string\" $>$ <maxLength Value=\" 16\" fixed=\" true\" /> </xsd:restriction> </xsd:simpleType> <xsd:simpleType name $\\circleddash$ \" string256Type\" > <xsd:restriction base $\\ O =$ \" xsd:string\" $>$ <maxLength Value=\" 256\" fixed $= \"$ true\" /> </xsd:restriction> </xsd:simpleType> <xsd:simpleType name=\" charIntegerType\" $>$ <xsd:restriction base=\" xsd:unsignedShort\" $>$ <xsd:minInclusive value=\" 0\" /> <xsd:maxInclusive value=\" 255\" /> </xsd:restriction> </xsd:simpleType> <xsd:simpleType name=\" unsignedInt10Type\" > <xsd:restriction base $\\ O =$ \" xsd:unsignedLong\" $>$ <xsd:totalDigits value $\\ c =$ \" 10\" /> </xsd:restriction> </xsd:simpleType> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" int5Type\" $>$ <xsd:restriction base $\\circleddash$ \" xsd:int\" $>$ <xsd:totalDigits value $\\ c =$ \" 5\" /> </xsd:restriction>"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 10)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: </xsd:simpleType> <xsd:simpleType name $\\mathbf { \\alpha } = \\mathbf { \\dot { \\alpha } }$ \" long7Type\" $>$ <xsd:restriction base $\\ c =$ \" xsd:long\" $>$ <xsd:totalDigits value=\" 7\" /> </xsd:restriction> </xsd:simpleType> <xsd:simpleType name $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" float14Type\" $>$ <xsd:restriction base=\" xsd:float\" $>$ <xsd:pattern value=\" [1-9].\\ d{ 9} (+ | -)\\ d{ 2} \" /> </xsd:restriction> </xsd:simpleType> <xsd:complexType name $\\mathrel { \\mathop : } =$ \" failBitDataTemplateType\" $>$ <xsd:list itemType=\" failBitDataItemNameType\" $/ >$ </xsd:complexType> <xsd:simpleType name $\\ c = \\ \"$ \" failBitDataItemNameType\" $>$ <xsd:restriction base $\\ O =$ \" xsd:string\" $>$ <xsd:enumeration value $\\mathrel { \\mathop : } \\stackrel { \\prime \\prime } { = }$ Seq\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { l }$ XAddress\" /> <xsd:enumeration value $\\ c = ^ { \\prime }$ \" YAddress\" /> <xsd:enumeration value $= \"$ XMin\" /> <xsd:enumeration value $\\ c = \\ c ^ {"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 11)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: \\prime }$ \" XMax\" /> <xsd:enumeration value $= \"$ YMin\" /> <xsd:enumeration value $\\ c = ^ { \\prime }$ \" YMax\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { \\Lambda }$ \" XCenter\" $/ >$ <xsd:enumeration value=\" YCenter\" $/ >$ <xsd:enumeration value=\" XSize\" /> <xsd:enumeration value $\\boldsymbol { = } \"$ YSize\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" Area\" $/ >$ <xsd:enumeration value $\\mathbf { \\chi } = \\mathbf { \\ \" }$ DefectCate\" /> <xsd:enumeration value $= \"$ XMinPhysic\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { l }$ XMaxPhysic\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\stackrel { \\prime \\prime } { = }$ YMinPhysic\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" YMaxPhysic\" $/ >$ <xsd:enumeration value $= \"$ IoNumber\" $/ >$ <xsd:enumeration value $\\ c = ^ { \\prime }$ \" XMinLogic\" $/ >$ <xsd:enumeration value $= \"$ XMaxLogic\" /> <xsd:enumeration value $= \"$ YMinLogic\" /> <xsd:enumeration"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 12)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: value $\\bullet ^ { \\mathfrak { n } }$ YMaxLogic\" /> </xsd:restriction> </xsd:simpleType> <xsd:complexType name $\\mathrel { \\mathop : } =$ \" analogDataTemplateType\" > <xsd:list itemType $\\mathrel { \\mathop = } \\stackrel { \\prime } { }$ \" analogDataItemNameType\" /> </xsd:complexType> <xsd:simpleType name=\" analogDataItemNameType\" $>$ <xsd:restriction base=\" xsd:string\" $>$ <xsd:enumeration value $\\bullet ^ { \\mathfrak { n } }$ XAddress\" /> <xsd:enumeration value $\\ c = ^ { \\prime }$ \" YAddress\" /> <xsd:enumeration value $\\ c = ^ { \\prime }$ \" TestNumber\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\stackrel { \\prime \\prime } { = }$ Note\" /> <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { \\Gamma }$ \" Measure\" $/ >$ <xsd:enumeration value $\\mathrel { \\mathop : } \\mathbf { l }$ MeasureUnit\" $/ >$ <xsd:enumeration value $\\ c = ^ { \\prime }$ \" Std\" $/ >$ <xsd:enumeration value $\\bullet ^ { \\mathfrak { n } }$ Parameter\" /> <xsd:enumeration value $= \"$ ParameterUnit\" $/ >$"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 13)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: <xsd:enumeration value $\\mathrel { \\mathop : } \\stackrel { \\because } { = } \\mathrel { \\mathop : }$ UpperLimitData\" $/ >$ <xsd:enumeration value $= \"$ LowerLimitData\" $/ >$ <xsd:enumeration value $\\mathrel { \\mathop : } \\stackrel { \\prime \\prime } { = }$ TestResult\" $/ >$ </xsd:restriction> </xsd:simpleType> </xsd:schema> NOTICE: SEMI makes no warranties or representations as to the suitability of the standard set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials or equipment mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. By publication of this standard, SEMI"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format (Part 14)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # List 1.  YMS Link Data Map Format\n\nContent: takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # RELATED INFORMATION 1",
    "content": "NOTE: This related information is not an official part of SEMI E107, but was approved for publication by full letter ballot procedure on July 19, 2002."
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data (Part 1)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data\n\nContent: <? xml version $\\mathrm { \\Delta = ^ { \\gamma } 1 . 0 ^ { , 9 } 2 \\ > }$ <ymsldfMap xmlns:semi=”http://www.semi.org” WaferId $\\ c = ^ { \\ast }$ “wafer1234” FormatRevision $= ^ { 6 6 } 2 . 0 0$ \" > <Device ProductID $\\vDash$ ”product1234” LotId $\\ c = \\mathrm { i }$ ”lot1234” Orientation=”180” DeviceSizeX $\\mathbf { \\overrightarrow { \\mathbf { \\Lambda } } } = \\mathbf { \\overrightarrow { \\mathbf { \\Lambda } } }$ ” 4.8987000000e+ 03” DeviceSizeY $\\mathbf { \\bar { \\rho } } = \\mathbf { \\bar { \\rho } }$ ” 8.7395000000e+ 03” Rows $\\ c =$ ”4” Columns $\\ c = \\stackrel { \\cdot } { }$ ”1” BinType $\\risingdotseq$ ”Decimal” NullBin $= ^ { , , } 2 5 5 ^ { \\prime }$ ” CreateDate $\\risingdotseq$ ” 03-18-2000 15:07:50” Status $\\ c =$ ” prerepair_map”> <ReferenceDevice RefDevicePosX $\\varXi$ ”-2030.55” RefDevicePosY $\\mathbf { \\bar { \\rho } } = \\mathbf { \\bar { \\rho } }$ ”1427.98”/> <Bin BinCode $\\mathrel { \\mathop : } \\mathrm { = } \\mathrm { ? } 0 0 1$ ” BinCount=”35” BinQuality $\\ c =$ ”Pass”/> <Bin BinCode"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data (Part 2)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data\n\nContent: $\\mathrel { \\mathop : } \\stackrel { , } { \\mathop { ( ) } } 0 0 2 ^ { \\cdot }$ ” BinCount=”4” BinQuality $\\circleddash$ ”Fail”/> <Bin BinCode $\\mathrel { \\mathop : } \\mathrm { = } \\mathrm { \" } 0 0 3$ ” BinCount=”1” BinQuality $\\ c = \\mathrm { i }$ ”Fail”/> <Data> <Row><! [CDATA[255255255255255255255255255255]]></Row> <Row><! [CDATA[255255255255255255001002003002]]></Row> <Row><! [CDATA[255255255255255255255255255255]]></Row> </Data> </Device> <Comment>Engineering Test</Comment> <TestProgramName>pro123a</TestProgramName> <TestEquipmentId>tester1</TestEquipmentId> <DieCoordinate>BottomLeftXY</DieCoordinate> <ErrorClassList> <ErrorClass> <ErrorClassName>0</ErrorClassName> <ErrorClassQuality>bit-fail</ErrorClassQuality> </ErrorClass> <ErrorClass> <ErrorClassName>1</ErrorClassName> <ErrorClassQuality>line-fail</ErrorClassQuality> </ErrorClass> <ErrorClass> <ErrorClassName>2</ErrorClassName> <ErrorClassQuality>block-fail</ErrorClassQuality> </ErrorClass> </ErrorClassList> <FailBitDataTemplate>Seq"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data (Part 3)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data\n\nContent: XAddress YAddress XMin XMax YMin YMax XCenter YCenter XSize YSize Are DefectCate</FailBitDataTemplate> <FailBitData> <FailBitDataUnit> $\\times 1 8 1 8 0 . 1 2 3 4 5 0 0 0 \\mathrm { e } + ( 3 3 0 . 9 1 2 3 4 0 0 0 \\mathrm { e } + 0 3 1 . 0 6 3 6 7 0 0 0 \\mathrm { e } + 0 3 7 . 2 7 3 9 1 0 0 0 \\mathrm { e } + 0 3 0 . 5 1 7 8 9 5 0 0 \\mathrm { e } + 0 3 9 . 3 7 3 4 0 0 0 \\mathrm { e } + 0 3 7 . 3 7 3 4 0 0 0 \\mathrm { e } + 0 3 7 . 3 7 3 4 0 0 0 \\mathrm { e } + 0 3 7 . 3 7 3 4 0 \\mathrm { e } ^ { - 2 2 2 7 6 2 } \\mathrm { e } + 0 3 7 . 3 7 3 4 0 0 0 \\mathrm { e } + 0 3 7 . 3 7 3 4 0 \\mathrm { e } ^ { - 2 2 2 } \\mathrm { e } + 0 3 7 . 3 7 3 4 0 \\mathrm { e } ^ { - 2 2 } \\mathrm { e } + 0 3 7 . 3 7 3 4 0 \\mathrm { e } ^ { - 2 2 } \\mathrm { e } + 0 3 7 . 2 3 7 3 2 \\mathrm { e } + 0 3 7 . 2 3 4 2 \\mathrm { e } ^ { - 2 2 } \\mathrm { e } + 0 3 7 . 3 7 3 4 0 \\mathrm { e } ^ { - 2 2 } \\mathrm { e } + 0 3 7 . 2 3 7 3 2 \\mathrm { e } + 0 3 7 . 2 3 4 2 \\mathrm { e } ^ { - 2 2 } \\mathrm { e } + 0 3 7 . 2 3"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data (Part 4)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data\n\nContent: 7 3 2 \\mathrm { e } + 0 3 7 . 2 3 4 2 \\mathrm { e } ^ { - 2 2 } \\mathrm { e } + 0 3 7 . 3 7 3 4 0 \\mathrm { e } ^ { - 3 2 }$ $4 . 1 6 8 7 9 0 0 0 \\mathrm { e } + 0 3 \\ 0 . 7 8 8 8 9 0 0 0 \\mathrm { e } + 0 3 \\ 6 . 2 1 0 2 4 0 0 0 \\mathrm { e } + 0 3 \\ 4 9 9 1 9 6$ 623e+ 06 block-fail</FailBitDataUnit> <FailBitDataUnit $> 2 \\ 1 0 \\ 1 8 \\ 3 . 0 3 1 2 0 0 0 0 \\mathrm { e } + 0 . 3 \\ 3 . 0 3 2 1 0 0 0 0 \\mathrm { e } + 0 3 \\ 1 . 5 8 3 3 0 0 0 0 \\mathrm { e } + 0 3 \\ 1 . 5 8 5 8 0 0 0 0 0 \\mathrm { e } + 0 3 \\ 3 . 0 3 1 6 5 0 0 0 0 \\mathrm { e } + 0 3 \\$ $1 . 5 8 4 5 5 0 0 0 { \\mathrm { e } } + 0 3 ~ 9 . 0 0 0 0 0 0 0 { \\mathrm { 0 } } { \\mathrm { e } } { - } 0 1 ~ 2 . 5 0 0 0 0 0 0 0 { \\mathrm { e } } { + } 0 0 ~ 2 . 2 5 0 0 0 0 0 0 { \\mathrm { e } } { + } 0 0 ~ 1 . 7 1 6 ~ \\cdot$ bit-fail</FailBitDataUnit> </FailBitData> <AnalogDataTemplate>XAddress YAddress TestNumber Note Measure MeasureUnit TestNumber Comment Measure MeasureUnit TestResult TestNumber Comment Measure MeasureUnit"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data (Part 5)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-1 Example of YMS Link Data\n\nContent: TestResult</AnalogDataTempla <Invalid>99999</Invalid> <AnalogData> <AnalogDataUnit>8 18 100 CONTACT –0.600 V 200 IDD 125.0 mA PASS 300 IDDS 100.0 uA PASS</AnalogDataUnit> <AnalogDataUnit>9 18 100 CONTACT –0.567 V 200 IDD 120.2 mA PASS 300 IDDS 321.0 uA FAIL</AnalogDataUnit> <AnalogDataUnit>10 18 100 CONTACT –0.612 V 200 IDD 123.4 mA PASS 300 IDDS 99.4 uA PASS</AnalogDataUnit> <AnalogDataUnit>11 18 100 CONTACT 99999 V 200 IDD 99999 mA PASS 300 IDDS 99.4 uA PASS</AnalogDataUnit> </AnalogData> <ErrorTotal>234</ErrorTotal> <TestDie>3</TestDie> <Map>"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile (Part 1)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile\n\nContent: $\\begin{array} { r } { { \\bf { M a p } } = \\left\\{ \\begin{array} { r l } \\end{array} \\right. } \\end{array}$ FormatRevision $= ^ { 6 6 } 2 . 0 0 \"$ CreateDate $= ^ { \\ast } 0 3 \\ – 1 8 – 2 0 0 0 \\ 1 5 { : } 0 7 { : } 5 0 ^ { , }$ ProductId $\\mathbf { \\tau } = \\mathbf { \\tau }$ \" product1234\" LotId $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ \" lot1234\" WaferId $\\mathbf { \\tau } = \\mathbf { \\tau }$ “wafer1234” Status $\\mathbf { \\tau } = \\mathbf { \\tau }$ “prerepair_map” Comment $\\mathbf { \\tau } = \\mathbf { \\tau }$ \" Engineering Test\" TestProgramName $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ \" pro123a\" TestEquipmentId $\\ c =$ “tester1” WaferOrientation $= 1 8 0$ WaferSize $= 2 0 0$ D $\\mathrm { \\backslash e S i z e X } = 4 . 8 9 8 7 0 0 0 0 0 0 \\mathrm { e } + 0 3$ $\\mathrm { D i e S i z e Y } = 8 . 7 3 9 5 0 0 0 0 0 0 0 \\mathrm { e } + 0 3$ ReferenceDieList $\\mathbf { \\tau } = \\mathbf { \\tau }$ { $\\operatorname { P o s X } = - 2 0 3 0 . 5 5 \\operatorname { P o s Y } = 1 4 2 7 . 9 8$ } WaferCoordinate $\\"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile (Part 2)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile\n\nContent: c =$ “TopLeft” DieCoordinate $\\ c =$ “BottomLeftXY” MapType $\\ c =$ “Die” BinType $\\ c =$ “Decimal” BinList $\\mathbf { \\tau } = \\mathbf { \\tau }$ { Code $= 0 0 1$ Count $= 3 5$ Quality $\\ c =$ “Pass” Code $= 0 0 2$ Count $= 4$ Quality $\\ c =$ “Fail” Code = 003 Count ${ \\bf \\mu } = 1 { \\bf \\rho }$ Quality $\\ c =$ “Fail” } Data = { 007 018 001 008 018 002 009 018 003 010 018 002 } ErrorClassList $\\begin{array} { r } { { \\bf \\Psi } = \\left\\{ \\begin{array} { r l } \\end{array} \\right. } \\end{array}$ Class $= { } ^ { 6 6 } 0 ^ { \\mathrm { { ; } } }$ ” Quality $\\ c =$ \" bit-fail\" Class $\\ c =$ “1” Quality $\\ c =$ \" line-fail\" Class $\\ c =$ “2” Quality $\\mathbf { \\tau } = \\mathbf { \\tau }$ \" block-fail\" } FailBitDataTemplate $\\ c =$ Seq XAddress YAddress X DefectCate FailBitData $\\ c =$ { $1 8 \\ 1 8 \\ 0 . 1 2 3 4 5 0 0 0 \\mathrm { e } + 0 3 \\ 0 . 9 1 2 3 4 0 0 0 \\mathrm { e } + 0 3 \\ 1 . 0 6 3 6 7 0 0 0 \\mathrm { e } + 0 3 \\ 7 . 2 7 3 9 1 0 0 0 \\mathrm { e } + 0 3 \\ 0 . 1 2 3 4 0 0 0 0 \\mathrm { e } + 0 3 \\"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile (Part 3)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile\n\nContent: 0 . 1 4 2 3 4 0 0 0 0 \\mathrm { e } + 0 3 \\ 0 . 1 2 3 4 0 0 0 0 \\mathrm { e }$ $0 . 5 1 7 8 9 5 0 0 \\mathrm { e } + 0 3 4 . 1 6 8 7 9 0 0 0 \\mathrm { e } + 0 3 0 . 7 8 8 8 9 0 0 0 \\mathrm { e } +$ 03 6.21024000e+ 03 $4 . 8 9 9 1 9 6 2 3 { \\mathrm { e } } + 0 6 { \\mathrm { } } ^ { \\prime }$ block-fail\" $2 \\ 1 0 \\ 1 8 \\ 3 . 0 3 1 2 0 0 0 0 \\mathrm { e } + 0 3 \\ 3 . 0 3 2 1 0 0 0 0 \\mathrm { e } + 0 3 \\ 1 . 5 8$ 330000e+ 03 1.58580000e+ 03 3.03165000e+ 03 1.58455000e+ 03 9.00000000e-01 2.50000000e+ 00 $2 . 2 5 0 0 0 0 0 0 0 { \\mathrm { e } } + 0 0$ \" bit-fail\" } AnalogDataTemplate $\\ c =$ XAddress YAddress TestNumber Note Measure MeasureUnit TestNumber Comment Measure MeasureUnit TestResult TestNumber Comment Measure MeasureUnit TestResult Invalid $= { \\stackrel { } { \\cdot } } 9 9 9 9 9 9 ^ { \\mathrm { , } }$ ” AnalogData $\\begin{array} { r } { { \\bf \\Psi } = \\left\\{ \\begin{array} { r l } \\end{array} \\right. } \\end{array}$ 8 18 100 “CONTACT” –0.600 “V” 200 “IDD” 125.0 “mA” “PASS” 300 “IDDS” 100.0 “µ A”"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile (Part 4)",
    "content": "Title: SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # R1-2 Example Datafile\n\nContent: “PASS” 9 18 100 “CONTACT” –0.567 “V” 200 “IDD” 120.2 ”mA” “PASS” 300 “IDDS” 321.0 “µ A” “FAIL” 10 18 100 “CONTACT” –0.612 “V” 200 “IDD” 123.4 “mA” “PASS” 300 “IDDS” 99.4 “µ A” “PASS” 11 18 100 “CONTACT” 99999 “V” 200 “IDD” 99999 “mA” “PASS” 300 “IDDS” 99.4 “µ A” “PASS” } ErrorTotal $= 2 3 4$ TestDie $= 3$ }"
  },
  {
    "title": "SEMI E107-1102SPECIFICATION OF ELECTRIC FAILURE LINK DATA FORMAT FORYIELD MANAGEMENT SYSTEM - # Table R1-1  Items and Attributes Used Yield Management specific part",
    "content": "Table R1-2  Attributes Used for FailBitData  \nTable R1-3  Attributes Used for AnalogData  \nNOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacture' s instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice.  \nBy publications of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS)",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee.  Current edition approved by the North American Regional Standards Committee on December 10, 2004.  Initially available at www.semi.org February 2005; to be published March 2005.  Originally published July 2001; previously published November 2004."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 1  Purpose",
    "content": "1.1  This document provides standardized behavior for lithography, reticle inspection, and bare reticle stocker equipment.  It also provides for standardized communication with lithography, reticle inspection, and bare reticle stocker equipment.  This includes the coordination, execution, and completion of automated and manual reticle pod transfers to and from the equipment, transfer of reticles to and from the reticle pods, movement of the reticles within the equipment, identification and verification of both reticle pods and reticles, inspection and qualification of reticles, and other relevant information such as tracking reticle usage."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 2  Scope (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 2  Scope\n\nContent: 2.1 This is a standard that covers host and equipment communication for equipment that handles reticles. This only includes equipment that handles reticles both in and outside of a reticle pod. 2.2 The scope of this document is to define standards that facilitate the host’s knowledge and role in automated and manual reticle pod transfers, reticle transfers to and from the reticle pod, internal reticle movement, identification and verification of ReticleID, inspection and qualification of reticles, and tracking reticle usage. Specifically, this document provides state models and scenarios that define the host interaction with the equipment for the following: Reticle pod transfer between AMHS vehicles and production equipment, bare reticle stockers, and reticle inspection equipment reticle load ports. • Reticle transfers to/from lithography production equipment internal reticle library space. Equipment and reticle load port access mode switching. • Reticle Pod to load port association. • Reticle Pod ID verification and Reticle Pod slot map"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 2  Scope (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 2  Scope\n\nContent: verification. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 3  Limitations",
    "content": "3.1  This standard applies to semiconductor equipment that handles reticles and reticle carriers.  This standard is intended to be used for lithography production, bare reticle storage, and reticle inspection equipment.  It may or may not be applied to other types of equipment."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 4  Referenced Standards",
    "content": "4.1  SEMI Standards  \nSEMI E15 — Specification for Tool Load Port\nSEMI E30 — Generic Model for Communications and Control of Manufacturing Equipment (GEM)\nSEMI E39 — Object Services Standard: Concept, Behavior, and Services\nSEMI E41 — Exception Management (EM) Standard\nSEMI E53 — Event Reporting  \nSEMI E84 — Specification for Enhanced Carrier Handoff Parallel I/O interface SEMI E99 — The Carrier ID Reader/Writer Functional Standard: Specifcation of Concepts, Behavior, and Services SEMI E100 — Specification for a Reticle SMIF Pod (RSP) Used to Transport and Store 6 inch or $2 3 0 \\mathrm { m m }$ Reticles NOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5  Terminology (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5  Terminology\n\nContent: 5.1 Abbreviations and Acronyms 5.1.1 AGT — Automated Guided Transport 5.1.2 AGV— Automated Guided Vehicle 5.1.3 AMHS — Automated Material Handling System 5.1.4 ARHS — Automated Reticle Handling System 5.1.5 GEM — Generic Equipment Model 5.1.6 IRL — Internal Reticle Library 5.1.7 OHT — Overhead Hoist Transport 5.1.8 PGV — Person Guided Vehicle 5.1.9 PIO — Parallel Input/Output Interface 5.1.10 RGT — Rail Guided Transport 5.1.11 RGV — Rail Guided Vehicle 5.1.12 RSP – Reticle SMIF Pod 5.2 Definitions 5.2.1 Automated Material Handling System — an automated system to store and transport materials within the factory. 5.2.2 Automated Reticle Handling System — a specific type of Automated Material Handling System to store and transport reticles and reticle pods within the factory. 5.2.3 automation — the degree to which activities of machines or production systems are self-acting. In this standard automation provides methods that will reduce the amount of operator intervention required. 5.2.4 buffer — a set of one or more locations for"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5  Terminology (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5  Terminology\n\nContent: holding reticles at/inside the production equipment. 5.2.5 collection event — a collection event is an event (or grouping of related events) on the equipment that is considered to be significant to the host. 5.2.6 content map — ordered list of reticle identifiers corresponding to slot 1,2,3…n. (Note that this is redundant with the definition in Table 6). 5.2.7 host — the factory computer system or an intermediate system that represents the factory and the user to the equipment. 5.2.8 Internal Pod Buffer — storage area for reticle pod that is internal to the equipment. 5.2.9 internal reticle library — a set of locations within the equipment to store reticles. These locations exclude load ports. 5.2.10 kitting — the act of placing a group of 1 or more reticles in a reticle pod for removal from a bare reticle stocker. This is accomplished via a ReticleTransferJob that specifies one or more reticles for removal from the stocker, or by one or more MoveReticle services that specify a destination that is a Pod Location. 5.2.11 load — the"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5  Terminology (Part 3)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5  Terminology\n\nContent: operation of placing a pod on a load port. 5.2.12 load port — the interface location on the equipment where pods are loaded and unloaded."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD\n\nContent: 5.2.14 object instantiation — the act of storing of information related to a physical or logical entity so that it can be recalled on demand based on its public identifier. 5.2.15 on-line equipment — equipment that is connected to, and able to communicate fully with, the host. 5.2.16 pod — in this document pod refers to an RSP or a Multi Reticle SMIF Pod. 5.2.17 PodID — a readable and unique identifier for the pod. .2.18 PodID read — the process of the equipment reading the PodID from the carrier. 5.2.19 PodID tag (tag, ID tag) — a physical device for storing PodID and other information. There are two basic types of tags, read-only tags and read/write tags. [SEMI E99] 5.2.20 process equipment — equipment used to produce product, such as semiconductor devices. This excludes metrology and material handling equipment. 5.2.21 production equipment — equipment used to produce product, such as semiconductor devices, including substrate sorting, process, and metrology equipment and excluding material handling equipment."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD\n\nContent: 5.2.22 properties — a set of name value pairs assigned to an object or used in a service message to include additional information about the object (i.e., pod, port, etc.). 5.2.23 re-initialization — a process where production equipment is either powered off then on or when some kind of hardware or software reset is initiated to cause the equipment to reset and possibly reload its software. On production equipment that contains some kind of mass storage device this can also be called a “reboot”. 5.2.24 read position — any position where the tag on a pod can be read. 5.2.25 reticle — a mask that contains the patterns to be reproduced on a substrate; the image may be equal to or larger than the final projected image. 5.2.26 Reticle SMIF Pod (RSP) — minienvironment compatible carrier capable of holding one 6 inch or one 230 mm reticle in a horizontal orientation during transport and storage and is compatible with a Standard Mechanical Interface (SMIF) per SEMI E19.4. 5.2.27 single communication connection — exactly one"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD (Part 3)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD\n\nContent: physical connection using exactly one logical session and a standard set of messages. 5.2.28 slot map –– the information that relates which slots in a reticle pod hold reticles, both correctly and incorrectly. 5.2.29 slot map read –– the process of the equipment reading the slot map for substrate position and placement within the pod. 5.2.30 standard message set — messages conforming to standard message specifications. 5.2.31 transfer unit — maximum number of pods allowed in a specific transfer service: AA is the maximum number of pods allowed for acquisition at the transfer source. BB is the maximum number of pods allowed for deposit at the transfer destination. • CC is the maximum number of carrier pods allowed for transfer in one transport vehicle. The transfer unit is the minimum of AA, BB, and CC. NOTE 1: At the time this document was originally written, December 2000, transfer unit for reticle transfer to process equipment is expected to be equal to one. Transfer unit to other equipment may be greater than"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD (Part 4)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 5.2.13  Multi-Reticle Pod — TBD\n\nContent: one. 5.2.32 unload — the operation of removing a pod from a load port. 5.2.33 write position — any position on a load port or in an internal buffer from which the tag on a pod can be written to. This position may vary on any particular equipment depending on the write technology selected by the end user. The read position and the write position may or may not be the same position."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 6  Requirements",
    "content": "6.1  Reticle and Pod Management compliant equipment is required to provide certain capabilities defined by other standards: accessibility to status information, event reporting, alarm management, and equipment control.  These requirements shall be satisfied through compliance to the following sets of standards:  \n6.2  Generic Equipment Model Standard (GEM) SEMI E30  \nEvent Notification\nStatus Data Collection\nEquipment Constants\nAlarm Management\nEquipment Control\nRemote Control\nError Messages\nDynamic Event Report Configuration  \n6.3  Object-Based Standards Object Services Standard (SEMI E39) Event Reporting (SEMI E53) Exception Management (SEMI E41)"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.1  Objects",
    "content": "7.1.1  Whenever the equipment is required to know about specific kinds of entities, and required to manage information concerning these entities, it is useful to treat these entities as objects that comply with the basic requirements of SEMI E39 (OSS).  This is especially true whenever there are a large number of objects of a given type or when the entities are transient rather than permanent.  In both cases, it is difficult to describe a general way for the host and equipment to specify which particular entity is referenced and to get information related only to a specific one out of many.  \n7.1.2  By defining these entities as objects that comply with SEMI E39, it is only necessary for the host to specify the type of object and its specific identifier in order to inquire about one or more properties of the specific entity of interest."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.1.3  Object Properties",
    "content": "7.1.3.1  A property (attribute) is information about an individual object that is presented as a name/value pair.  The name is a formally reserved text string that represents the property, and the value is the current setting for that property.  \n7.1.3.2  Properties shall be accessible to the host via the service GetAttr and SetAttr for the Reticle Pod object, Reticle object, and Reticle location object:  \nget the list of IDs for the current reticle pods at the equipment, and get the specified properties for one or more individual reticle pods.  \n7.1.4  Rules for Object Properties  \nAttributes with RO access can not be changed using SetAttr service as defined in OSS.\nAttributes with RW access can be changed using SetAttr service as defined in OSS.  \nAdditional attributes may be specified by the user or the equipment supplier by using an attribute name starting with “UD” (User Defined).  Care should be taken to ensure the name of the attribute is unique."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.1.5  Object Attribute Table",
    "content": "7.1.5.1  The object attribute table is used to list all the attributes related to the defined object as shown below the access is defined as Read only (RO) or Read/Write (RW).  The REQD column is used to specify whether the attribute is required for implementation.  Finally, the Form column is used to specify the format of that particular attribute.  \nTable 1  Object Attribute Table"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.2  State Model Methodology",
    "content": "7.2.1  A state model has three elements: definitions of each state and sub-state, a diagram of the states and the transitions between states, and a state transition table.  The diagram of the state model uses the Harel State Chart notation.  An overview of this notation is presented in an Appendix of SEMI E30.  The definition of this notation is presented in Science of Computer Programming 8, “Statecharts: A Visual Formalism for Complex Systems”, by D. Harel, 1987.  1"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.2.2  State Model Requirements (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.2.2  State Model Requirements\n\nContent: 7.2.2.1 The state models included in this standard are a requirement for RPMS compliance. A state model consists of a state model diagram, state definitions, and a state transition table. All state transitions in this standard, unless otherwise specified, shall correspond to collection events. 7.2.2.2 A state model represents the host’s view of the equipment, and does not necessarily describe the internal equipment operation. All Reticle and Pod Management state model transitions shall be mapped sequentially into the appropriate internal equipment collection events that satisfy the requirements of those transitions. In certain implementations, the equipment may enter a state and have already satisfied all of the conditions required by the RPMS state model for transition to another state. In this case, the equipment makes the required transition without any additional actions in this situation. 7.2.2.3 Some equipment may need to include additional sub-states other than those in this standard. Additional substates may"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.2.2  State Model Requirements (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.2.2  State Model Requirements\n\nContent: be added, but shall not change the Reticle and Pod Management defined state transitions. All expected transitions between Reticle and Pod Management states shall occur. 7.2.2.4 Transition tables are provided in conjunction with the state diagrams to explicitly describe the nature of each state transition. A transition table contains columns for Transition number, Previous State, Trigger, New State, Actions, and Comments. The “trigger” (column 3) for the transition occurs while in the “previous” state. The “actions” (column 5) includes a combination of: Actions taken upon exit of the previous state, Actions taken upon entry of the new state, and Actions taken which are most closely associated with the transition. Table 2 State Transition Table"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.3  Services",
    "content": "7.3.1  Services are functions or methods that may be provided by either the equipment or the host.  A service message may be either a request message, which always requires a response, or a notification message that does not require a response."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.3.2  Service Message Description",
    "content": "7.3.2.1  A service message description table defines the parameters used in a service, as shown in the following table:  \nTable 3  Service Message Description Table  \n#1  Type can be either “N” = Notification or “R” = Request & Response.  \n7.3.2.2  Notification type messages are initiated by the service provider (e.g., the equipment) and the provider does not expect to get a response from the service user.  Request messages are initiated by a service user (e.g., the host). Request messages ask for data or an activity from the provider.  Request messages expect a specific response message (no presumption on the message content)."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.3.3  Service Message Parameter Definition",
    "content": "7.3.3.1  A service parameter dictionary table defines the description, range, and type for parameters used by services, as shown in the following table:"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # Table 4  Service Message Parameter Definition Table",
    "content": "#1  A row is provided in the table for each parameter used on a service."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.3.4  Service Message Definition",
    "content": "7.3.4.1  A service message description table defines the parameters used in a service message.  It also describes each message and its cause/effect to the equipment.  The columns labeled Req/Ind and Resp/Conf link the parameters to the direction of the message.  \n7.3.4.2  The columns labeled Req/Ind and Rsp/Conf link the parameters to the direction of the message.  The message sent by the initiator is called the “Request”.  The receiver terms this message the “Indication”.  The receiver may then send a “Response”, which the original sender terms the “Confirmation”.  \n7.3.4.3  The following codes appear in the Req/Ind and Rsp/Conf columns and are used in the definition of the parameters (e.g., how each parameter is used in each direction):"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 7.4  Alarm Requirements Definition",
    "content": "7.4.1  An alarm requirements definition table defines the specific set of alarms required by RPMS.  The table is divided up by equipment configuration, and then by alarm.  The danger and affected columns are marked with “X” characters to show each alarm and its possible impact to operators, equipment, and material.  The table format is shown in the following example:"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 8  Overview",
    "content": "8.1  The Reticle and Pod Management standard defines the behavior, data, and services required for equipment supporting automated reticle pod transfer, reticle pod management, and reticle management.  This document provides a standard interface for host/equipment communications regarding the transfer of reticle pods, reticle pod identification and verification, transfer of reticles to and from equipment, reticle identification and verification, reticle inspection and qualification, and tracking of reticles.  The standardized reticle pod transfer host interface include transfers to and from the external reticle load ports and internal reticle pod locations, the standardized reticle host interface include transfers to and from the reticle pod, transfers to and from the internal reticle library positions, and reticle identification, inspection, verification, qualification and tracking of reticles."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 8.2  Single Connection Requirement",
    "content": "8.2.1  The expectation of the production and storage equipment supplier is that this standard be implemented in conjunction with the GEM interface to their production equipment and without the use of a separate communication connection."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9  Load Port",
    "content": "9.1  A reticle pod load port (port) is used by the factory to load and unload reticle pods to and from Lithography, reticle inspection, and bare reticle storage equipment.  A reticle pod load port may be used as a reticle pod input load port, a reticle pod output load port, or as a reticle pod input/output load port, depending upon equipment type, configuration and/or factory practices.  This classification may be fixed or it may be programmable by the user.  A reticle pod load port is generally designed to handle one specific carrier type, reticle SMIF pods (RSP).  \n9.1.1  The equipment supplier is free to implement Load Ports as objects, but this is not a requirement for compliance to this standard."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.2  Load Port Numbering",
    "content": "9.2.1  The reticle pod load port number shall be assigned incrementally from the bottom left to bottom right, then top left to top right when facing the reticle load ports.  The numbering system should start with 101 to differentiate from FOUP load ports.  The reticle pod load port-numbering requirement is to provide a common reference base to external entities, such as humans."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.3  Reticle Pod Slot Numbering",
    "content": "9.3.1  The slot numbers for a reticle pod shall be assigned incrementally from the bottom, starting with “1.”"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.4  Reticle Pod Load Port Resource Sharing",
    "content": "9.4.1  A model of a reticle pod load port must account for any mechanical assemblies that are either active during reticle pod transfer or are capable of interacting with the transfer.  The reticle pod load port is responsible for such mechanisms when the reticle pod load port is in the TRANSFER READY state.  If these mechanisms are shared with other reticle pod load ports, then the sharing must be coordinated."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.5  Reticle Pod Load Port Transfer State Model (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.5  Reticle Pod Load Port Transfer State Model\n\nContent: 9.5.1 The purpose of the Reticle Pod Load Port Transfer State Model is to define the host view of a reticle pod transfer, which includes the host interactions with the equipment necessary to transfer reticle pods to and from equipment reticle pod load ports. Each reticle pod load port on the equipment shall maintain an independent instance of this state model. 9.5.2 Reticle Pod Load Port Transfer State Model Diagram 9.5.2.1 Figure 1 is the diagram for the Reticle Pod Load Port Transfer State Model. 9.5.3 Reticle Pod Load Port Transfer State Definitions 9.5.3.1 RETICLE POD LOAD PORT TRANSFER — The super state for the IN SERVICE and OUT OF SERVICE states. 9.5.3.2 OUT OF SERVICE — Transfer to/from this reticle pod load port is disabled. A transition to IN SERVICE is required to continue using this reticle pod load port for transfers. 9.5.3.3 IN SERVICE — Transfer to/from this reticle pod load port is enabled. A transition to OUT OF SERVICE disables the reticle pod load port for transfer use. 9.5.3.4"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.5  Reticle Pod Load Port Transfer State Model (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.5  Reticle Pod Load Port Transfer State Model\n\nContent: TRANSFER READY — A sub-state of IN SERVICE. The reticle pod load port is available for pod transfer. The transfer can either be manual or automated, and can be a load or an unload. This state contains two sub-states, which are used depending on whether or not a reticle pod is present on the load port (READY TO LOAD and READY TO UNLOAD). 9.5.3.5 READY TO LOAD — A sub-state of TRANSFER READY. When transitioning to the TRANSFER READY state, if a reticle pod is not present on the specified reticle pod load port, this is the active sub-state. In this state, the reticle pod load port is available to be loaded with an external reticle pod. 9.5.3.6 READY TO UNLOAD — A sub-state of TRANSFER READY. When transitioning to the TRANSFER READY state, if a reticle pod is present on the specified reticle pod load port, this is the active sub-state. In this state, the reticle pod load port is available for unloading of a reticle pod from the reticle pod load port to material handling equipment. When the reticle pod"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.5  Reticle Pod Load Port Transfer State Model (Part 3)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 9.5  Reticle Pod Load Port Transfer State Model\n\nContent: load port is being used by the equipment, the state shall transition to TRANSFER BLOCKED. 9.5.3.7 TRANSFER BLOCKED — The reticle pod transfer state is neither READY TO LOAD nor READY TO UNLOAD. Because of reticle pod load port related activity being performed, transfer is not available to/from this reticle pod load port at this time. 9.5.4 Reticle Pod Load Port Transfer State Transition Table"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10  Reticle Pod Object",
    "content": "10.1  Information about a reticle pod is encapsulated as an object.  This allows the host to exchange information with the equipment about one or more specific reticle pods using services defined in SEMI E39, Object Services Standard.  A reticle pod has properties (attributes) that are defined in Table 6, Pod Attribute Definition."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.2  Object Instantiation (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.2  Object Instantiation\n\nContent: 10.2.1 The reticle pod object is a software representation of the reticle pod in the equipment. Under normal circumstances this object is instantiated by the equipment when the host uses the Bind, ReticleTransferJob, or PodNotification service or when the equipment successfully reads the PodID from the reticle pod. A reticle pod object is instantiated by PodID read only if there are no currently existing objects of the same object type with the PodID just read. A reticle pod object can also be instantiated by either the ProceedWithPod or CancelPod Services on an UNASSOCIATED port. (This implies a failed PodID read event.) The ContentMap attribute will be an empty list (a list of zero) when the instantiation is done by PodID read. The SlotMap attribute should be a list consisting of all slots enumerated as “UNDEFINED” when the reticle pod object is instantiated by PodID read. 10.2.2 From the host point of view, an object is instantiated if the host is able to query the equipment about that object, its current state, and"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.2  Object Instantiation (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.2  Object Instantiation\n\nContent: other attributes. Once instantiated, the object is considered destroyed (no longer instantiated) if the response to such queries is “unknown object”. 10.2.3 Summary of reticle pod object instantiation: 1. Bind, ReticleTransferJob, or PodNotification Service; 2. PodID read with no currently existing pod objects having the PodID just read; and 3. ProceedWithPod or CancelPod Service on an UNASSOCIATED port with a pod. 10.2.4 Reticle Pod Object Identifier (ObjID) 10.2.4.1 The purpose of an Object Identifier is to allow references to an object within the system. The object identifier is created when an object is instantiated and should be unchanged or persistent until the end of the object lifecycle. The Object Identifier shall be unique at the equipment during lifecycle of the object. The PodID is the Reticle Pod Object Identifier. The equipment is responsible for ensuring uniqueness of the PodID prior to instantiation by the bind, pod notification, or ReticleTransferJob service."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.2.5  Reticle Pod Object Destruction",
    "content": "10.2.5.1  Normally, the Reticle Pod Object reaches the end of its lifecycle when the reticle pod is unloaded from the equipment.  Abnormally, the Reticle Pod Object reaches the end of it’s lifecycle when a CancelBind, CancelReticleTransferJob, or CancelPodNotification service is executed prior to the reticle pod being loaded, or when an equipment based pod verification fails following pod instantiation by the bind service.  \n10.2.5.2  Summary of reticle pod object destruction:  \n1. A reticle pod is unloaded from the equipment;\n2. A CancelBind, CancelReticleTransferJob or CancelPodNotification service is received; and\n3. An equipment based verification fails (after the object has been instantiated via the bind services).  \n10.3  Reticle Pod Attribute Definitions  \n10.3.1  The following table contains the attributes that are of importance to the host and/or the equipment in order to manage the history and the reports about the reticle pod object."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.2  REQD Column",
    "content": "10.3.2.1  All attributes in the following table are required to be associated with the reticle pod object.  However only the attributes marked with a “Y” in the REQD column are always required to be maintained and updated by the equipment.  The attributes marked with an “N” in the REQD column are only required to be maintained if they are provided by the host by either the Bind, PodNotification, ReticleTransferJob or ProceedWithPod Services or if the equipment has means of determining the attribute values.  (For example, if the equipment has a ReticleID reader, the equipment can determine the ContentMap)."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.3  ACCESS Column",
    "content": "10.3.3.1  Even though a value may be marked as RO (read only), the initial value for the attribute may be provided by the host when attached to either the Bind, PodNotification, ReticleTransferJob or ProceedWithPod services.  The only other time the PodCapacityStatus attributes are updated is at the first ProceedWithPod service."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.4  Pod Attribute Definition Table",
    "content": "Table 6  Pod Attribute Definition"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.5  Rules for Reticle Pod Attributes (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.5  Rules for Reticle Pod Attributes\n\nContent: • The equipment shall change object attributes, ContentMap and SlotMap, provided by the host. All other attributes, such as LocationID, shall be set and maintained by the equipment. The attributes, Capacity, ContentMap, Reticle count, shall be provided with Bind, PodNotification, ReticleTransferJob, or ProceedWithPod service before or when SlotMap is provided. . The SlotMap shall be provided with Bind, PodNotification, ReticleTransferJob or ProceedWithPod to verify PodID, when the SlotMap verification is equipment based. And it shall not be provided when the SlotMap verification is host based. Reticle pod properties may be provided before the reticle pod arrives as part of the Bind, PodNotification, or ReticleTransferJob service and should be retained until either a CancelBind, CancelPodNotification, or CancelReticleTransferJob service is received or the reticle pod is removed. Reticle pod properties may also be provided by the ProceedWithPod service. The reticle pod properties that are provided by the"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.5  Rules for Reticle Pod Attributes (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.5  Rules for Reticle Pod Attributes\n\nContent: ProceedWithPod service may differ based whether or not the object is instantiated by the service. Reticle pod properties that are required shall be actively updated by the equipment."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.6  Reticle Pod Location",
    "content": "10.3.6.1  A reticle pod location, signified by LocationID, is used for tracking.  A reticle pod location is any physical area that is capable of holding a pod.  It is not intended to represent entire mechanisms, which may have a variety of other properties of interest, but only that portion where a reticle pod may rest."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.7  Reticle Pod Location Examples (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.7  Reticle Pod Location Examples\n\nContent: 10.3.7.1 Reticle Pod Locations include reticle pod load port locations, internal pod buffer locations, as well as grippers, conveyors, and elevators that are used internally for moving the pod from one fixed location to another. 10.3.8 Slot Map Relation to Content Map ⎯ The slot map attribute and content map attribute hold similar information. The purpose of these attributes differs. The slot map is provided so that the equipment or host can quickly verify that the pod has reticles correctly placed in the correct slot (as provided by the host). This verification is based on a slot map read. The content map is provided so that the host can communicate the specific ReticleID in a specific slot as delivered and that the equipment can communicate the specific ReticleID that it places in a specific slot. 10.3.9 Reticle Pod Location Naming ⎯ All locations shall be assigned a unique name. Information about the reticle pod location can be obtained by querying the Pod Object for the ReticlePodLocationID or by asking"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.7  Reticle Pod Location Examples (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.7  Reticle Pod Location Examples\n\nContent: the equipment for the PodLocationMatrix. The text form of the ReticlePodLocationID shall be descriptive of the location."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.10  Capacity",
    "content": "10.3.10.1  The Capacity parameter can be sent to the equipment by the host in the PodNotification, Bind, ReticleTransferJob, or the ProceedWithPod service.  However the equipment shall update this  \n10.3.10.2  Parameter based on the results of the read slot map operation.  Furthermore, the equipment shall update the parameter based on it’s own actions.  If the equipment does not know the value of Capacity prior to instantiation, the equipment shall instantiate the reticle pod object with the value of one for Capacity."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing\n\nContent: 10.3.11.1 Status is used by the host to know whether or not the reticle pod owned by the equipment can be transferred from the equipment. 10.3.11.2 Enumerated values of ReticlePodAccessing-Status correspond to the substates of ReticlePodAccessingStatus (see Figure 2). 10.4 Reticle Pod State Model 10.4.1 The purpose of the Reticle Pod State Model is to define the host’s view of a reticle pod. The equipment shall maintain a separate and independent state model for each reticle pod in/at the equipment. 10.4.2 Reticle Pod State Model Diagram 10.4.3 Reticle Pod State Definitions 10.4.3.1 RETICLE POD — The RETICLE POD state has four ANDed (orthogonal) substates: RETICLE POD ID STATUS, RETICLE POD SLOT MAP STATUS, RETICLE POD ACCESSING STATUS, AND RETICLE POD CLAMPING STATUS. 10.4.3.1.1 RETICLE POD ACCESSING STATUS — This is a substate of RETICLE POD and indicates the current accessing status of the pod. It has three substates, NOT ACCESSED, IN ACCESS, and COMPLETE. The initial default entry substate is NOT ACCESSED."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing\n\nContent: 10.4.3.1.1.1 NOT ACCESSED — This is a substate of RETICLE POD ACCESSING STATUS and is active when the reticle pod has not been opened. It has two substates NOT AVAILABLE and AVAILABLE. 10.4.3.1.1.1.1 NOT AVAILABLE This is a substate of NOT ACCESSED and is active when the reticle pod has been instantiated via service but has not been received by the equipment. 10.4.3.1.1.1.2 AVAILABLE — This is a substate of NOT ACCESSED and is active when the reticle pod has been received by the equipment but not opened. 10.4.3.1.1.2 IN ACCESS — This is a substate of RETICLE POD ACCESSING STATUS and is active when reticle pod has been opened once, and the reticle pod should not be unloaded from the equipment. In this state the slot map is read and reticles may be moved in and out of the reticle pod. 10.4.3.1.1.3 COMPLETE — This is a substate of RETICLE POD ACCESSING STATUS and is active when all known activity, as defined by the ReticleTransferJob service, for the reticle pod has completed, or the PodComplete service has been"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing (Part 3)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing\n\nContent: received, and the reticle pod has been closed. The reticle pod may be unloaded from the equipment. 10.4.3.1.2 RETICLE POD LOCKING STATUS — This is a substate of RETICLE POD and indicates the current status of the pod with respect to removability. 10.4.3.1.2.1 NOT LOCKED — This is a substate of RETICLE POD LOCKING STATUS and is active when ther are no physical or logical mechanisms that prevent removal of the reticle pod by an external entity. 10.4.3.1.2.2 LOCKED — This is a substate of RETICLE POD LOCKING STATUS and is active when there are physical mechanisms that prevent removal of the reticle pod by an external entity. It has two substates RELEASED AND LOCKED and HOLD. 10.4.3.1.2.2.1 RELEASED AND LOCKED — This is a substate of LOCKED and is active when the pod may be released by the equipment. 10.4.3.1.2.2.2 HOLD — This is a substate of LOCKED and is active when there are physical or logical mechanisms that prevent removal of the pod engaged and the pod release flag is set to host release and the PodRelease"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing (Part 4)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing\n\nContent: service has not been received. 10.4.3.1.3 RETICLE POD ID STATUS — This is a substate of RETICLE POD and indicates the current status of the pod with respect to its identifier. It has four substates, ID NOT READ, WAITING FOR HOST ON ID STATUS, ID VERIFICATION FAILED, ID VERIFICATION OK. The initial substate is conditional based on information the equipment has about the reticle pod. When the PodID is provided by the Bind, ReticleTransferJob, or the PodNotification service, the reticle pod object shall be instantiated in the ID NOT READ substate. When the PodID is provided by the PodID read, the reticle pod shall be instantiated in the WAITING FOR HOST ON ID STATUS substate. When the Reticle Pod is instantiated by the ProceedWithPod service, the reticle pod shall be instantiated in the ID VERIFICATION OK substate. Finally when the reticle pod is instantiated by the CancelPod service, the pod will be instantiated in the ID VERIFICATION FAILED substate. 0.4.3.1.3.1 ID NOT READ — This is a substate of RETICLE POD ID"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing (Part 5)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing\n\nContent: STATUS. This state is active whenever the PodID has not been read by the equipment. 10.4.3.1.3.2 ID VERIFICATION FAILED — This is a substate of RETICLE POD ID STATUS and is active when the PodID has verification by the host with the CancelPod service. This is a final state. 10.4.3.1.3.3 ID VERIFICATION OK — This is a substate of RETICLE POD ID STATUS and is active as soon as the PodID has been accepted. The ID is determined to be accepted by either successful verification by the equipment or the host, or by bypassing ID read because a PodID reader is not available and the BypassReadID variable is set to true. This is a final state. 10.4.3.1.3.4 WAITING FOR HOST ON ID STATUS — This is a substate of RETICLE POD ID STATUS and is active during the period of time when the PodID has been read by the equipment successfully or unsuccessfully and has not yet been verified. 10.4.3.1.4 RETICLE POD SLOT MAP STATUS — This is a substate of RETICLE POD and indicates the current status of the reticle pod with respect to its slot"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing (Part 6)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.3.11  The ReticlePodAccessing\n\nContent: map. It has four substates, SLOT MAP NOT READ, WAITING FOR HOST ON SLOT MAP STATUS, SLOT MAP VERIFICATION FAILED, SLOT MAP VERIFICATION OK. The initial default entry sub-state is SLOT MAP NOT READ. 10.4.3.1.4.1 SLOT MAP NOT READ — This is a substate of RETICLE POD SLOT MAP STATUS and is the default entry state. It is active when the Reticle Pod is first loaded at the equipment until the Slot Map has been read successfully by the equipment. 10.4.3.1.4.2 SLOT MAP VERIFICATION FAIL — This is a substate of RETICLE POD SLOT MAP STATUS and is active when the Slot Map has been read by the equipment and has failed verification by the host. This is a final state. 10.4.3.1.4.3 SLOT MAP VERIFICATION OK — This is a substate of RETICLE POD SLOT MAP STATUS and is active as soon as the slot map has been verified. This is a final state. 10.4.3.1.4.4 WAITING FOR HOST ON SLOT MAP STATUS — This is a substate of RETICLE POD SLOT MAP STATUS and is active when the equipment is waiting for input from the host."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.4.4  Reticle Pod State Transition Table",
    "content": "10.4.4.1  Table 7 indicates the triggers and the expected behavior of the instantiated reticle pod object."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # Table 7  Reticle Pod State Transition Definition",
    "content": "#1  Only one collection event report is required when entering the Reticle Pod State Model (instantiating a reticle pod object).  This event report shall include the entry state of the all the substates of Reticle Pod State Model, (including RETICLE POD ID STATUS substate, the RETICLE POD SLOT MAP STATUS substate, the RETICLE POD ACCESSING STATUS, and the RETICLE POD LOCKING STATUS)."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.4.5  Slot Map Read Details (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.4.5  Slot Map Read Details\n\nContent: 0.4.5.1 The Slot Map shall be read on all production equipment prior to removal of reticles from the reticle pod. 10.4.6 Pod Read Failure — A pod read failure occurs when the PodID reader is present, in service, and reports that it is unable to read the ID of a pod. This represents a transient random failure rather than a steady condition. 10.4.7 Bypass Read ID — A PodID reader may be unavailable: either out of service, not installed, or otherwise malfunctioning and unable to execute a read operation. This represents a steady condition that often is known in advance. The equipment shall provide a user-configurable variable BypassReadID that the user is able to set to specify the action to take when a pod is received to an ASSOCIATED load port. In this case, the reticle pod object is instantiated in the ID NOT READ state, and when the reticle pod is received, the state model transitions to either WAITING FOR HOST or ID VERIFICATION OK, depending upon whether BypassReadID is FALSE (the default value) or TRUE. When TRUE,"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.4.5  Slot Map Read Details (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 10.4.5  Slot Map Read Details\n\nContent: then the PodID received in the Bind is used automatically. Otherwise, the pod transitions to WAITING FOR HOST and waits for the host to send a ProceedWithPod. The ID used will be the ID included with the ProceedWithPod."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 11.1  Access Mode State Model",
    "content": "11.1.1  The Access Mode State Model defines the host view of equipment access mode, as well as the host interactions with the equipment necessary to switch the access mode.  Each Reticle Load Port has its own Access Mode State Model.  There are two access mode states.  These are defined in $\\ P 1 1 . 3 . 3$ .  \n11.1.2  The access mode for a reticle pod load port may be switched at anytime by the host or the operator, except when the Reticle Load Port Reservation State Model for that Reticle Pod Load Port is in the RESERVED state or during reticle pod transfer.  Reticle pod transfer boundaries, for determining when access mode may be changed, are designated by Table 8, Reticle Pod Transfer Boundaries.  \nTable 8  Reticle Pod Transfer Boundaries"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 11.2  Manual Pod Transfer Confirmation Trigger",
    "content": "11.2.1  For a manual transfer completion confirmation, the production equipment supplier must implement a software or hardware mechanism for an operator to inform the equipment that the pod transfer is complete, but also support methods such as timers that allow equipment to consider a manual transfer complete without operator input."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 11.3  Access Mode Initial Value",
    "content": "11.3.1  Also, when equipment re-initialization occurs, the access mode(s) must be remembered, and used as the initial value when initializing.  Since the access mode is remembered through re-initializations, the initial value that is used the very first time the software is ever loaded is not important.  The equipment supplier is free to set this default value."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 11.3.3  Access Mode State Definitions",
    "content": "11.3.3.1  ACCESS MODE — The parent state for the MANUAL and AUTO sub-states.  \n11.3.3.2  MANUAL — A sub-state of ACCESS MODE.  When the production equipment or specified reticle pod load port is in this mode, only manual (non-AMHS) pod transfers are allowed.  The production equipment shall have the capability of generating an alarm if an automated (AMHS) delivery is attempted.  \n11.3.3.3  AUTO — A sub-state of ACCESS MODE.  When the production equipment or specified reticle pod load ports are in this mode, only automated (AMHS) pod transfers are allowed.  The production equipment shall have the capability of generating an alarm if a manual delivery is attempted."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 11.3.4  Access Mode State Transition Table",
    "content": "11.3.4.1  Table 9 defines the transitions for the Access Mode State Model.  \nTable 9  Access Mode State Transition Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12  Reservation State Model (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12  Reservation State Model\n\nContent: 12.1 The purpose of the Reticle Load Port Reservation State Model is to define the host view of future activity at a specific reticle load port. 12.1.1 The Reticle Load Port Reservation State Model, the ReserveAtPort service and CancelReserveAtPort enable the following items: 1. They enable the host to inform the equipment of a future reticle pod delivery without specifying the reticle PodID and at the same time allow host based verification. (Equipment based verification is enabled via the Load Port/Pod Association State Model, the Bind service, ReticleTransferJob, and the PodNotification service detailed in $\\ S 1 3$ , ¶¶18.4.2, 18.5.19, and 18.4.11.) 2. They enable the equipment to send a state change event to the host if the operator (either local or remote) informs the equipment of a future pod delivery to a reticle load port without specifying the reticle PodID. Thus the host knows that the operator expects to use that reticle load port for something the host did not request for AMHS based delivery. 3. The Bind,"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12  Reservation State Model (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12  Reservation State Model\n\nContent: ReticleTransferJob, and CancelBind, CancelReticleTransferJob services also trigger changes in the Reticle Load Port Reservation State Model. If the Reticle Load Port Reservation State Model is in the NOT RESERVED state, the Bind or ReticleTransferJob service triggers a transition to the RESERVED state. If the Reticle Load Port Reservation is in the RESERVED State, the CancelBind or CancelReticleTranserJob service triggers a transition to NOT RESERVED. 12.1.2 For Lithography, reticle inspection, and bare reticle stocker equipment, the Reservation State Model, the ReserveAtPort service, the CancelReserveAtPort service, and all other associated functionality is a user option and not necessary for fundamental compliance. 12.1.3 For equipment implementing the reservation state model, the equipment shall provide a reticle load port reservation state model for each load port."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12.2  Reservation Visible Signal",
    "content": "12.2.1  When a port reservation has taken place, the equipment shall display a visible signal indicating that the designated load port is in the Reserved State.  Examples of visible signals for the associated load port are: Blinking LEDs, flags, color indicators, or other methods that allow easy recognition that the load port is reserved; proximity to or location on the load port is recommended.  The visible signal shall remain present as long as the load port state remains RESERVED.  When the state changes to NOT RESERVED the visible indicator shall cease.  This capability is not required for fundamental compliance to RPMS."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12.3  Load Port Reservation State Model Diagram",
    "content": "12.4  Reticle Load Port Reservation State Definitions  \n12.4.1  RETICLE LOAD PORT RESERVATION — The super state of the substates NOT RESERVED and RESERVED.\n12.4.2  NOT RESERVED — A substate of LOAD PORT RESERVATION, this state is active when there is no reservation existing at the load port.\n12.4.3  RESERVED — A substate of LOADPORT RESERVATION, this state is active when there is a reservation for future activity at the load port.  When in this state, the access mode for a load port may not be changed."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 12.5  Relation of Reservation to Association",
    "content": "12.5.1  The following figure indicates the relationship of Association to Reservation."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 13  Reticle Pod Load Port/Pod Association State Model (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 13  Reticle Pod Load Port/Pod Association State Model\n\nContent: 13.1 The purpose of the Reticle Pod Association State Model is to define the host view of pod to reticle load port association of the production equipment, as well as the host interactions with the production equipment necessary to associate a reticle pod to a reticle load port, and to perform equipment based pod verification. Each reticle load port shall maintain an independent instance of the Pod Association State Model. Each instance of this state model must not influence the state of the same state model for a different reticle load port. 13.1.1 This state model provides the ability to perform PodID verification with two different methods. If the PodID is provided before the equipment reads the PodID, the PodID that becomes associated with the reticle load port can be used later for equipment based pod verification. If the association happens by PodID read (not by a service execution), then the production equipment shall report the PodID information in a data collection event. 13.2 Reticle"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 13  Reticle Pod Load Port/Pod Association State Model (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 13  Reticle Pod Load Port/Pod Association State Model\n\nContent: Pod Load Port/Pod Association State Model Diagram 13.2.1 Reticle Pod Load Port/Pod Association State Definitions 13.2.1.1 RETICLE POD LOAD PORT/POD ASSOCIATION — The parent state of the NOT ASSOCIATED and ASSOCIATED sub-states. 13.2.1.2 NOT ASSOCIATED — A sub-state of RETICLE POD LOAD PORT/POD ASSOCIATION. There is no pod association present for this load port. 13.2.1.3 ASSOCIATED — A sub-state of RETICLE POD LOAD PORT/POD ASSOCIATION. A PodID has been associated with this reticle load port. The reticle pod load port is not available for a new pod association. 13.2.2 Reticle Pod Load Port/Pod Association State Transition Table 13.2.2.1 Table 11 defines the transitions of the Reticle Pod Load Port/Pod Association State Model. Table 11 Reticle Pod Load Port/Pod Association State Transition Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14  Reticle Object",
    "content": "14.1  Information about a reticle is encapsulated as an object.  This allows the host to exchange information with the equipment about one or more specific reticle using services defined in SEMI E39, Object Services Standard.  A reticle has properties (attributes) that are defined in Table 12, Reticle Attribute Definition."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2  Object Instantiation (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2  Object Instantiation\n\nContent: 14.2.1 The reticle object is a software representation of the reticle in the equipment. Under normal circumstances this object is instantiated by the equipment when the host uses the Bind, ReticleTransferJob, PodNotification, ProceedWithPod service (when it included the content map attribute), MoveReticle service, when the equipment successfully reads the ReticleID from the reticle pod tag, or when the equipment successfully reads the ReticleID from the reticle itself. A reticle is instantiated by reticle pod tag read or ReticleID read only if there are no currently existing objects with the ReticleID just read. A reticle object can also be instantiated by either the ProceedWithPod or CancelPod Services when these services contain the content map. A Reticle can be instantiated by the MoveReticle Service if the ReticleID(s) provided by the service have not been previously instantiated. 14.2.2 From the host point of view, an object is instantiated if the host is able to query the equipment about that object, it's current"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2  Object Instantiation (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2  Object Instantiation\n\nContent: state, and other attributes. Once instantiated, the object is considered destroyed (no longer instantiated) if the response to such queries is “unknown object”. 14.2.3 Summary of possible reticle object instantiation methods: 1. Bind, ReticleTransferJob, or PodNotification Service that contains the content map attribute; 2. PodID tag read containing the content map with no currently existing reticle objects having the ReticleID just read from the pod tag; 3. ReticleID read with no currently existing reticle objects having the ReticleID just read from the ReticleID read; 4. ProceedWithPod or CancelPod Service containing the content map attribute; and 5. MoveReticle Service when the reticle is not previously instantiated. 14.2.4 Reticle Object Identifier (ObjID) 14.2.4.1 The purpose of an Object Identifier is to allow references to an object within the system. The object identifier is created when an object is instantiated and should be unchanged or persistent until the end of the object lifecycle. The Object Identifier"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2  Object Instantiation (Part 3)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2  Object Instantiation\n\nContent: shall be unique at the equipment during lifecycle of the object. The ReticleID is the Reticle Object Identifier. The equipment is responsible for ensuring uniqueness of the ReticleID prior to instantiation by the bind, PodNotification, ReticleTransferJob, or MoveReticle service."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2.5  Reticle Object Destruction (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2.5  Reticle Object Destruction\n\nContent: 14.2.5.1 Normally, the Reticle Object reaches the end of its lifecycle when the reticle pod containing the reticle is unloaded from the equipment. Abnormally, the Reticle Object reaches the end of its lifecycle when a CancelBind, CancelReticleTransferJob, or CancelPodNotification service (if the original Bind, ReticleTransferJob, or PodNotification service contained the contentmap) is executed prior to the reticle pod being loaded, when a CancelMoveReticle service is executed prior to reticle removal from the reticle pod (if the reticle was instantiated using the MoveReticle command), when an equipment based pod verification fails following reticle pod and reticle instantiation by the bind service, ReticleTransferJob, or reticle pod tag read. 14.2.5.2 Summary of reticle object destruction: 1. A reticle pod is unloaded from the equipment; 2. A CancelBind, CancelReticleTransferJob, or CancelPodNotification service that contained the content map is received; 3. An equipment based verification fails (after the object"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2.5  Reticle Object Destruction (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.2.5  Reticle Object Destruction\n\nContent: has been instantiated via the bind, ReticleTransferJob service, or reticle pod tag read); 4. A CancelMoveReticle service is executed prior to reticle removal from the reticle pod (when the content map has not been provided by other service or reticle pod tag read); and 5. Manual removal of the physical reticle."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.3  Reticle Attribute Definitions",
    "content": "14.3.1  The following table contains the attributes that are of importance to the host and/or the equipment in order to manage the history and the reports about the reticle object."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.3.2  REQD Column",
    "content": "14.3.2.1  All attributes in the following table are required to be associated with the reticle object.  However only the attributes marked with a “Y” in the REQD column are always required to be maintained and updated by the equipment.  The attributes marked with an “N” in the REQD column are only required to be maintained if they are  \nprovided by the host by either the Bind, PodNotification, ReticleTransferJob, ProceedWithPod, or MoveReticle Services or if the equipment has means of determining the attribute values.  (for example, if the equipment has a ReticleID reader, the equipment can determine the ContentMap)."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.3.3  ACCESS Column",
    "content": "14.3.3.1  Even though a value may be marked as RO (read only), the initial value for the attribute may be provided by the host when attached to either the Bind, PodNotification, ReticleTransferJob or ProceedWithPod services.  The only other time the PodCapacityStatus attributes are updated is at the first ProceedWithPod service.  \nTable 12  Reticle Attribute Definition"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4  Reticle State Model",
    "content": "14.4.1  The purpose of the Reticle State Model is to define the host’s view of a reticle.  The equipment shall maintain a separate and independent state model for each reticle."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4.3  Reticle State Definition (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4.3  Reticle State Definition\n\nContent: 14.4.3.1 RETICLE NOT PRESENT ⎯ This is a subset of RETICLE STATE and is active when the reticle is not present on the Equipment. The reticle has been instantiated with a Bind, PodNotification, ReticleTransferJob, or MoveReticle service. 14.4.3.2 RETICLE AT EQUIPMENT ⎯ This is a subset of RETICLE STATE and is active when the reticle is present. The reticle is physically present on the Equipment. There are two substates, UNQUALIFIED RETICLE and QUALIFIED RETICLE. 14.4.3.2.1 UNQUALIFIED RETICLE ⎯ This is a substate of RETICLE AT EQUIPMENT and is active when the reticle is physically present but not QUALIFIED. There are three substates, WAITING QUALIFICATION, RETICLE QUALIFICATION, AND REJECTED. 14.4.3.2.1.1 WAITING QUALIFICATION ⎯ This is a substate of UNQUALIFED RETICLE and is active when the reticle is waiting to be selected for qualification. The physical ReticleID is not read in this state. 14.4.3.2.1.2 REJECTED ⎯ This is a substate of UNQUALIFIED RETICLE and is active when the reticle did not pass the"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4.3  Reticle State Definition (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4.3  Reticle State Definition\n\nContent: qualification(s) due to an unexpected ReticleID or poor inspection results. The operator or the host (depending on the control mode) will have to decide if the reticle must be re-qualified or removed from the equipment. 14.4.3.2.1.3 RETICLE QUALIFICATION ⎯ This is a substate of UNQUALIFIED RETICLE and is active when the reticle is being qualified for production. The ReticleID is being read from the ReticleID and/or a reticle inspection for particles is being performed. There are two substates: RETICLE ID VERIFICATION and PARTICLE INSPECTION. 14.4.3.2.1.3.1 RETICLE ID VERIFICATION — This is a substate of RETICLE QUALIFICATION and is active when the reticle ID has not been verified. There are two substates, READING ID and RETICLE WAITING FOR HOST. 14.4.3.2.1.3.1.1 READING ID — This is a substate of RETICLE ID VERIFICATION and is active when the Reticle ID is being read. 14.4.3.2.1.3.1.2 RETICLE WAITING FOR HOST — This is a substate of RETICLE ID VERIFICATION and is active when the Reticle ID has been read"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4.3  Reticle State Definition (Part 3)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.4.3  Reticle State Definition\n\nContent: successfully or unsuccessfully and has not yet been verified by the host. 14.4.3.2.1.3.2 PARTICLE INSPECTION — This is a substate of RETICLE QUALIFICATION and is active when a reticle is being evaluated for particles. 14.4.3.2.2 QUALIFIED RETICLE ⎯ This is a substate of RETICLE AT EQUIPMENT and is active when the reticle may be used for production. It has two substates QUALIFIED and IN USE. 14.4.3.2.2.1 IN USE ⎯ This is a substate of QUALIFIED RETICLE and is active when any kind of processing on the reticle is being done (i.e. the reticle is not at an inventory position). 14.4.3.2.2.2 QUALIFIED ⎯ This is a substate of QUALIFIED RETICLE and is active when the reticle is at an inventory position, including either the internal reticle buffer or a reticle pod. 14.4.4 Reticle State Transition Table ⎯ Table 13 indicates the triggers and the expected behavior of the instantiated reticle object. Table 13 Reticle State Transition Definition"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.5  Reticle Allocation State Model",
    "content": "14.5.1  The purpose of the Reticle Allocation State Model is to define the host’s view of a reticle’s allocation state.  \n14.5.2  Reticle Allocation State Model Diagram"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 14.5.3  Reticle Allocation State Definition",
    "content": "14.5.3.1  RETICLE ALLOCATION STATE — The super state of NOT ALLOCATED and ALLOCATED.  \n14.5.3.1.1  NOT ALLOCATED — A substate of RETICLE ALLOCATION STATE, this state is active when the reticle is not allocated to a lot in the queue or not selected for inspection.  For Bare Reticle Stockers – not kitted and not currently selected for kitting.  \n14.5.3.1.2  ALLOCATED — A substate of RETICLE ALLOCATION STATE, this state is active when the reticle is allocated to one or more lots in the queue or selected for inspection.  For Bare Reticle Stockers – allocated includes being selected for kitting or already kitted.  \n14.5.4  Reticle Allocation State Transition Table — Table 14 indicates the triggers and the expected behavior of the instantiated reticle in regards to the allocation state.  \nTable 14  Reticle Allocation State Transition Definition"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 15  Verification",
    "content": "15.1  Verification is the operation of comparing an actual value with an expected value.  Verification may be performed by either the host or the equipment, depending upon whether the host is using the Bind, ReticleTransferJob, or PodNotification service or not.  \n15.1.1  If the host provides the expected value before the actual value is obtained by the production equipment, then the production equipment shall perform the verification.  \n15.1.2  If the host does not provide the expected value before the actual value is read, then the production equipment shall provide to the host, the information necessary for host based verification.  \n15.1.3  There are three values that are defined by Reticle and Pod Management that require verification: PodID, Pod Slot Map, and ReticleID."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 15.2  PodID Verification",
    "content": "15.2.1  Table 15 defines the methods for verifying the PodID.  \nTable 15  PodID Verification Methods"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 15.3  Slot Map Verification",
    "content": "15.3.1  Table 16 defines the methods for verification of the Reticle Pod Slot Map.  Some user’s factory operations may not require strict management of the slot map.  In this case the user may use the host based verification method.  \nTable 16  Slot Map Verification Methods"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 15.4  ReticleID Verification",
    "content": "15.4.1  Table 17 below defines the Optional methods for ReticleID verification.  \nTable 17  ReticleID Verification Methods  \n15.5  Table 18 clarifies the relation of the reservation and verification to the related services.  \nTable 18  Reservation and Verification Relation to Service"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 16  Reticle Pod Release Control (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 16  Reticle Pod Release Control\n\nContent: 16.1 For equipment, where Pod Read/Write technology is used and the Host initiates writing, the reticle pod or reticle cassette must remain at the write position where the tag may be accurately written on until the Host has completed its entire read and write operations. For this purpose, a variable that affects the equipment releasing a pod is defined. 16.2 Pod Hold Trigger — Equipment shall allow the user to select a trigger to release the carrier pod when reading/writing is complete. Release does not mean the equipment must move the pod from the location it currently occupies, only that it is permissible to do so. 16.2.1 Pod Hold Trigger set to Host Release — If the Pod Hold trigger is set to Host Release, equipment shall hold the pod at the write position until the PodRelease service is received. 16.2.2 PodHold Trigger set to Equipment Release — If the Pod Hold trigger is set to Equipment Release, the equipment shall release the reticle pod based on the when the equipment has finished removing all reticles from"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 16  Reticle Pod Release Control (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 16  Reticle Pod Release Control\n\nContent: the pod, finished placing all reticles in the pod, and in the case where the equipment initiates writing until the equipment has finished writing. 16.3 Fixed Buffer Equipment shall allow the user to select a trigger to unclamp the reticle pod based on AMHS arrival at the equipment. If the access mode is MANUAL, the unclamp control trigger has no effect. 16.3.1 UnclampControl trigger set to PODCOMPLETE Triggered Unclamp — The equipment automatically unclamps the reticle pod when the reticle pod status is COMPLETE. 16.3.2 UnclampControl trigger set to AMHS Triggered Unclamp — The equipment behavior depends upon the Reticle Load Port Access State. If the Reticle Pod Load port Access State is AUTO, the reticle pod remains clamped until AMHS has arrived. The AMHS arrives and begins a PIO unload sequence."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 17  Reticle Location Object Definition (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 17  Reticle Location Object Definition\n\nContent: 17.1 A Reticle Location Object (RLO) provides a model for identifying reticle locations. Each RLO on an equipment is assigned a reticle location ID to uniquely identify it. The assignment shall be documented by the equipment supplier. There are two types of substrate locations: reticle pod reticle location, which is the location or position (e.g., slot) in the reticle pod, and equipment reticle location, which is on the equipment resource. The equipment reticle location is a persistent object, while the reticle pod reticle locations are dynamic objects that shall be created or deleted by the placement or removal of reticle pods on the equipment. The intent is to follow E90 in regards to location object management. The reticle location object is a subtype of the substrate location object. 17.1.1 Source reticle locations and Destination reticle locations are the points at which reticles transfer to/from the equipment’s internal reticle locations (often locations at which processing occurs). A reticle pod"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 17  Reticle Location Object Definition (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 17  Reticle Location Object Definition\n\nContent: reticle location is the Source or Destination reticle location when a pod is used to transfer the reticle. An equipment reticle location can be the Source or Destination reticle location when the reticle is transferred directly (without a pod). 17.2 Reticle Location State Model ⎯ Figure 9 below shows the dynamic behavior of the reticle location using the Harel state chart representation. 17.3 Reticle Location State Definitions 17.3.1 RETICLE LOCATION — the superstate of UNOCCUPIED and OCCUPIED. 17.3.2 UNOCCUPIED — the state in which the reticle location does not hold or have a reticle. 17.3.3 OCCUPIED — the state in which the reticle location holds a reticle. 17.4 Substrate Location State Transition"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 17.5  Reticle Location Object Attributes",
    "content": "17.5.1  Table 20 defines attributes for Reticle location objects.  These attributes can be accessed by using GetAttr and SetAttr messages as defined in SEMI E39 (OSS)."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18  Services (Part 1)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18  Services\n\nContent: 18.1 The purpose of this section is to define the message services required to support Reticle Management functionality. 18.1.1 This message service definition has four parts: A service description table. A service parameter table. A service parameter value table that specifies the type and range of the parameters. A service state mapping table that defines the states in which each service is valid. 18.2 Service Message Description 18.2.1 There are two types of services: • An initial message and response between the service user and the service provider. • A notification message from the service provider to the service user that does not require a response. 18.2.2 The “TYPE” column in the following table is used to indicate whether the service consists of a request/response message pair, “R”, or a single notification message, “N”. 8.2.3 The “Requirement” level column in the following table is used to indicate whether the service is a undamental requirement, “F”, or an additional capability “A” for RPMS. Table 21 Service Message"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18  Services (Part 2)",
    "content": "Title: SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18  Services\n\nContent: Description #1 Normally this transition would be from the substate of RETICLE ID VERIFICATION, RETICLE WAITING FOR HOST."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.3  Service Message Parameter Definition",
    "content": "18.3.1  The following is a list of required parameters used in conjunction with service messages."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4  Fundamental Service Message Definitions",
    "content": "18.4.1  The following tables specify the allowable/required parameters for each service.  The column marked “REQ/OPT”, specifies which parameters are required to be supported for RPMS compliance $\\mathrm { \\Delta R } = \\mathrm { R }$ equired, ${ \\bf O } =$ Optional)."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.2  Bind",
    "content": "18.4.2.1  The Bind service is used to associate a PodID with a load port.  The Bind can contain a PropertiesList of pod object attributes that are supplied by the host.  A pod object is instantiated when this service is used successfully.  The Bind service will be rejected if the pod specified has already been instantiated through the Bind or PodNotification service, or a PodID read.  The Bind service also triggers a transition in the Load Port Reservation state model from NOT RESERVED to RESERVED.  \nTable 23  Bind Service Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.3  CancelBind",
    "content": "18.4.3.1  The CancelBind request is used to cancel the association between a port and a PodID.  The pod object is destroyed when this service is used successfully.  The CancelBind service also triggers a transition in the Load Port Reservation state model from RESERVED to NOT RESERVED.  \nTable 24  CancelBind Service Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.4  CancelPod",
    "content": "18.4.4.1  The CancelPod request is used to stop a reticle pod.  If the reticle pod is at a reticle pod load port, then it shall be made ready for unload.  The production equipment shall reject this service if issued after reticles have been removed for processing.  \nTable 25  CancelPod Service Parameters"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.5  CancelPodAtPort",
    "content": "18.4.5.1  CancelPodAtPort is used to abort any pod at a designated port.  This service can be used when the podID of the pod at the designated port is unknown.  \nTable 26  CancelPodAtPort Service Parameters"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.6  CancelPodNotification",
    "content": "18.4.6.1  The CancelPodNotification is used by the host to request the equipment cancel a previous PodNotification service.  This service shall cause the equipment to destroy the pod object specified."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.7  ChangeAccess",
    "content": "18.4.7.1  The ChangeAccess message requests a change of access mode for the load ports specified in the PortList."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.8  ChangeServiceStatus",
    "content": "18.4.8.1  The ChangeServiceStatus service is used to request the production equipment change a load port service state.  \nTable 29  ChangeServiceStatus Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.9  OktoUseReticle",
    "content": "18.4.9.1  The OktoUseReticle service is sent by the host to indicate that the reticle may be used for processing.  The equipment should change the reticle state model RETICLE AT EQUIPMENT status to QUALIFIED."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.10  PodComplete",
    "content": "18.4.10.1  The PodComplete service is used by the host to inform the equipment that all actions for transferring reticles in and out of the pod are complete.  This service is used when the equipment has not previously received a ReticleTransferJob service for the pod.  This service may also be used in the event of a Reticle Transfer Job that is not completed successfully.  \nTable 31  PodComplete Parameters"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.11  PodNotification",
    "content": "18.4.11.1  The PodNotification service is used by the host to inform the equipment that a Pod with the ID specified will be arriving at the equipment.  The load port is not specified; therefore no pod to load port association takes place.  A pod object with the ObjID equal to the PodID specified in the service is instantiated.  The PodNotification service will be rejected if the pod specified has already been instantiated through the Bind or PodNotification service, or a PodID read.  \nTable 32  PodNotification Service Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.12  ProceedWithPod",
    "content": "18.4.12.1  The ProceedWithPod service is sent by the host to indicate that the pod operations may continue.  When using host based verification it is used by the host to indicate to the production equipment that the verification of PodID and/or the Cassette Slot Map is correct.  For successful production equipment based verification the production equipment shall not require this message before proceeding with the pod.  For failed production equipment based verification the production equipment shall require either a CancelPod or ProceedWithPod service.  \n18.4.12.2  Using Table 33, for the Host based PodID verification case, the ProceedWithPod service sent by the host after the first PodID read is referred to as ProceedWithPod #1, the ProceedWithPod service sent after slot map read is referred to as ProceedWithPod #2.  \nTable 33  ProceedWithPod Service Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.13  ProceedWithReticle",
    "content": "18.4.13.1  The ProceedWithReticle service is sent by the host to indicate that reticle operations may continue.  In particular and in the normal case, this service is used to change a Reticle, in the RETICLE WAITING FOR HOST state from RETICLE WAITING FOR HOST to PARTICLE INSPECTION when particle inspection is required, and from RETICLE WAITING FOR HOST to QUALIFIED if particle inspection is not required.  \nTable 34  ProceedWithReticle Service Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.14  RejectReticle",
    "content": "18.4.14.1  The RejectReticle service is sent by the host to indicate that the reticle may no longer be used for processing, unless it is requalified.  The equipment shall change the reticle state model RETICLE AT EQUIPMENT status to REJECTED.  \nTable 35  RejectReticle Service Parameter Definition"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.4.15  SetQualificationIntervalTime",
    "content": "18.4.15.1  The SetQualifiactionIntervalTime service is sent by the host to change the time between inspection for a specific or a list of specific reticles.  This service uses SETATTR as defined in SEMI E39.  \n18.5  Additional Service Message Definitions  \n18.5.1  CancelAllPodOut  \n18.5.1.1  The CancelAllPodOut service is sent to internal buffer production equipment to cancel all PodOut services in queue.  \nTable 36  CancelAllPodOut Service Parameter Definitions"
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.5.2  CancelMoveReticle",
    "content": "18.5.2.1  The CancelMoveReticle service is sent by the host to cancel a MoveReticle service.  The equipment shall refrain from removing the reticle specified.  This shall apply on if the move has not been started."
  },
  {
    "title": "SEMI E109-0305SPECIFICATION FOR RETICLE AND POD MANAGEMENT (RPMS) - # 18.5.3  CancelPodOut",
    "content": "18.5.3.1  The CancelPodOut service is sent to internal buffer production equipment to cancel a queued PodOut.  \nTable 38  CancelPodOut Service Parameter Definitions"
  }
]