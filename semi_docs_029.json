[
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5  Terminology (Part 2)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5  Terminology\n\nContent: CDM document. Table 1 provides a mapping of fundamental terminology of the CDM document into this document and the EtherNet/IP specification. Note that Column 2 contains an equal sign $ { \\mathbf { \\tilde { \\Sigma } } } ^ { 6 6 } = { \\mathbf { \\vec { \\Sigma } } } ^ { 3 }$ if the definition is used exactly as specified in the CDM specification. Table 1 Mapping of CDM to NCS Terminology"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5.4  EtherNet/IP Specific Definitions",
    "content": "5.4.1  class  A set of objects that all represent the same kind of system component.  A class is a generalization of an object.  All objects in a class are identical in form and behavior, but may contain different attribute values."
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5.4.2  Control and Information Protocol (CIP)  The common network, transport and application layers shared by EtherNet/IP and DeviceNet. (Part 1)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5.4.2  Control and Information Protocol (CIP)  The common network, transport and application layers shared by EtherNet/IP and DeviceNet.\n\nContent: 5.4.3 device profile An EtherNet/IP specification for a device that contains an object model for the device type, the I/O data format for the device type, and the configuration data and the public interface(s) to that data. 5.4.4 encapsulation The technique used by layered protocols in which a layer adds header information to the protocol data unit (PDU) from the layer above. As an example, in Internet terminology, a packet would contain a header from the data link layer, followed by a header from the network layer (IP), followed by a header from the transport layer (TCP), followed by the application protocol data. 5.4.5 Ethernet A 10/100-Mb/s standard for LANs, initially developed by Xerox, and later refined by Digital, Intel and Xerox (DIX). All hosts are connected to the network media where they contend for network access using a Carrier Sense Multiple Access with Collision Detection"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5.4.2  Control and Information Protocol (CIP)  The common network, transport and application layers shared by EtherNet/IP and DeviceNet. (Part 2)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5.4.2  Control and Information Protocol (CIP)  The common network, transport and application layers shared by EtherNet/IP and DeviceNet.\n\nContent: (CSMA/CD). 5.4.6 EtherNet/IP EtherNet/IP (Ethernet/Industrial Protocol) is a networked communications protocol that specifies the encapsulation of CIP over TCP/IP. 5.4.7 Explicit Message Connections Connections over an EtherNet/IP network that provide generic, multi-purpose communication paths between two devices. These connections often are referred to as just Messaging Connections. Explicit Messages provide the typical request/response–oriented network communications. 5.4.8 Input/Output Connections Connections over an EtherNet/IP network that provide dedicated, specialpurpose communication paths between a producing application and one or more consuming applications. Application-specific I/O data moves though these ports."
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure (Part 1)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure\n\nContent: 6.1 Though the protocol specification is called “EtherNet/IP”, Ethernet is technically not required. EtherNet/IP may be used on any media that supports transmission of the Internet Protocol (IP). When Ethernet is used, it shall comply with the IEEE 802.3 specification. NOTE 1: Conformance testing of EtherNet/IP products is limited to those products implemented on Ethernet. 6.2 The following sections give a brief description of the EtherNet/IP specification in terms of the seven layer architecture described by the ISO Basic Reference Model for Open Systems Interconnection (the OSI model). 6.3 Physical Layer The physical layer requirements include specifications for topology, media, connectors, shielding and grounding. Where copper media is used, the EtherNet/IP specification is based on the ANSI/TIA/EIA-568-B Category 5/5E cable/connector specifications. A Commercial grade and Industrial grade level of conformance are specified. The signaling and coupling are as specified in"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure (Part 2)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure\n\nContent: the IEEE 802.3 / TP-PMD standard. 6.4 Data Link Layer For compatibility with EtherNet/IP conformance testing capabilities, the device must comply with the Ethernet Data Link Layer Specifications as specified by IEEE 802.3. Otherwise, any data link layer that supports the IP is acceptable. 6.5 Network Layer The network layer for the EtherNet/IP protocol is defined by the Internet Protocol (IP version 4) (RFC 791). 6.6 Transport Layer The transport layer requires the support of Transmission Control Protocol (TCP) (RFC 793) as well as User Datagram Protocol (UDP) (RFC 768). 6.7 Session Layer Many of the services and functions of the session layer for the EtherNet/IP protocol are divided and handled, in varying capacities, by the TCP/UDP protocol specifications and the EtherNet/IP Application Layer specifications. The first defines transport level connection sessions, while the latter defines application level sessions in terms of Explicit Connection and I/O Connection management."
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure (Part 3)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure\n\nContent: 6.8 Presentation Layer The presentation layer is defined in terms of standard data types and specific encoding definitions for application layer data. 6.9 Application Layer The device shall comply with the EtherNet/IP application layer specification for defining and addressing objects, including their attributes and services, and enabling specified network behavior. The device shall comply with the object model specifications provided in the EtherNet/IP specification. 6.10 Object models EtherNet/IP provides an objectoriented specification for creating, defining and addressing objects explicitly, including their attributes and services (i.e., explicit messaging), and creating, defining and communicating object attribute assemblies in an application dependent format (i.e., input/output messaging). The device shall comply with the object model specifications provided in the EtherNet/IP documentation. In addition, the device shall comply with the object specifications defined in"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure (Part 4)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 6  Communication Protocol High Level Structure\n\nContent: Section 7 of this document."
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types (Part 1)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types\n\nContent: 7.1 The EtherNet/IP specification identifies and describes objects (i.e., classes) that must exist in all EtherNet/IP compliant devices. The Common Device Model (CDM) specification additionally identifies two objects, the Device Management (DM) and Sensor Actuator Controller (SAC) objects, that must exist in all SEMI compliant SAN devices. The required object types for a SEMI compliant SAN device utilizing the network communication specification described herein, necessarily comprises the union of the above two requirements. 7.2 A list of required and optional object types is given in Table 2. Note that the Sensor, Actuator, and Controller object types are not required, and are indicated as optional in the CDM specification. These objects are aggregated together to form a SEMI and EtherNet/IP compliant device. 7.3 The two required object types from the CDM (the DM and the SAC) are implemented as mapped components in EtherNet/IP; they are mapped to the SEMI-specific S-Device Supervisor object class"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types (Part 2)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types\n\nContent: as described in this section. 7.4 The listed object types are: Identity, Message Router (MR), Connection (Conn), Connection Manager (CM), Ethernet Link (EL), TCP/IP Interface (TCP/IP), S-Device Supervisor (S-DS), Device Management (DM), Sensor Actuator Controller (SAC), Sensor, Actuator, and Controller. 7.5 Also, although not a network addressable object, each device shall support the Unconnected Message Manager (UCMM) as defined by EtherNet/IP. Table 2 Object Types NOTE 1: See EtherNet/IP specification for further information; values are hexadecimal. NOTE 2: See CDM specification for further information. NOTE 3: Application Dependent. NOTE 4: The DM and SAC Objects are implemented as mappings to the S-Device Supervisor object for EtherNet/IP. 7.6 See the EtherNet/IP specification for the implementation detail of the following object classes: Identity Message Router (MR) Connection (Conn) Connection Manager (CM) Ethernet Link (EL) TCP/IP Interface (TCP/IP) S-Device Supervisor (S-DS) 7.7 The Sensor,"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types (Part 3)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types\n\nContent: Actuator and Controller object types are utilized collectively to model the type specific structure and behavior of the device. The requirement and number of each of these object types in a device model is device type specific. Further, the attributes, services and behavior associated with each of these object classes and instances in a device is also device type specific, but must be compliant with both SEMI and EtherNet/IP specifications. The specification of these object types for a specific device type can be found in the appropriate SDM. The method of presentation of object structure and behavior to the EtherNet/IP network for objects defined for and associated with a specific device type can be found in Section 9 of this document. 7.8 The following sections describe the implementation detail for the two required objects from the CDM. The EtherNet/IP specification essentially combines the Device Management (DM) Object and the Sensor Actuator Controller (SAC) Object into a single Object: the"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types (Part 4)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types\n\nContent: S-Device Supervisor (S-DS) Object. 7.9 Device Management (DM) Object The DM object is the device component responsible for managing and consolidating the device operation. The DM object as well as its common required and optional attributes, services and behavior are described in the CDM standard. The presentation of object attributes and services to the EtherNet/IP network shall be as indicated in Table 3 and Table 4 respectively. Each attribute and service is shown with its corresponding identifier (ID) for the S-DS Object. Table 3 Network Presentation of DM Object Attributes NOTE 1: Attribute Identifier Values are hexadecimal. NOTE 2: Reporting is controlled in EtherNet/IP by the configuration of connection related object instances. See the EtherNet/IP specification for detail. Table 4 Network Presentation of DM Object Services NOTE 1: Service Identifier Values are hexadecimal. 7.10 Sensor, Actuator, Controller (SAC) Object The SAC object is the device component responsible for coordinating the"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types (Part 5)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 7  Required Object Types\n\nContent: interaction of the device with the sensory/actuation/control environment. The SAC object as well as its common required and optional attributes, services and behavior are described in the CDM standard. The presentation of object attributes and services to the EtherNet/IP network shall be as indicated in Table 5 and Table 6 respectively. Each attribute and service is shown with its corresponding identifier (ID) for the S-DS Object. Table 5 Network Presentation of SAC Object Attributes NOTE 1: Attribute Identifier Values are hexadecimal. Table 6 Network Presentation of SAC Object Services NOTE 1: Service Identifier Values are hexadecimal. NOTE 2: Restoring defaults in EtherNet/IP is managed at the device level with services defined for the Identity Object. NOTE 3: Reporting is controlled in EtherNet/IP by the configuration of connection related object instances. See the EtherNet/IP specification for detail."
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 8  Protocol Compliance",
    "content": "8.1  A method of testing protocol compliance is required to verify implementation conformance to the standard.  \n8.2  The compliance test suite for this protocol is documented along with the EtherNet/IP specification. ODVA has established an independent test center that perform a complete EtherNet/IP protocol compliance test suite.  Visit <http://www.odva.org> for more information."
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 9  Specific Device Model Mappings (Part 1)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 9  Specific Device Model Mappings\n\nContent: 9.1 The following sections specify mappings for Sensor Actuator Network Specific Device Models. 9.2 Mass Flow Device — Reference SEMI E54.3 for a complete specification of the SDM for Mass Flow Devices. Accordingly, the following mapping rules apply to the identification tags for the Objects, Attributes and Services of this model. 9.2.1 Objects — Table 7 shows the mapping of the SDM objects specified in SEMI E54.3 and the EtherNet/IP objects. Table 7 MFD Object Identifiers NOTE 1: Object Identifier Values are hexadecimal. NOTE 2: The EtherNet/IP device model provides a different mechanism for data flow based on the configuration of EPATH type attributes. See the EtherNet/IP specification for detail. 9.2.1.1 Additional objects may be defined by the manufacturer in the Device Profile for a given device. 9.2.1.2 All objects listed in Table 7 provide a one-toone correlation, with respect to Attributes and Services, between the SEMI SAN and EtherNet/IP. Therefore, no mapping is necessary for"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 9  Specific Device Model Mappings (Part 2)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 9  Specific Device Model Mappings\n\nContent: attributes and services here in this standard. NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer' s instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility. Copyright by SEMI® (Semiconductor Equipment and Materials"
  },
  {
    "title": "SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 9  Specific Device Model Mappings (Part 3)",
    "content": "Title: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 9  Specific Device Model Mappings\n\nContent: International), 3081 Zanker Road, San Jose, CA 95134. Reproduction of the contents in whole or in part is forbidden without express written consent of SEMI."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the European Equipment Automation Committee.  Current edition approved by the European Regional Standards Committee on November 10, 2004.  Initially available at www.semi.org February 2005; to be published March 2005."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 1  Purpose",
    "content": "1.1  This specification is part of the SEMI Sensor/Actuator Network (SAN) suite of standards and defines a specific communications protocol based on the PROFINET standard.  This Network Communication Standard (NCS) taken together with the SEMI Sensor/Actuator Network standard suite and the PROFINET standard completely and unambiguously defines an open standard providing an industry specific solution to off-the-shelf interoperability of networked devices in semiconductor manufacturing equipment.  \n1.2  PROFINET is a vendor independent, open field bus standard for a wide range of applications in manufacturing, process and building automation.  \n1.3  The application model of PROFINET is compatible with the model of PROFIBUS.  The same mapping rules apply.  \n1.4  PROFINET is optimized for high speed and inexpensive connectivity between automation control systems and distributed I/O at the device level."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 2  Scope (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 2  Scope\n\nContent: 2.1 This document specifies a SAN communications standard based on the PROFINET specification that is in compliance with SEMI E54.1. As such, it specifies the protocol, services, and behavior that compliant intelligent devices must support in order to interchange information over this SAN in a method compatible with SEMI E39. 2.2 In conjunction with a SEMI standard SAN Common Device Model (CDM) specification and one or more SEMI standard Specific Device Model (SDM) specifications (e.g., for a mass flow controller), this Network Communication Standard (NCS) with the related PROFINET standard describe the data structures, interactions, and behavior that are characteristic of the various devices on the network. This composite model forms a complete interoperability standard for communications among intelligent sensors, actuators, and controllers in semiconductor manufacturing equipment. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 2  Scope (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 2  Scope\n\nContent: this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 3  Limitations (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 3  Limitations\n\nContent: 3.1 This document specifies a semiconductor equipment SAN based solely on PROFINET and is a companion document to the PROFINET specification, including, by reference, the PROFINET standard; thus, a complete specification of this standard necessarily includes the PROFINET specifications. There are other semiconductor equipment SAN communications options. The specifications for these options are not included here. 3.2 The specifications within are strictly enhancements that provide additional capabilities over and above those currently required by PROFINET. Included throughout this document, primarily in $\\ S 6$ , is information paraphrased from the PROFINET specifications such as: protocol structure, capabilities, options, and limitations. This information is provided here for reference only and is not intended to provide specification definitions. In all such areas, refer to the PROFINET specification documents for information. This document is limited to describing enhancements or limitations to the PROFINET"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 3  Limitations (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 3  Limitations\n\nContent: specification that are imposed by this standard. 3.3 A complete specification of the conformance testing procedure shall include the PROFINET protocol conformance testing specification. Conformance testing shall also include enhancements and limitations to the PROFINET specification required by this standard."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 4  Referenced Standards (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 4  Referenced Standards\n\nContent: 4.1 SEMI Standards SEMI E39 — Object Services Standard: Concepts, Behavior, and Services SEMI E54.1 — Standard for Sensor/Actuator Network Common Device Model SEMI E54.3 — Specification for Sensor/Actuator Network Specific Device Model for Mass Flow Device SEMI E54.10 — Specification for Sensor/Actuator Network Specific Device Model for an In-Situ Particle Monitor Device SEMI E54.11 — Specific Device Model for Endpoint Devices 4.2 IEC Standards1 IEC 61158-5 — Digital data communication for measurement and control – Fieldbus for use in industrial control systems – Application Layer service definition (reference standard for the model in use) IEC 61158-6 — Digital data communication for measurement and control – Fieldbus for use in industrial control systems – Application Layer protocol specification (reference standard for the model in use) 4.3 IEEE Standards2 IEEE 802.3 — Telecommunications and information exchange between systems — Local and metropolitan area networks — Part 3:Carrier sense multiple"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 4  Referenced Standards (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 4  Referenced Standards\n\nContent: access with collision detection (CSMA/CD) access method and physical layer specifications IEEE 802.1D — Telecommunications and information exchange between systems — Local and metropolitan area networks — Common specifications — Media Access Control (MAC) Bridges IEEE 802.1Q — Telecommunications and information exchange between systems — Local and metropolitan area networks — Common specifications —Virtual Bridged Local Area Networks 4.4 ISO Standards3 ISO 7498 Information Technology — Open Systems Interconnection — Basic Reference Model 4.5 PROFINET Standards4 PROFINET IO — Application Layer protocol specification PROFINET IO — Application Layer service definition PROFIBUS Profile Guidelines — Part 1: Identification & Maintenance Functions PROFINET — Discovery and Configuration Protocol PROFINET — Installation Guideline GSD Specification for PROFINET NOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5  Terminology (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5  Terminology\n\nContent: 5.1 Abbreviations and Acronyms 5.1.1 APDU — Application Protocol Data Unit semi 5.1.2 AREP — Application Reference Endpoint 5.1.3 ASE — Application Service Element 5.1.4 CDM — Common Device Model 5.1.5 DCE — Distributed Computing Environment 5.1.6 DCP — Discovery and Configuration Protocol 5.1.7 DHCP — Dynamic Host Configuration Protocol 5.1.8 DM — Device Manager 5.1.9 GSD — Generic station description 5.1.10 IM — Identification and Maintenance 5.1.11 IO — Input Output 5.1.12 IP — Internet Protocol 5.1.13 NCS — Network Communication Standard 5.1.14 OSI — Basic Reference Model for Open Systems Interconnection (ISO 7498) 5.1.15 PDU — Protocol Data Unit 5.1.16 PHY — Physical Layer 5.1.17 RPC — Remote Procedure Call 5.1.18 SAC — Sensor, actor, controller (object) 5.1.19 SAN — Sensor/actor network 5.1.20 SAP — Service Access Point 5.1.21 SDM — Specific Device Model 5.1.22 UDP — User Datagram Protocol 5.2 Terminology Defined in Sensor/Actuator Network Common Device Model (SEMI E54.1) 5.2.1 attribute 5.2.2 behavior 5.2.3"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5  Terminology (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5  Terminology\n\nContent: byte 5.2.4 common device model 5.2.5 device 5.2.6 Device Manager (DM) Object 5.2.7 device model 5.2.8 instance 5.2.9 network communication standard 5.2.10 object 5.2.11 Sensor, Actuator and Controller (SAC) Object 5.2.12 service 5.2.13 specific device model 5.2.14 state diagram"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.3  Terminology Mapping",
    "content": "5.3.1  As this standard defines the mapping of CDM data structure and behavior over a network it makes use of many of the terms in SEMI E54.1.  Table 1 provides a mapping of fundamental terminology of the CDM document into this document which uses the terminology of PROFINET IO."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions\n\nContent: 5.4.1 Context Management — network-accessible information (communication objects) that supports managing the operation of the system, including the application layer. NOTE 1: Managing includes functions such as controlling, monitoring, and diagnosing. Table 1 Mapping of CDM to NCS Terminology 5.4.2 Device Data Base — an electronic file that provides a clear and comprehensive description of the characteristics of a device type in a precisely defined format. Also called a GSD File. 5.4.3 Device Profile — a Device Data Base Sheet, which specifies the characteristic features of a device, and a GSD File. 5.4.4 channel — single physical or logical link of an input or output application object of a server to the process. 5.4.5 channel related diagnosis — information concerning a specific element of an input or output application object, provided for maintenance purposes. 5.4.6 diagnosis data object — object(s) which contains diagnosis information referenced by device/slot/subslot/diagnosis identifier."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions\n\nContent: 5.4.7 GSD File — see Device Data Base. 5.4.8 Index — address of a record data object. 5.4.9 IO Controller — a device that manages its assigned IO Devices and handles user data exchange; usually a programmable controller. 5.4.10 IO data object — object designated to be transferred cyclically for the purpose of processing and referenced by device/slot/Subslot. 5.4.11 IO Device — a device that is configured and managed by IO Controllers and IO Supervisors; an IO Device initiates no unsolicited communications. 5.4.12 IO Supervisor — a device that interacts as a configuration or diagnostic tool; usually a programming device. 5.4.13 module — hardware or logical component of a physical device. 5.4.14 provider — node or source sending data to one or many consumers. 5.4.15 record data object — object(s) which are already pre-processed and transferred acyclically for the purpose of information or further processing and referenced by device/slot/subslot/index. 5.4.16 resource — processing or information"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions (Part 3)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions\n\nContent: capability. 5.4.17 server — a) role of an AREP in which it returns a confirmed service response APDU to the client that initiated the request — b) object which provides services to another (client) object. 5.4.18 service — operation or function that an object and/or object class performs upon request from another object and/or object class. 5.4.19 Service Access Point — an addressable location in a device for the directing of service requests. 5.4.20 slot — address of a structural unit within an IO device. NOTE 2: Within a modular device, a slot typically addresses a physical module. Within compact devices, a slot typically addresses a logical function or virtual module. 5.4.21 slot related diagnosis — information dedicated to modules for maintenance purpose. 5.4.22 submodule — hardware or logical component of a module. 5.4.23 subslot — address of a structural unit within a slot. NOTE 3: A subslot may address a physical interface for submodules within a module. Generally, a subslot is a second"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions (Part 4)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 5.4  PROFINET Specific Definitions\n\nContent: level to tructure data within a device. 5.4.24 vendor ident number — central administrative number assigned by the PNO."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6  Communication Protocol High Level Structure",
    "content": "6.1  The PROFINET IO protocol constitutes a collapsed form of the OSI seven layer architecture.  PROFINET IO uses physical, data link, network, transport, and application layers of the Reference Model.  For real time communication a three layer approach with physical, data link and application is specified.  This section has been formatted to be aligned with the Basic Reference Model for OSI.  Figure 1 gives an overview of the architecture.  \nFigure 1 Layering of PROFINET in Relation to OSI"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.2  General Behavior",
    "content": "6.2.1  In a typical remote I/O configuration, single IO controller architectures are used to optimize response times.\nIn lower speed applications, multi IO controller architectures are also possible.  \n6.2.2  Message transfer is organized in cycles.  A message cycle mainly consists of a set of Output Data Frames of the IO controller and a set of Input Data Frames of several IO devices.  Every Output Data Frame is associated to an Input Data Frame.  The monitoring of an IO application relationship is done by the receiver of that frames.  \n6.2.3  A brief description of the PROFINET protocol as it relates to the ISO 7498 OSI model follows in the sections below.  For protocol efficiency, PROFINET does not define layers 3 to 7 for cyclic IO data transfer and alarms. Layer 7 is the interface between the Application Process and the communication stack.  \nNOTE 4:  The information contained in this section is for reference only.  It in no way represents specifications for PROFINET.\nSee related documentation for these specifications."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.3  Physical Layer — Layer 1",
    "content": "6.3.1  The Physical Layer of IEEE 802.3 is adopted.  There are two recommendations specified for the Physical Layer (PHY): twisted pair (100 Base TX) and optical (100 Base FX) in PROFINET.  See IEEE 802.3 standard for more information about these options.  More Details are specified in the PROFINET Installation Guideline.  If an accepted physical standard other than IEEE 802.3 is being used it has be clearly specified in the product documentation."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.4.1  Data Transfer",
    "content": "6.4.1.1  The Data Link Layer provides the functions for sending and receiving data over the network.  Protocol Data Units (PDU) are packaged, delivered, and checked.  Checks are used to guard against Line Protocol Errors (e.g., frame, overrun, and coding violations).  IEEE 802.3 Data Link MAC sublayer is the preferred Data link technology of PROFINET.  If an accepted data link standard other than IEEE 802.3 is being used it has to be clearly specified in the product documentation.  \n6.4.1.2  A PDU is restricted to 1500 bytes.  A protocol overhead of 28 Bytes is needed for addressing, error detection and protocol selection."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.4.2  Conveyance of Data (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.4.2  Conveyance of Data\n\nContent: 6.4.2.1 In IEEE 802 networks bridges (switches) are used to transport data. These bridge functions are defined in IEEE 802.1D and IEEE 802.1Q (priority options). Real time extensions can be used to enhance performance and availability of bridged networks. 6.5 Network Layer — Layer 3 6.5.1 While real time data transfer uses a protocol with no network layer, all other services are using IP (Internet Protocol) as network layer. 6.6 Transport Layer — Layer 4 6.6.1 All non-real time services are using UDP (User Datagram Protocol) as transport layer. 6.7 Session Layer — Layer 5 6.7.1 There is no distinct Session Layer in this CDM. 6.8 Presentation Layer — Layer 6 6.8.1 There is no distinct Presentation Layer in this CDM. The Encoding is part of the application layer. 6.9 Application Layer — Layer 7 6.9.1 The PROFINET IO application layer is structured in a so called service definition and protocol specification. The service definition uses an object orientated approach and specifies the services for remote"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.4.2  Conveyance of Data (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.4.2  Conveyance of Data\n\nContent: access and local functions together with their objects (the ASE is a class definition of these objects). The protocol specification includes both coding and state machines."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition\n\nContent: 6.9.2.1 Application layer services are structured to reflect the needs of flexible configurable automation devices. A Device consists of a set of modules that are placed in slots (see Figure 2). Modules are addressed uniquely by the slot number. The module view can be a hardware oriented or reflects the software structure of the IO Device. 6.9.2.2 Each module contains submodules that contain objects of different classes. Submodules are the addresses of the submodules. 6.9.2.3 Slot 0 is used to address the IO Device itself. Subslot 0 represents the module and contains no IO Data. The other object classes can have instances scattered over the modules and their submodules addressed by slots and their subslots respectively. Each submodule (except submodule 0) can contain IO Data, Context parameter, Diagnosis information, Record Data and Alarms. Record Data is a generic class which can contain different application specific parameters accessible by read and write services. There is a set of identification"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition\n\nContent: and maintenance parameters defined in a PROFIBUS Guideline that are mandatory within PROFINET. 6.9.2.4 Object classes are defined for: IO Data for periodic reporting, Context for configuration, Diagnosis for event collection, Record Data for polled access, and Alarms for asynchronous event reporting. A set of services are defined for these object classes. 6.9.2.5 IO Data are handled mainly by buffered services which allow decoupling between application and communication. Client/Server service structure (request/response) is used for Context for configuration, Diagnosis for event collection, Record Data for polled access and Alarms for asynchronous event reporting. 6.9.2.6 Cyclic functionalities offered in PROFINET IO: exchange of IO data with related IO devices 6.9.2.7 Acyclic functionalities offered in PROFINET IO: read diagnosis from IO devices configuration of IO devices write parameter data to IO devices (startup or application parameter) treatment of configuration and diagnosis requests of an"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition (Part 3)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition\n\nContent: engineering device initiate connections to IO devices by means of context management acyclic access to record data of IO devices treatment of alarms from IO devices sending of alarms to IO devices 6.9.3 Protocol Specification 6.9.3.1 An IO device has no IP-address and logical name when it is shipped. 6.9.3.2 A set up procedure has to allocate name and IP-address prior to operation. 6.9.3.3 To access an IO Device a controller has to establish the context first with a connect service. A check is done to ensure that the appropriate device type with the required resources is accessed. Resources can be locked with the connect service. 6.9.3.4 After a positive confirmation of the connect service the IO device may be loaded with the parameter required by the controller application (e.g. warning limits, measure range, filter time). A control service is issued at the end of parameterization. 6.9.3.5 There is a control service indicating that the IO Device application is ready to enter the operate state. The"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition (Part 4)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.2  Service Definition\n\nContent: start up is completed with this service. 6.9.3.6 After this start up procedure the data exchange of IO data can be done and alarms can be signaled from the IO Device to the IO Controller. The IO Controller can invoke services to read and write record data that contain all kind of information e.g. produced units, calibration information, and batch information. 6.9.3.7 A Release service will terminate the context. 6.9.3.8 A context is monitored by the receipt of Input Data at the IO controller and by the receipt of Output Data at the IO device site. A timeout error of one timer unit is allowed which makes it possible to use a single timer resource with granularity in the range of a millisecond. 6.9.3.9 Figure 3 shows a sequence diagram of the start up procedure."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.4  Communication Management (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.4  Communication Management\n\nContent: 6.9.4.1 DCP (Discovery and Configuration Protocol) is used for basic management of stations (especially setting of IP-address and Device name). DHCP (Dynamic Host Configuration Protocol) can be used as configuration option. 6.9.4.2 Connectionless DCE RPC is used as an interface between transport and application. 6.9.4.3 “Identification & Maintenance Functions” (I&M functions) define general parameters and protocols. The main purpose of the I&M functions is to support the end user during various scenarios of a device’s life cycle be it configuration, commissioning, parameterization, diagnosis, repair, firmware update, asset management, audit trailing, and alike. Well-defined uniform parameters and rules should enable the manufacturers to offer devices that behave in a uniform manner These profile guidelines take into account requirements from FDA (Food & Drug Administration) and others. The basic information offered can be characterized as “Type Plate” or “Boiler Plate”. It consists of Manufacturer"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.4  Communication Management (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 6.9.4  Communication Management\n\nContent: ID, Order ID, Serial Number, Hardware Revision, Software Revision, Revision Counter, Profile ID."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7  Required Object Types",
    "content": "7.1  This section describes a general mapping of the SEMI SAN Object Model to the PROFINET environment.\nComponent definitions are clarified and the mapping of Attributes, Services, and Behaviors are specified."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.2  Object Model",
    "content": "7.2.1  The Object Model defined in the CDM is represented in the PROFINET NCS.  Specifically, the DM and SAC objects are mapped.  \n7.2.2  The CDM Objects are mapped to slots.  These slots have a unique address space within the device.  The Specific Application Objects are mapped in PROFINET Device Data Base. $\\ S 9$ specifies the mapping of SDM Objects in PROFINET."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.3  Component Mapping Summary",
    "content": "7.3.1  Figure 4 provides a summary of the components of the CDM object model as they relate to the components of PROFINET."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.4  Objects",
    "content": "7.4.1  The required objects of the CDM are identified here.  Additional objects that are contained in the SDM are given identifiers in the Device Profile. $\\ S 9$ specifies\nadditional mapping information.  \n7.4.2  Table 2 lists the Object Identifiers specified for use in protocol messages.  Slot numbers is the mechanism used for addressing Objects within PROFINET.  Subslot IDs can be used for sub addressing.  Within this NCS the subslot 1 shall be used as default subslot.  \n7.4.3  Assembly Objects and Local Link Objects which are objects embedded in the SAC Object are not explicitly mapped in PROFINET."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5  Attributes",
    "content": "Table 2  Object Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.1  General",
    "content": "7.5.1.1  All attributes are accessible via Get_Attribute and Set_Attribute services defined in the sections below.  The Get_Attribute and Set_Attribute services shall be mapped to PROFINET Read and Write services for Record Data objects.  Additionally, attributes are accessible via different PROFINET defined methods that are mapped in this document based on attribute type."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.2  DM Attributes",
    "content": "7.5.2.1  All attributes are communicated with Read and Write Service and mapped to IM Blocks.  Status attributes are modeled additionally as Diagnosis.  See Table 17 for detailed mapping.  \n7.5.2.2  Table 3 shows the DM status attribute mapping to Diagnosis.  \nTable 3  Diagnosis Mapping of DM Status"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.3  SAC Attributes",
    "content": "7.5.3.1  The attributes of SAC are mapped to Record data objects of PROFINET.  \n7.5.3.2  The Slot number used is 0.  The index is the numeric value of the SAC Attribute identifier with an offset of\n64 (see Table 4).  \nTable 4  SAC Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.4  Active Element Attributes",
    "content": "7.5.4.1  The attributes of Active Elements are mapped to Record data objects of PROFINET.  These attributes are contained in any Sensor, Actuator and Controller Object.  \n7.5.4.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Active Element Attribute identifier with an offset of 64 (see Table 5).  \nTable 5  Active Element Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.5  Sensor Attributes",
    "content": "7.5.5.1  The attributes of Sensors are mapped to Record data objects of PROFINET.  These attributes are contained in any Sensor-AI, Sensor-EI and Sensor-BI Object.  \n7.5.5.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Attribute identifier with an offset of 64 (see Table 6).  \nTable 6  Sensor Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.6  Actuator Attributes",
    "content": "7.5.6.1  The attributes of Actuators are mapped to Record data objects of PROFINET.  These attributes are contained in any Actuator-AO, Actuator-EO and Actuator-BO Object.  \n7.5.6.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Actuator Attribute identifier with an offset of 64 (see Table 7).  \nTable 7  Actuator Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.7  Controller Attributes",
    "content": "7.5.7.1  The attributes of Controllers are mapped to Record data objects of PROFINET.  \n7.5.7.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Controller Attribute identifier with an offset of 64 (see Table 8).  \nTable 8  Controller Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.8  Sensor Analog Input Attributes",
    "content": "7.5.8.1  The attributes of Sensor Analog Inputs are mapped to Record data objects of PROFINET.  \n7.5.8.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Analog Input Attribute identifier with an offset of 64 (see Table 9).  \nTable 9  Sensor Analog Input Object Attribute Identifier"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.9  Sensor Binary Input Attributes",
    "content": "7.5.9.1  The attributes of Sensor Binary Inputs are mapped to Record data objects of PROFINET.  \n7.5.9.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Senso Binary Input Attribute identifier with an offset of 64 (see Table 10).  \nTable 10  Sensor Binary Input Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.10  Sensor Enumerated Input Attributes",
    "content": "7.5.10.1  The attributes of Sensor Enumerated Inputs are mapped to Record data objects of PROFINET.  \n7.5.10.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Enumerated Input Attribute identifier with an offset of 64 (see Table 11).  \nTable 11  Sensor Enumerated Input Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.11  Actuator Analog Output Attributes",
    "content": "7.5.11.1  The attributes of Actuator Analog Outputs are mapped to Record data objects of PROFINET.  \n7.5.11.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Actuator Analog Output Attribute identifier with an offset of 64 (see Table 12).  \nTable 12  Actuator Analog Output Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.5.12  Sensor Binary Input Threshold Attributes",
    "content": "7.5.12.1  The attributes of Sensor Binary Input Thresholds are mapped to Record data objects of PROFINET.  \n7.5.12.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Binary Input Threshold Attribute identifier with an offset of 80 (see Table 13).  The different mapping has to be done because there is an Overlap to the Sensor Binary Input Attributes enumeration part.  \nTable 13  Sensor Binary Input Threshold Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.6.1  DM Services",
    "content": "7.6.1.1  Get_Attribute and Set_Attribute are mapped to Read and Write services to the IM Objects.  \n7.6.1.2  The other services are mapped to a write at an UINT Object addressed with Index 96 as described in Table 2 and Table 14.  \n7.6.1.3  A read to Index 96 will return the last command executed successfully.  \nTable 14  DM Service Mapping"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.6.2  SAC Services",
    "content": "7.6.2.1  Get_Attribute and Set_Attribute are mapped to Read and Write services with Slot and Index as described in ¶¶ 7.2 and 7.4.  \n7.6.2.2  The other services are mapped to a write at an UINT Object addressed with Index 64 as described in Table 2 and Table 15.  \n7.6.2.3  A read to Index 64 will return the last command executed successfully (Exception: Restore Default is no mirrored).  \nTable 15  SAC Service Mapping"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.6.3  Active Element Services",
    "content": "7.6.3.1  Get_Attribute and Set_Attribute are mapped to Read and Write services with Slot and Index as described in ¶¶ 7.2 and 7.4.  \n7.6.3.2  The other services are mapped to a write at an UINT Object addressed with Index 64 as described in Table 2 and Table 16.  \n7.6.3.3  A read to Index 64 will return the last command executed successfully (Exception: Restore Default is not mirrored).  \nTable 16  Active Element Service Mapping"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 7.7  PROFINET Device Data Base",
    "content": "7.7.1  The specification of the Device Data Base (or GSD file) for a given SDM is beyond the scope of this document.  The PROFIBUS Trade Organization is responsible for the management of these files.  \nTable 17  DM Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 8  Protocol Compliance",
    "content": "8.1  PROFIBUS International has established a qualified certification system, with test laboratories in Europe, Asia and North America, which includes conformance testing and interoperability testing (address list can be found at  \nhttp://www.PROFIBUS.com/support.html5).  Certified products are listed with their certificate number in the Electronic Product Guide.  \n8.2  GSD files of all PROFINET devices that are tested for their conformity to the PROFIBUS standard are available in the GSD library on the World Wide Web Server of the PROFIBUS User Organization at http://www.PROFIBUS.com."
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9  Specific Device Model Mappings (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9  Specific Device Model Mappings\n\nContent: 9.1 Every type of device shall have an identifier number. Vendors must apply for an identifier number from the PROFIBUS User Organization. A Device Profile shall be submitted in the form of a GSD File and Device Data Base Sheet. 9.2 The Device Profile must specify the identifiers for Objects, Attributes and Services for CDM and SDM components, including data formats and bit mappings for specified parameters, as represented in this document. 9.3 The following sections specify mappings for Sensor Actuator Network Specific Device Models. 9.4 Mass Flow Device 9.4.1 Reference SEMI E54.3 for a complete specification of the SDM for Mass Flow Devices (MFD). 9.4.2 Objects 9.4.2.1 Consistent with SEMI E54.3 and $\\ P 7 . 4$ above, the DM and SAC objects are identified as Object 1 and Object 2, respectively. 9.4.2.2 Notice that references for the Local Link Objects are not included; the existence of these objects are implied by behavior and not explicitly included. Therefore, these objects are not"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9  Specific Device Model Mappings (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9  Specific Device Model Mappings\n\nContent: accessible from the network. 9.4.2.3 Table 18 shows the mapping of the SDM. 9.4.2.4 Objects specified in SEMI E54.3 are listed under the heading NCS Module ID. Every instance is allocated to a slot number. The configuration can be modeled in the GSD by using the Module ID as key for the module description. Table 18 Mass Flow Device Object Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.4.3  Attributes",
    "content": "9.4.3.1  The mapping of Attribute Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.4.3.2  Tables 19–23 show the mapping of the specific SDM attributes.  \nTable 19  Sensor AI-MF Object Attribute Identifiers  \nTable 20  Actuator AO-MF Object Attribute Identifiers  \nTable 21  Controller Object Attribute Identifiers  \nTable 22  SISO Object Attribute Identifiers  \nTable 23  SISO Setpoint Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.4.4  Services",
    "content": "9.4.4.1  The mapping of Service Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.4.4.2  The additional Services of Sensor-AI-MF are mapped as described in Table 24.  \nTable 24  Sensor-AI-MF Additional Service Mapping"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.5  In-Situ Particle Monitor Device",
    "content": "9.5.1  Reference SEMI E54.10 for a complete specification of the SDM for In-Situ Particle Monitor Device (ISPM).  \n9.5.2  Objects  \n9.5.2.1  Consistent with SEMI E54.10 and $\\ P 7 . 4$ above, the DM and SAC objects are identified as Object 1 and Object 2, respectively.  \n9.5.2.2  Notice that references for the Local Link Objects are not included; the existence of these objects are implied by behavior and not explicitly included.  Therefore, these objects are not accessible from the network.  \n9.5.2.3  Table 25 shows the mapping of the SDM.  \n9.5.2.4  Objects specified in SEMI E54.10 are listed under the heading NCS Module ID.  Every instance is allocated to a slot number.  The configuration can be modeled in the GSD by using the Module ID as key for the module description.  \nTable 25  In-Situ Particle Monitor Device Object Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.5.3  Attributes",
    "content": "9.5.3.1  The mapping of Attribute Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.5.3.2  Tables 26–31 show the mapping of the specific SDM attributes.  \nTable 26  DM Object Additional Attribute Identifiers  \nTable 27  SAC Object Additional Attribute Identifiers  \nTable 28  Sensor AI-LCS Object Attribute Identifiers  \nTable 29  Sensor AI-SLS Object Attribute Identifiers  \nTable 30  Sensor AI-MNS Object Attribute Identifiers  \nTable 31  Sensor AI-Counter Object Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.5.4  Services",
    "content": "9.5.4.1  The mapping of Service Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.5.4.2  The additional Services of DM are mapped as described in Table 32.  \nTable 32  DM Additional Service Mapping  \n9.5.4.3  The additional Services of SAC are mapped as described in Table 33.  \nTable 33  SAC Additional Service Mapping"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.6  Endpoint Device (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.6  Endpoint Device\n\nContent: 9.6.1 Reference SEMI E54.11 for a complete specification of the SDM for Endpoint Devices. 9.6.2 Date-and-Time data structure shall be mapped to PROFINET data type Time Of Day. An Offset of 4383 has to be added to Time Of Day day value to obtain the number of days since 1/1/72 (Time Of Day base is 1/1/84). 9.6.3 Objects 9.6.3.1 Consistent with SEMI E54.11 and $\\ P 7 . 4$ above, the DM and SAC objects are identified as Object 1 and Object 2, respectively. 9.6.3.2 Notice that references for the Local Link Objects are not included; the existence of these objects are implied by behavior and not explicitly included. Therefore, these objects are not accessible from the network. 9.6.3.3 Table 34 shows the mapping of the SDM. 9.6.3.4 Objects specified in SEMI E54.11 are listed under the heading NCS Module ID. Every instance is allocated to a slot number. The configuration can be modeled in the GSD by using the Module ID as key for the module description. 9.6.3.5 The Sensor-BI-TH-EP can occur more than once. This"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.6  Endpoint Device (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.6  Endpoint Device\n\nContent: shall be modeled in GSD in that way, that this Module ID can be placed in several slots. Table 34 Endpoint Device Object Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.6.4  Attributes",
    "content": "9.6.4.1  The mapping of Attribute Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.\n9.6.4.2  Tables 35 and 36 show the mapping of the specific SDM attributes.  \nTable 35  DM Object Additional Attribute Identifiers  \nTable 36  Sensor-BI-TH-EP Object Additional Attribute Identifiers"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 9.6.5  Services",
    "content": "9.6.5.1  The mapping of Service Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.6.5.2  The additional Services of SAC are mapped as described in Table 37.  \nTable 37  SAC Additional Service Mapping  \n9.6.5.3  The additional Services of Sensor BI-EP are mapped as described in Table 38.  \nTable 38  Sensor BI-EP Additional Service Mapping"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 10  Related Documents (Part 1)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 10  Related Documents\n\nContent: 10.1 IEEE Standards6 IEEE 802.3 — Information technology – Telecommunications and information exchange between systems – Local and metropolitan area networks – Specific requirements – Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications IEEE 802.1D — Information technology – Telecommunications and information exchange between systems – Local and metropolitan area networks – Common Specification – Media Access Control (MAC) Bridges IEEE 802.1Q — Information technology – Telecommunications and information exchange between systems – Local and metropolitan area networks – Common Specification – Virtual Bridged Local Area Networks 10.2 Internet Engineering Task Force Standards7 RFC 768 — UDP: User Datagram Protocol; IETF, available at <http://www.ietf.org> RFC 791 — IP: Internet Protocol; IETF, available at <http://www.ietf.org> RFC 1541 — DHCP: Dynamic Host Configuration Protocol; IETF, available at <http://www.ietf.org> 10.3 Other Documents"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 10  Related Documents (Part 2)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 10  Related Documents\n\nContent: C706, CAE Specification DCE1.1: Remote Procedure Call (RPC); OSF available at <http://www.opengroup.org/ onlinepubs/9629399/toc.htm> NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer's instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own"
  },
  {
    "title": "SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 10  Related Documents (Part 3)",
    "content": "Title: SEMI E54.14-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFINET - # 10  Related Documents\n\nContent: responsibility."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee.  Current edition approved by the North American Regional Standards Committee on December 10, 2005.  Initially available at www.semi.org February 2005; to be published March 2005."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 1  Purpose",
    "content": "1.1  This standard defines a communication specification based on the SafetyBUS p protocol to enable communications between intelligent devices on a sensor/actuator network (SAN) that operate according to SEMI specified device models (common and device specific) in a semiconductor manufacturing equipment."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 1.2  Background and Motivation (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 1.2  Background and Motivation\n\nContent: 1.2.1 SafetyBUS p is a device level network which provides a simple, inexpensive, fast, and deterministic means of exchanging data among industrial devices (e.g., sensors and actuators) and higher level devices such as controllers (e.g., programmable control systems) while at the same time providing for the communication of information at a high priority level to support reliable operations. SafetyBUS p provides: A solution to low-level device networking, Access to intelligence present in low-level devices, Networking between higher level controllers, Master/Slave and Peer-to-Peer communication capabilities, and Serial communication of device-critical information. 1.2.2 SafetyBUS p specifies a communication model and protocol. The Physical and Data Link Layer definitions are defined by the Controller Area Network (CAN) technology. The CAN specification provides the Media Access Control (MAC) methodology and physical signaling characteristics. 1.2.3 This document enables communications between"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 1.2  Background and Motivation (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 1.2  Background and Motivation\n\nContent: intelligent devices on a SEMI compliant SAN by providing a presentation mapping of common and specific device network visible structure and behavior to SafetyBUS p network. 1.2.4 This Network Communication Standard specification for SafetyBUS p is not intended to be a safety guideline for using SafetyBUS p technology. This document specifies a SAN communications standard specification based on the Object Communication Specification (OCS) for the SafetyBUS p Protocol. This SAN is structured in compliance with SEMI E54.1."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 2  Scope (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 2  Scope\n\nContent: 2.1 This document specifies the protocol and services that compliant intelligent devices shall support to exchange information over the SafetyBUS p semiconductor equipment sensor/actuator network. 2.2 This document specifies the utilization of the SafetyBUS p protocol to present externally visible device structure and behavior, specified in the Common Device Model (CDM) and appropriate Specific Device Models (SDMs), on a SafetyBUS p network. 2.3 This document is used in conjunction with a SEMI standard SAN Common Device Model specification, one or more SEMI standard Specific Device Model (SDM) specifications (e.g. for a mass flow device), the SafetyBUS p Object Communications Specification Reference Guide. Together, they describe the SafetyBUS p protocol, the externally visible data structures and behaviors of devices utilizing the SafetyBUS p networking capability in a SEMI compliant SAN system. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 2  Scope (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 2  Scope\n\nContent: the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 3  Limitations",
    "content": "3.1  This document specifies a semiconductor equipment SAN based solely on SafetyBUS p and is a companion document to the Object Communication Specification for the SafetyBUS p Protocol; thus a complete specification of this standard necessarily includes the SafetyBUS p protocol specifications.  There are other semiconductor equipment SAN communications options.  The specifications for these options are not included.  \n3.2  This standard specifies enhancements that provide additional capabilities over and above those currently required by SafetyBUS p.  In order to avoid document consistency problems, information in the Object Communication Specification for the SafetyBUS p Protocol that relate to this standard is not repeated in this document.  This document is limited to describing enhancements or limitations to the SafetyBUS $\\mathfrak { p }$ specifications that are imposed by this standard specification."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 4.1  SEMI Standards (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 4.1  SEMI Standards\n\nContent: SEMI E39 — Object Services Standard: Concepts, Behavior, and Services (OSS) SMI E54 — Sensor/Actuator Network Standard SEMI E54.1 — Standard For Sensor/Actuator Network Common Device Model SEMI E54.3 — Specification For Sensor/Actuator Network Specific Device Model For Mass Flow Device SEMI E54.10 — Specification For Sensor/Actuator Network Specific Device Model For An In-Situ Particle Monitor Device SEMI E54.11 — Specification For Sensor/Actuator Network Specific Device Model For An Endpoint Device 4.2 ISO Standards ISO 7498 — Basic Reference Model for Open Systems Interconnection 4.3 SafetyBUS p Club International 2 Specification — Object Communication Specification (OCS) for the SafetyBUS p Protocol Version 1.1 April 09, 2004 may be accessed on the SafetyBUS p Club International web site http://www.safetybus.com/semi/ Reference Guide — Pilz Automation Technology – Guide to Programmable Safety Systems, February 2002 Volume 2, $1 ^ { \\mathrm { s t } }$ Edition NOTICE: Unless otherwise indicated, all"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 4.1  SEMI Standards (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 4.1  SEMI Standards\n\nContent: documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 5  Terminology",
    "content": "5.1  Terminology that is common to all of the documents in this SAN standard may also be defined in the Sensor /Actuator Network Standard (see reference SEMI E54 ¶4.1).  Terminology may be reproduced here which is defined in other SEMI documents.  \n5.2  Abbreviations and Acronyms  \n5.2.1  CAN — Controller Area Network\n5.2.2  CDM — Common Device Model\n5.2.3  DM — Device Manager (object)  \n5.2.4  ISO — International Standards Organization\n5.2.5  MAC — Media Access Control\n5.2.6  NCS — Network Communication Standard\n5.2.7  OCS — Object Communications Specification\n5.2.8  OSI — Open Systems Interconnect\n5.2.9  SAC — Sensor, Actuator, Controller (Object)\n5.2.10  SAN — Sensor/Actuator Network\n5.2.11  SDM — Specific Device Model\n5.3  Device Component Definitions"
  },
  {
    "title": "",
    "content": "5.3.1  As this standard specification defines the presentation or mapping of CDM data structure and behavior over a network, it makes use of many of the terms in the SEMI E54.1 CDM document.  Table 1 provides a mapping of fundamental terminology of the CDM document into this document and the SafetyBUS p standard specifications. Note that Column 2 contains an equal sign $\\overset { \\underset { 6 4 } {  } } { = } \\overset { \\underset { 1 } {  } } { }$ if the definition is used exactly as specified in the CDM specification.  \nTable 1  Mapping of Common Device Model to NCS Terminology"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 5.4  SafetyBUS p Specific Definitions (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 5.4  SafetyBUS p Specific Definitions\n\nContent: 5.4.1 Server Class — subset of devices that offer similar functions and provide fixed defined functionality in a uniform way. 5.4.2 master/slave — communication over a SafetyBUS p network provides exclusive control of data by a “master” or “host” device. All network input data is reported exclusively to the host when requested by the host, and the host has exclusive control over the states of all network output signals of all nodes acting as its “slaves”. Master/Slave communication provides the typical request/response oriented network communications. 5.4.3 peer-to-peer — On SafetyBUS p networks, messages formatted according to the SafetyBUS p protocol are embedded into the SafetyBUS p packet structure that is used on the CAN network. The SafetyBUS p protocol over CAN supports the asynchronous or unsolicited bi-directional transmission of data between nodes. This type of communication is referred to as peer-to-peer. 5.4.4 SafetyBUS $p$ — an open protocol maintained by Pilz GmbH & Co and"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 5.4  SafetyBUS p Specific Definitions (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 5.4  SafetyBUS p Specific Definitions\n\nContent: distributed by SafetyBUS p Club International as a reliable and standard means of interconnection for simple field devices. The SafetyBUS p standard wraps a communication model and protocol as well as CAN specifications for OSI reference model layers 1 and 2, to provide a complete network definition. The OSI reference model layer 7 specifies the application layer."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure\n\nContent: 6.1 The SafetyBUS p protocol is loosely based on three layer architecture. These three layers constitute a collapsed form of the seven layer OSI architecture which map into the physical, data link, and application layers of the OSI Basic Reference Model (see $\\ P ( 4 . 2 )$ . The high-level protocol architecture is shown in Figure 1. 6.1.1 Note that Figure 1 represents a conceptual view of the technology architecture. Conforming implementations must implement the services defined in this specification at each layer and must appear (from the network) to have implemented this architecture, however an internal modular partitioning is not required. Implementations may sacrifice modularity in order to achieve high performance. 6.1.2 The application layer is specified in the SafetyBUS p OCS (see reference $\\ P ( 4 . 3 )$ and provides for the definition of SafetyBUS p applications as a collection of addressable objects. A subset of these objects may be addressed over the network (as"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure\n\nContent: defined by the implementation). 6.1.3 In the remainder of this section the protocol structure is described in more detail in terms of the OSI seven layer reference model, the object model environment and network management specifications. 6.2 Physical Layer — The device shall comply with a physical layer specification identified in the Controller Area Network (CAN) specification. Physical layer specification includes physical signaling (levels and data rates), transceivers, node isolation, media topology, cable specifications, network connectors and taps, and power considerations (load limits, system tolerances, and power supply options). 6.3 Data Link Layer — The device shall comply with a data link layer specification the Controller Area Network (CAN) specification. Data link layer specification includes the media access control mechanism and the logical link control mechanism. 6.4 Network Layer — There is no distinct Network layer. 6.5 Transport (Messaging) Layer — There is no"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure (Part 3)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure\n\nContent: distinct Transport layer. 6.6 Session Layer — There is no distinct Session layer. 6.7 Presentation Layer — There is no distinct Presentation layer 6.8 Application Layer — The device shall comply with the SafetyBUS p application layer specification for defining and addressing objects, including their attributes and services, and enabling specified network behavior. The device shall comply with the object messaging and object model specifications included in the SafetyBUS p OCS. In addition the device shall comply with the object specifications defined in $\\ S 7$ of this document. 6.8.1 Object Models — The SafetyBUS p protocol includes an object-oriented specification for addressing objects explicitly, including their attributes and services, and communicating object attributes in an application dependent format. The device shall comply with the object messaging and object model specifications included in the SafetyBUS p OCS documentation. In addition the device shall comply with the"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure (Part 4)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 6  Communication Protocol High Level Structure\n\nContent: object specifications defined in $\\ S 7$ of this document. 6.9 Network Management — The device shall comply with the SafetyBUS p and CAN network management specifications detailed in the SafetyBUS p standard and SafetyBUS p Guide to Programmable Safety Systems Standard Specifications (e.g., physical layer bit rate, master/slave and peer-to-peer network management, etc.). No (additional) network management functions are specified in this document."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: 7.1 The SafetyBUS p standard specification does not require any specific objects to exist in a SafetyBUS p device in order to be a compliant SafetyBUS p device. The SafetyBUS p standard specification is extended in this standard to identify and describe objects (i.e. classes) that shall exist in devices that are to be interoperable and interchangeable on a SafetyBUS p SEMI compliant SAN network. 7.1.1 The Common Device Model (CDM) specification (see reference SEMI $\\mathrm { E 5 4 . 1 ~ \\ P 4 . 1 ) }$ identifies two objects (namely the Device Manager (DM) and Sensor Actuator Controller (SAC) objects) that shall exist in all SEMI compliant SAN devices. 7.1.2 The required object types for a SEMI compliant SAN device utilizing the network communication specification described herein necessarily comprises, at minimum, the union of the SafetyBUS p object type requirements and the CDM specification requirements. 7.1.3 A list of required and optional object types is given in Table 2. Additional"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: objects that are specified in a particular SDM are given identifiers in that SDM specification; SafetyBUS p specific presentation information for these identifiers is given in Section 9 of this document. Table 2 Required and Optional Object Types #1 See SafetyBUS p specification for further information; values are decimal; ‘i’, ‘j’, ‘k’, ‘l’, ‘m’, ‘n’, ‘o’, ‘p’, ‘q’, ‘r’ and ‘s’ represent arbitrary numbers (greater than or equal to 1) indicating that more than one instance may be supported. $\\mathbf { \\hat { x } } _ { } ^ { , }$ is a number greater than or equal to 129 indicating that one or more application object classes may be supported. #2 See CDM specification for further information #3 Application Dependent objects’ tags as specified in SDM 7.1.4 An embodiment of a specific device type represented as an aggregation of the object types listed in Table 2 that is compliant with both the CDM specification and the SafetyBUS p specification, is a candidate for a SEMI SDM as well as a"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 3)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: SafetyBUS p device definition. Conversely, all SEMI SDMs and SafetyBUS p device definitions specified for operation over a SEMI compliant SafetyBUS p network must be an aggregation of the object types listed in Table 2, and be compliant with both the CDM specification and the SafetyBUS p standard specifications. 7.1.5 In the following sections the presentation to the network of object addressing, object attributes and object services for each of the object types listed in Table 2 is described in detail. Refer to the CDM standard to determine if the object instance attribute and service is specified as required or optional. Unless otherwise noted, all attributes and services described are instance level attributes (as opposed to class level attributes). A class level attribute and service is accessed as instance number zero. 7.1.6 Note that the formats of object attributes and services are detailed in the CDM document; the presentation of object attributes and services to the SafetyBUS p"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 4)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: network is detailed in the tables contained in the following subsections and in the SafetyBUS p standard specifications. 7.2 Device Manager (DM) Object –– The DM object instance is the device component responsible for managing and consolidating the device operation. Each device must support one (and only one) DM object. The DM object as well as its common required and optional attributes, services and behavior are described in the CDM standard. The presentation of object instance attributes and services to the SafetyBUS p network shall be as indicated in Table 3. Note that all service ID values identified refer to the ID of the request or notification component of that service. Corresponding reply components to request/reply services shall have a service ID value equal to the request component ID plus one. Table 3 DM Object Instance Attributes and Services 7.3 Sensor, Actuator, Controller (SAC) Object –– The SAC object instance is the device component responsible for coordinating the"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 5)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: interaction of the device with the sensory/actuation/control environment. Each device must support one (and only one) SAC object instance. The SAC object instance as well as its common required and optional attributes, services and behavior are described in the CDM standard. The presentation of object instance attributes and services to the SafetyBUS p network shall be as indicated in Table 4. Table 4 Object Instance Attributes and Services 7.4 Assembly Object (Asm) –– The Assembly (Asm) object instances may be used to provide for grouping more than one attribute from one or more object instances in a device into a single data structure for communication over the SafetyBUS p Network. The presentation of object instance attributes and services shall be as indicated in Table 5. Table 5 Assembly Object Instance Attributes and Services 7.5 Local Link Object (Lnk) –– The Local Link (Lnk) object instances may be used to ‘link” an attribute of one object instance to an attribute of another object"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 6)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: instance. Refer to the CDM for further explanation and use of this object. The presentation of object instance attributes and services are as indicated in Table 6. Table 6 Local Link Object Instance Attributes and Services 7.6 Sensor-AI Object (Sai) –– The presentation of the Sensor Analog Input (Sensor-AI) object instance attributes and services are as indicated in Table 7. Table 7 Sensor-AI Object Instance Attributes and Services 7.7 Sensor-EI Object (Sei) –– The presentation of the Sensor Enumerated Input (Sensor-EI) object instance attributes and services are as indicated in Table 8. Table 8 Sensor-EI Object Instance Attributes and Services 7.8 Sensor-BI Object (Sbi) –– The presentation of the Sensor Binary Input (Sensor-BI) object instance attributes and services are as indicated in Table 9. Table 9 Sensor-BI Object Instance Attributes and Services 7.9 Sensor-BI-TH Object (Sbith) –– The presentation of the Sensor Binary Input Threshold (Sensor-BI-TH) object instance attributes and"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types (Part 7)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 7  Required And Optional Object Types\n\nContent: services are as indicated in Table 10. Table 10 Sensor-BI-TH Object Instance Attributes and Services 7.10 Actuator-AO Object (Aao) –– The presentation of the Actuator Analog Output (Actuator-AO) object instance attributes and services are as indicated in Table 11. Table 11 Actuator-AO Object Instance Attributes and Services 7.11 Actuator-EO Object (Aeo) –– The presentation of the Actuator Enumerated Output (Actuator-EO) object instance attributes and services are as indicated in Table 12. Table 12 Actuator-EO Object Instance Attributes and Services 7.12 Actuator-BO Object $( A b o )$ –– The presentation of the Actuator Binary Output (Actuator-BO) object instance attributes and services are as indicated in Table 13. Table 13 Actuator-BO Object Instance Attributes and Services 7.13 Controller Object $( C )$ –– The presentation of the Controller (C) object instance attributes and services are as indicated in Table 14. Table 14 Controller-C Instance Object Attributes and Services"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 8  Protocol Compliance",
    "content": "8.1  A method of testing protocol compliance is required to verify implementation conformance to the standard. SafetyBUS $\\boldsymbol { \\mathrm { ~ p ~ } }$ Club International e.V.  has established and maintains a mechanism for compliance certification of devices on a SafetyBus p network.  This certification includes procedures and reporting mechanisms to demonstrate conformance testing and interoperability testing of SafetyBUS p devices.  The SafetyBUS p Club International e.V. organization can be contacted at the web site http://www.safetybus.com to obtain the latest certification procedures."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9  Specific Device Model Mappings (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9  Specific Device Model Mappings\n\nContent: 9.1 This section provides for the mapping of network visible specific device structure and behavior, specified in a SEMI standard SDM specification, to the SafetyBUS p network. Each subsection is devoted to a single Specific Device Model (SDM) specification. Additional SDM mappings are added as sub-sections to this NCS specification according to SEMI guidelines and the guidelines of the SEMI SAN Interoperability standard. Unless otherwise noted, all attributes and services described are instance level attributes (as opposed to class level attributes). 9.1.1 Note that the formats of object instance attributes and services are detailed in the associated SDM specification; the presentation of object attributes and services to the SafetyBUS p network is detailed in the tables contained in the following sub-sections and in the SafetyBUS p standard specifications. Note that relationships between object classes, including inheritance are defined in the associated SDM specification and the CDM"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9  Specific Device Model Mappings (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9  Specific Device Model Mappings\n\nContent: specification. 9.1.2 The instance identifier of 1 through s, assigned to an object type, refers to the possibility of multiple instantiations of the object type. Refer to Table 2 of this document and the CDM document for a further explanation of object instance identifier assignments."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device\n\nContent: 9.2.1 These sections detail the network mapping required to support the Specific Device Model for Mass Flow Device (see SEMI $\\begin{array} { r } { \\mathrm { E } 5 4 . 3 \\ P \\{ 4 . 1 \\} } \\end{array}$ ). Table 15 summarizes the Mass Flow Device Object types. Subsequent Tables 16 to 25 details the instance attributes and services associated with each Mass Flow Device object type. Table 15 Mass Flow Device Object Types 9.2.2 Sensor-AI-MF — The presentation of the Sensor Analog Input Mass Flow (Sensor-AI-MF) object instance attributes and services are as indicated in Table 16. Table 16 Sensor-AI-MF Object Instance Attributes and Services 9.2.3 Sensor-AI-AT — The presentation of the Sensor Analog Input Ambient Temperature (Sensor-AI-AT) object instance attributes and services are as indicated in Table 17. Table 17 Sensor-AI-AT Object Instance Attributes and Services 9.2.4 Assembly-MFM –– The presentation of the Assembly Mass Flow Meter (Assembly-MFM) object instance attributes and"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device\n\nContent: services are as indicated in Table 18. Table 18 Assembly-MFM Object Instance Attributes and Services 9.2.5 Sensor-AI-Aux –– The presentation of the Sensor Analog Input Auxiliary (Sensor-AI-Aux) object instance attributes and services are as indicated in Table 19. Table 19 Sensor-AI-Aux Object Instance Attributes and Services 9.2.6 Actuator-AO-MF –– The presentation of the Actuator Analog Output Mass Flow (Actuator-AO-MF) object instance attributes and services are as indicated in Table 20. 9.2.7 Controller –– The presentation of the extended Controller (C) object instance attributes and services are as indicated in Table 21. Table 21 Controller Object Instance Attributes and Services 9.2.8 Local Link –– The presentation of the extended Local Link (Lnk) object instance attributes and services are as indicated in Table 22. Table 22 Local Link Object Instance Attributes and Services 9.2.9 SISO –– The presentation of the Single Input Single Output (SISO) object instance attributes and"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device (Part 3)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device\n\nContent: services are as indicated in Table 23. Table 23 SISO Object Instance Attributes and Services 9.2.10 SISO-Setpoint –– The presentation of the Single Input Single Output Setpoint (SISO-Setpoint) object instance attributes and services are as indicated in Table 24. Table 24 SISO-Setpoint Object Instance Attributes and Services 9.2.11 Assembly-MFC –– The presentation of the Assembly Mass Flow Controller (Assembly-MFC) object instance attributes and services are as indicated in Table 25. Table 25 Assembly-MFC Object Instance Attributes and Services 9.3 Specific Device Model For In-Situ Particle Monitor Device –– These sections detail the network mapping required to support the Specific Device Model for In-Situ Particle Monitor (ISPM) Devices (see SEMI $\\mathrm { E } 5 4 . 1 0 \\ P [ 4 . 1 )$ . Table 26 summarizes the In-Situ Particle Monitor Device Object types. Subsequent Tables 27 to 42 details the attributes and services associated with each In-Situ Particle Monitor Device object"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device (Part 4)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # 9.2  Specific Device Model for Mass Flow Device\n\nContent: type. Table 26 In-Situ Particle Monitor Device Object Types 9.3.1 Device Manager –– The presentation of the extended ISPM Device Manager (DM) object instance attributes and services are as indicated in Table 27. Table 27 DM Object Instance Attributes and Services 9.3.2 Sensor Actuator Controller $( S A C )$ –– The presentation of the extended ISPM Sensor Actuator Controller (SAC) object attributes and services are as indicated in Table 28."
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 1)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: 9.3.3 Sensor-AI-LCS –– The presentation of the Sensor Analog Input Laser Current Sensor (Sensor-AI-LCS) object instance attributes and services are as indicated in Table 29. Table 29 Sensor-AI-LCS Object Instance Attributes and Services 9.3.4 Sensor-AI-SLS –– The presentation of the Sensor Analog Input Stray Light Sensor (Sensor-AI-SLS) object instance attributes and services are as indicated in Table 30. Table 30 Sensor-AI-SLS Object Instance Attributes and Services 9.3.5 Sensor-AI-MNS –– The presentation of the Sensor Analog Input Medium Noise Sensor (Sensor-AI-MNS) object instance attributes and services are as indicated in Table 31. Table 31 Sensor-AI-MNS Object Instance Attributes and Services 9.3.6 Sensor-AI-Counter –– The presentation of the Sensor Analog Input Counter (Sensor-AI-Counter) object instance attributes and services are as indicated in Table 32. Table 32 Sensor-AI-Counter Object Instance Attributes and Services 9.3.7 Assembly-ISPM#1 –– The presentation of"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 2)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: the Assembly #1 In-Situ Particle Monitor (Assembly-ISPM#1) object instance attributes and services are as indicated in Table 33. Table 33 Assembly-ISPM#1 Object Instance Attributes and Services 9.3.8 Assembly-ISPM#2 –– The presentation of the Assembly #2 In-Situ Particle Monitor (Assembly-ISPM#2) object instance attributes and services are as indicated in Table 34. Table 34 Assembly-ISPM#2 Object Instance Attributes and Services 9.3.9 Assembly-ISPM#3 –– The presentation of the Assembly #3 In-Situ Particle Monitor (Assembly-ISPM#3) object instance attributes and services are as indicated in Table 35. Table 35 Assembly-ISPM#3 Object Instance Attributes and Services 9.3.10 Assembly-ISPM#4 –– The presentation of the Assembly #4 In-Situ Particle Monitor (Assembly-ISPM#4) object instance attributes and services are as indicated in Table 36. Table 36 Assembly-ISPM#4 Object Instance Attributes and Services 9.3.11 Assembly-ISPM#5 –– The presentation of the Assembly #5 In-Situ Particle"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 3)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: Monitor (Assembly-ISPM#5) object instance attributes and services are as indicated in Table 37. Table 37 Assembly-ISPM#5 Object Instance Attributes and Services 9.3.12 Assembly-ISPM#6 –– The presentation of the Assembly #6 In-Situ Particle Monitor (Assembly-ISPM#6) object instance attributes and services are as indicated in Table 38. Table 38 Assembly-ISPM#6 Object Instance Attributes and Services 9.3.13 Assembly-ISPM#7 –– The presentation of the Assembly #7 In-Situ Particle Monitor (Assembly-ISPM#7) object instance attributes and services are as indicated in Table 39. Table 39 Assembly-ISPM#7 Object Instance Attributes and Services 9.3.14 Assembly-ISPM#8 –– The presentation of the Assembly $\\# 8 \\ \\mathrm { I n }$ -Situ Particle Monitor (Assembly-ISPM#8) object instance attributes and services are as indicated in Table 40. Table 40 Assembly-ISPM#8 Object Instance Attributes and Services 9.3.15 Assembly-ISPM#9 –– The presentation of the Assembly #9 In-Situ Particle Monitor"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 4)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: (Assembly-ISPM#9) object instance attributes and services are as indicated in Table 41. Table 41 Assembly-ISPM#9 Object Instance Attributes and Services 9.3.16 Assembly-ISPM#48 –– The presentation of the Assembly $\\# 4 8 \\ \\mathrm { I n }$ -Situ Particle Monitor (Assembly-ISPM#48) object instance attributes and services are as indicated in Table 42. Table 42 Assembly-ISPM#48 Object Instance Attributes and Services 9.4 Specific Device Model For Endpoint Device –– These sections detail the network mapping required to support the Specific Device Model for Endpoint (EPD) Devices (see reference SEMI E54.11 $\\ P [ 4 . 1 ]$ ). Table 43 summarizes the Endpoint Device Object types. Subsequent Tables 44 to 50 details the attributes and services associated with each Endpoint Device object type. Table 43 Endpoint Device Object Types 9.4.1 Device Manager –– The presentation of the extended EPD Device Manager (DM) object instance attributes and services are as indicated in Table 44. Table"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 5)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: 44 DM Object Instance Attributes and Services 9.4.2 Sensor Actuator Controller (SAC) –– The presentation of the extended EPD Sensor Actuator Controller (SAC) object attributes and services are as indicated in Table 45. Table 45 SAC Object Instance Attributes and Services 9.4.3 Sensor-BI-TH-EP –– The presentation of the Sensor Binary Input Threshold Endpoint (Sensor-BI-TH-EP) object instance attributes and services are as indicated in Table 46. Table 46 Sensor-BI-TH-EP Object Instance Attributes and Services 9.4.4 Assembly-EPD#1 –– The presentation of the Assembly #1 Endpoint Device (Assembly-EPD#1) object instance attributes and services are as indicated in Table 47. Table 47 Assembly-EPD#1 Object Instance Attributes and Services 9.4.5 Assembly-EPD#2 –– The presentation of the Assembly #2 Endpoint Device (Assembly-EPD#2) object instance attributes and services are as indicated in Table 48. Table 48 Assembly-EPD#2 Object Instance Attributes and Services 9.4.6 Assembly-EPD#3 ––"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 6)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: The presentation of the Assembly #3 Endpoint Device (Assembly-EPD#3) object instance attributes and services are as indicated in Table 49. Table 49 Assembly-EPD#3 Object Instance Attributes and Services 9.4.7 Assembly-EPD#4 –– The presentation of the Assembly #4 Endpoint Device (Assembly-EPD#4) object instance attributes and services are as indicated in Table 50. Table 50 Assembly-EPD#4 Object Instance Attributes and Services NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer's instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International"
  },
  {
    "title": "SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services (Part 7)",
    "content": "Title: SEMI E54.15-0305 SENSOR/ACTUATOR NETWORK COMMUNICATION SPECIFICATION FOR SafetyBUS p - # Table 28  SAC Object Instance Attributes and Services\n\nContent: (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS",
    "content": "This standard was technically approved by the global Information & Control Committee.  This edition was approved for publication by the global Audits and Reviews Subcommittee on April 7, 2005.  It was available at www.semi.org in June 2005 and on CD-ROM in July 2005.  \nNOTICE:  This document replaced SEMI E54.6 in 2005."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 1  Purpose (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 1  Purpose\n\nContent: 1.1 This standard specification defines a communication specification based on the ANSI/EIA/CEA-709.1 Control Networking Protocol (LONWORKS) to enable communications between intelligent devices on a sensor/actuator network (SAN) that operate in accordance with SEMI-specified device models (common and device specific) on semiconductor manufacturing equipment. 1.2 This document specifies a mapping of the SEMI Common Device Model (CDM) onto LONWORKS technology using the LONMARK Interoperability Guidelines established for LONWORKS devices. The LONMARK International Association will review and approve the enhanced SEMI LONMARK functional profiles presented in this network communication document and incorporate the required SEMI profiles into the LONMARK Interoperability Guidelines. 1.3 Background and Motivation — The LONWORKS communications system provides interconnection of smart control devices such as sensors, actuators, and controllers in a fast-response time, low-cost network for industrial use. LONWORKS enables"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 1  Purpose (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 1  Purpose\n\nContent: multiple devices to share a single network, thereby significantly reducing the point-to-point wiring between controllers, sensors, and actuators. The LONWORKS network communications standard (NCS) is based on the seven-layer ANSI/EIA/CEA-709.1 (LONWORKS) protocol, implemented by the Neuron Chip, a physical layer transceiver, and an optional host processor. The ANSI/EIA/CEA-709.1 (LONWORKS) control networking protocol was developed by Echelon and may be freely licensed for implementation on any hardware platform. The SEMI NCS for LONWORKS is based on the LONMARK interoperability guidelines, which provide a framework for interoperable use of the ANSI/EIA/CEA-709.1 (LONWORKS) protocol at layers 1-6, as well as at the application layer. Where the LONMARK interoperability guidelines do not provide the functionality required by the SEMI Common Device Model (CDM) and the SEMI Specific Device models (SDM), the guidelines are extended with SEMI-specific enhanced profile requirements."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 2  Scope (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 2  Scope\n\nContent: 2.1 This document specifies a SAN communications specification standard, based on the ANSI/EIA/CEA-709.1 Control Networking Protocol (LONWORKS) specification, that enables communication with SAN devices configured according to the SEMI SAN Common Device Model and appropriate SEMI SAN Specific Device Model (SDM) specifications. 2.2 This document specifies the use of LONWORKS technology for services that compliant intelligent devices must support in order to exchange information over this semiconductor equipment sensor/actuator network. 2.3 This document specifies the utilization of LONWORKS technology to present externally visible device structure and behavior, specified in the CDM and appropriate SDMs, on a LONWORKS network. 2.4 This document is used in conjunction with the SEMI SAN Common Device Model specification and one or more SEMI SAN Specific Device Model specifications (e.g., for a mass flow controller). Together, the model documents describe the externally visible data structures and behavior of devices using"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 2  Scope (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 2  Scope\n\nContent: LONWORKS technology in a SEMI-compliant SAN system. 2.5 This specification, together with the sensor/actuator network common device model, one or more sensor/ actuator network specific device model documents, the ANSI/EIA/CEA-709.1 (LONWORKS) protocol specification, and the LONMARK interoperability guidelines, specifies requirements for SEMI SAN implementations based on LONWORKS technology. NOTICE: This standard specification does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard specification to establish appropriate safety and health practices and determine the applicability of regulatory limitations prior to use."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 3  Limitations (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 3  Limitations\n\nContent: 3.1 This document specifies a semiconductor equipment SAN based solely on LONWORKS technology and is a companion document to the ANSI/EIA/CEA-709.1 (LONWORKS) control networking protocol specification; thus, a complete specification of this standard necessarily includes the LONWORKS specifications. There are other semiconductor equipment SAN communications options. The specifications for these options are not included here. 3.2 This document specifies enhancements that provide additional capabilities over and above those currently required by the LONMARK Interoperability Guidelines. In order to avoid document consistency problems, information in the LONWORKS technology specifications that relate to this standard is not repeated in this document. This document is limited to describing enhancements or limitations of LONWORKS technology and the LONMARK interoperability guidelines that are imposed by this specification. 3.3 A complete specification of the conformance testing procedure shall include the applicable"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 3  Limitations (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 3  Limitations\n\nContent: LONMARK interoperability conformance testing specification. Conformance testing shall include enhancements to the LONMARK interoperability guidelines required by this standard specification."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 4  Referenced Standards and Documents (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 4  Referenced Standards and Documents\n\nContent: 4.1 It must be noted that unless otherwise indicated, all documents cited below shall be the latest published versions. 4.2 SEMI Standards SEMI E30 — Generic Model for Communications and Control of SEMI Equipment (GEM) SEMI E39 — Object Services Standard: Concepts, Behavior, and Services SEMI E54 – Sensor/Actuator Network Standard SEMI E54.1 — Standard for Sensor/Actuator Network Common Device Model SEMI E54.3 – Specification for Sensor/Actuator Network Specific Device Model for Mass Flow Device SEMI E54.10 – Specification for Sensor/Actuator Network Specific Device Model for An In-Situ Particle Monitor Device SEMI E54.11 – Specification for Sensor/Actuator Specific Device Model for An Endpoint Device 4.3 ISO Standard1 ISO 7498 — Basic Reference Model for Open Systems Interconnection ISO/CEN EN14908 Specification for Control Networking Protocol ANSI/EIA/CEA-709.1 (LONWORKS) Control Networking Protocol Specification, Rev B-2000 4.4 Other Documents LONMARK Layers 1–6 Interoperability"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 4  Referenced Standards and Documents (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 4  Referenced Standards and Documents\n\nContent: Guidelines, LONMARK International. LONMARK Application Layer Interoperability Guidelines, LONMARK International. Neuron Chip Data Book, Toshiba and Cypress Corporation. Smart Transceiver Data Book, Echelon Corporation. Neuron C Programmer’s Guide, Revision 2, Echelon Corporation Neuron C Reference Guide, Revision 2, Echelon Corporation Standard Device Resource Report, http://types.lonmark.org, LONMARK International. Standard Program ID Definitions, http://types.lonmark.org/spid, LONMARK International. SCPT Master List and Programmer’s Guide, http:// types.lonmark.org/scpt, LONMARK International. SNVT Master List and Programmer’s Guide, http:// types.lonmark.org/snvt, LONMARK International."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: 5.1 Terminology that is common to all of the documents in this SAN series may also be defined in the Sensor Actuator Network Standard (see reference SEMI E54 §4.1). Terminology may be reproduced here which is defined in other SEMI documents. 5.2 Abbreviations and Acronyms 5.2.1 APDU – Application Protocol Device Unit 5.2.2 CDM — Common Device Model 5.2.3 CP — Configuration Parameter 5.2.4 DM — Device Manager 5.2.5 DS — Device Status 5.2.6 NCS — Network Communications Standard 5.2.7 Neuron — Neuron Chip is the 8 bit hardware implementation of the ANSI/EIA/CEA-709.1 (LONWORKS) Control Networking Protocol 5.2.8 NV — Network Variable 5.2.9 NVI — Network Variable Input 5.2.10 NVO — Network Variable Output 5.2.11 OSI — Open Systems Interconnect 5.2.12 OSS — Object Services Standard 5.2.13 RO — Read Only 5.2.14 RW — Read/Write 5.2.15 SAC — Sensor, Actuator, Controller (object) 5.2.16 SAN — Sensor/Actuator Network 5.2.17 SCPT — Standard Configuration Parameter Type 5.2.18 SDM — Specific Device Model 5.2.19 SNVT —"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: Standard Network Variable Type 5.2.20 SPID — Standard Program ID 5.3 Device Component Definitions — As this standard defines the presentation or mapping of CDM data structure and behavior over a network, it makes use of many of the terms in the SEMI E54.1 - CDM document. Table 1 provides a mapping of fundamental terminology of the CDM document into this document and the LONWORKS definitions. The symbol $\\stackrel { \\left. } { = } \\stackrel { \\right. }$ indicates that the definition is used exactly as specified on the CDM specification. $5 . 4 \\ \\mathrm { ~ I n }$ the following sections, additional clarification of some of these terms is provided in the context of the ANSI/EIA/CEA-709.1 (LONWORKS) protocol. Table 1 Mapping of CDM to NCS Terminology 5.4.1 attribute — Attributes are either input network variables (NVI), output network variables (NVO), or configuration properties (CP). Input and output network variables and configuration properties may be read and/or written by the device itself, and all attributes"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 3)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: may be polled over the network. Additionally, input network variables and configuration properties may be updated over the network, and the receipt of such an update may cause an event to be propagated to the device's application layer. This corresponds to a RW (Read and Write) attribute of the object owning the network variable. Output network variables may not be updated over the network. This corresponds to a RO (Read Only) attribute of the object owning the network variable. When the device itself updates one of its output network variables, the value of that variable may be propagated over the network to destination addresses determined at installation time. Finally, configuration properties are attributes typically stored in non-volatile memory and preserved across device resets and power cycles. 5.4.2 behavior — Generic object behavior is specified by the LONMARK Application Layer Interoperability Guidelines. Additional object-specific behavior is specified by means of functional profiles. 5.4.3 device —"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 4)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: A device (or node) typically consists of one network transceiver which implements the physical layer of the ANSI/EIA/CEA-709.1 (LONWORKS) protocol, one Neuron Chip with associated firmware which implements the other layers of the LONTALK protocol, and input/output hardware implementing the physical interface of the device to external sensor and/or actuator hardware. A LONWORKS device may optionally contain a host processor and associated software or firmware which implements the application layer of the ANSI/EIA/CEA709.1 (LONWORKS) protocol. 5.4.4 device model — The device model comprises several elements which fully describe the external interface of the device for an interoperable network. The interface is made of the following pieces: a Device Manager (DM) object; a Sensor/Actuator/Controller (SAC) object; functional blocks such as sensors, actuators, and controllers; individual network variables; and configuration properties. 5.4.5 instance — Real devices may have zero or more instances of each of the"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 5)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: defined functional blocks. Object instances are identified by means of an instance number within the device. 5.4.6 object — Functional blocks defined as a set of one or more network variable inputs and/or outputs, implemented as Standard Network Variable Types, and a set of configuration properties, implemented as Standard Configuration Property Types. Functional blocks form the basis of interoperability at the application layer. The functional blocks describe standard formats for how information is input to, and output from, a device, and shared with other devices on the network. 5.4.7 service — Request services are represented by ANSI/EIA/CEA-709.1input network variables (NVI) being set and delivered to the device application. Notification services are represented by ANSI/EIA/CEA-709.1output network variables being set by the device application and delivered over the network. 5.4.8 state diagram — In a LONWORKS device, state is represented by the collection of values of local and network variables of the"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 6)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: application program. Transitions between states are the result of external events (such as the receipt of a network variable update, or other I/O event), or internal events (such as the expiration of a timer). 5.5 LONWORKS-Specific Definitions — In addition to the standard data type definitions for bit, nibble, byte, and character, the ANSI/EIA/CEA-709.1 (LONWORKS) protocol defines a set of standard data representations for use as attribute values. 5.5.1 binding — Network variables on the same or different devices may be associated together by means of a network management service known as binding. Binding is permitted only if all the network variables in the set are of the same data type. The values of network variables that are bound together are propagated over the network by the ANSI/EIA/CEA-709.1 (LONWORKS) protocol. Table 2 shows the permitted combinations for updating and polling of network variables. Table 2 Updating and Polling of Network Variables #1 When the device updates one of its own output"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 7)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: network variables, input network variables that are bound to this output network variable receive an update from the network. #2 When the device polls one of its own input or configuration network variables, output network variables that are bound to this input or configuration network variable receive a poll from the network. 5.5.2 configuration properties — These are attributes of a functional block that are used to configure the application-specific behavior of the functional block, such as sensor gain and offset, linearization table, and sample rate. These attributes are typically updated when the device is installed, configured, or calibrated, and are stored in non-volatile memory. 5.5.3 device interface — A device interface is a specification of one or more functional blocks, together with semantic definitions relating the behavior of the functional block(s) to the network variable values. The collection of functional blocks in a device corresponds to the SEMI SAN device-specific model for that device."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 8)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: Each type of device interface is identified by a standard program ID (SPID). 5.5.4 network variable — This is a network-visible data attribute of a device, with a well-defined data type. Network variables are either input variables, output variables, or configuration network variables. The value of a network variable may be updated either by the device itself, or over the network by some other device. This corresponds to the SEMI specific service SetAttribute operation. The value of a network variable may be polled over the network by some other device, or retrieved by the device itself. This corresponds to the SEMI specific service GetAttribute operation. 5.5.5 functional block — A device’s external interface documentation specifies the type identifiers of the functional blocks contained within the device. This documentation may be uploaded from the device, and completely specifies the functional profiles implemented by the device, as well as the network variables and configuration properties contained within"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 9)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: each of the functional blocks. 5.5.6 functional profile — A functional profile is the definition of the attributes and behaviors of an abstract entity. Each type of functional block is identified by a functional profile number. A specific device type consists of instantiations of one or more of these functional profiles. A functional block is implemented as a collection of network variables and configuration properties. 5.5.7 standard configuration property types — These data types, also known as SCPTs, provide a data type definition and a semantic behavior for the configuration properties of functional blocks. A list of all available SCPTs and details of their definitions is provided in the SCPT Master List and Programmer’s Guide. 5.5.8 standard network variable types — These data types, also known as SNVTs, facilitate interoperability by providing a well-defined interface for communication between devices made by different manufacturers. A device may be installed in a network, and logically connected to other"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology (Part 10)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 5  Terminology\n\nContent: devices via network variables, as long as the data types match. A list of all available SNVTs and details of their definitions is provided in the SNVT Master List and Programmer’s Guide."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: 6.1 The ANSI/EIA/CEA-709.1 (LONWORKS) protocol is based on a seven-layer architecture. At each layer, there is a description of the services provided within that layer. The high level protocol architecture is shown in Figure 1. 6.1.1 Figure 1 represents a conceptual view of the device architecture. Implementations typically use the Neuron Chip and its associated firmware, which provide a conforming implementation of layers 2 through 6. The LonMark Interoperability Guidelines specify the protocol options to be used, most specifically at the physical layer (network transceivers) and at the application layer (object model). 6.2 Physical Layer — The device shall employ one of the LONMARK-approved physical channels as specified in the LONMARK Layers 1–6 Interoperability Guidelines. LONWORKS-based SEMI SAN-compliant devices shall use, by default, a two-pin screw-terminal open pluggable connector (Weidmüller-Klippon SL2, Phoenix Combicon, or equivalent) for the network connection. The"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: default connector specification may be overridden for specific device types if special requirements apply; any such overrides shall be noted in $\\ S 9$ , Specific Device Type Information, of this document. This connection is polarity-insensitive. The requirements of semiconductor equipment may be met by one of the twisted pair channel specifications listed below. 6.2.1 TP/XF-1250 Twisted Pair — This twisted-pair channel operates at a bit rate of 1,250kbps and supports a bu topology using transformer-coupled transceivers. 6.2.2 TP/FT-10 Twisted Pair — This twisted-pair channel operates at a bit rate of 78kbps and supports both free topology and bus topology wiring, as well as optional link power. 6.2.3 The LONMARK Layers 1-6 Interoperability Guidelines provide specific details of the characteristics of these transceivers. This document also provides specifications of wiring types and interconnection topologies to be used for guaranteed device interoperability. Note that the"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 3)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: ANSI/EIA/CEA-709.1 (LONWORKS) protocol supports heterogeneous networks. Devices with dissimilar transceivers may be interconnected and communicate via routers or repeaters. Similarly, routers and repeaters may be used to extend a physical channel beyond the device count, wire length, or other physical limitations imposed by the chosen transceiver. 6.2.4 Multiple physical layer protocols and data encoding methods are used in the ANSI/EIA/CEA-709. (LONWORKS) protocol. Differential Manchester encoding is used on twisted pair physical layers. 6.3 Link Layer — The device shall comply with the ANSI/EIA/CEA-709.1 (LONWORKS) protocol link layer specification. This layer includes the media access control sublayer. For a number of reasons, including simplicity and compatibility with the multicast protocol, the ANSI/EIA/CEA-709.1 (LONWORKS) protocol supports a simple connectionless service. Its functions are limited to framing, frame encoding, and error detection. 6.3.1 Media Access Control"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 4)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: Sub-layer — In order to deal with a variety of media in the potential absence of collision detection, the MAC (Media Access Control) sub-layer employs a collision avoidance algorithm called Predictive $p$ -persistent CSMA (Carrier Sense, Multiple Access). 6.4 Network Layer — The device shall comply with the ANSI/EIA/CEA-709.1 (LONWORKS) protocol network layer specification. This layer handles packet delivery within a single domain, with no provisions for inter-domain communication. The network service is connection-less, unacknowledged, and supports neither segmentation nor reassembly of messages. The routing algorithms employed by the network layer to learn the topology assume a treelike network topology; routers with configured tables may operate on topologies with physical loops, as long as the communication paths are logically tree-like. In this configuration, a packet may never appear more than once at the router on the side on which the packet originated. The unicast routing"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 5)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: algorithm uses learning for minimal overhead and no additional routing traffic. Use of configured routing tables is supported for both unicast and multicast addresses. 6.5 Transport Layer — The device shall comply with the ANSI/EIA/CEA-709.1 (LONWORKS) protocol transport layer specification. The heart of the protocol hierarchy is the Transport and Session layers. A common Transaction Control sub-layer handles transaction ordering and duplicate detection for both layers. The transport layer is connectionless and provides reliable message delivery to both single and multiple destinations. Authentication of the message sender’s identity is provided as an optional feature. The authentication server requires only the Transaction Control sub-layer to accomplish its function. The transport and session layer messages may be authenticated using all of the ANSI/EIA/CEA-709.1addressing modes other than broadcast. The transport layer supports end-to-end acknowledged service and an"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 6)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: unacknowledged/ repeated service. 6.6 Session Layer — The device shall comply with the ANSI/EIA/CEA-709.1 (LONWORKS) protocol session layer specification. This layer implements a simple Request-Response mechanism for access to remote servers. This mechanism provides a platform upon which application-specific remote procedure calls can be built. The ANSI/EIA/CEA-709.1 (LONWORKS) network management protocol, for example, is dependent on the RequestResponse mechanism in the Session layer, even though it accesses the protocol via the application layer interface. 6.7 Presentation Layer — The device shall comply with the ANSI/EIA/CEA-709.1 (LONWORKS) protocol presentation layer specification. The Presentation layer and the Application layer taken together form the foundation of interoperability for LONWORKS devices. The application layer provides all the usual services for sending and receiving messages, but it also contains the concept of network variables. The presentation layer"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 7)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: provides information in the Application Protocol Data Unit (APDU) header for how the APDU is to be interpreted for network variable updates. This application-independent interpretation of the data allows data to be shared among devices without prior arrangement. With agreement on which network variables are to be used for sensors, actuators, etc., intelligent components from different manufacturers may work together without prior knowledge of each other's characteristics. 6.8 Application Layer — At the application layer, interoperability between LONWORKS-based devices is facilitated through the use of functional blocks and Standard Network Variable Types (SNVTs). Functional blocks build upon network variables and provide a concise application layer interface that incorporates semantic meaning for specific device functions. Functional blocks not only define which SNVTs to use to convey data, but also provide semantic meaning about the information being communicated. To aid in the"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 8)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: specification of specific device models with welldefined functional behavior, functional block interfaces and semantics are defined by functional profiles. The Application Layer also includes the LONWORKS file transfer protocol, which provides segmentation and reassembly of arbitrary length files of data. This service may be used to get and set object attributes that exceed the network variable size limit of 31 bytes. 6.8.1 Object Models — The ANSI/EIA/CEA-709.1 (LONWORKS) protocol provides an object-oriented specification for defining and addressing network variables and configuration properties, which are the representation of object attributes and events. The device shall comply with the object model specifications defined in $\\ S 7$ of this document. 6.8.2 Functional Block Structure — The LONMARK Application Layer Interoperability Guidelines define a structure for functional profiles. Each functional profile may have a set of mandatory network variables, a set of optional"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure (Part 9)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 6  Communication Protocol High Level Structure\n\nContent: network variables, a set of configuration properties (both mandatory and optional), and a manufacturer-defined section, which may be used for non-interoperable extensions to the profile. This is illustrated in Figure 2. This notation is defined in the LONMARK Application Layer Interoperability Guidelines. NOTE: Diagram notation, the arrow-like symbol used in Figure 2 is defined in the LonMark Application Layer Interoperability Guidelines."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Figure 2 LonMark Object Structure (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Figure 2 LonMark Object Structure\n\nContent: 6.8.3 The LONMARK Application Layer Interoperability Guidelines provide for the definition of Standard Network Variable Types, Standard Configuration Property Types, and Functional Profiles. In the mapping of the SEMI CDM to the LONMARK object structure in $\\ S 7$ , extensions to the current SNVT list and LONMARK Interoperability Guidelines are marked with an asterisk $( ^ { * } )$ . Functional profile numbers are specified by the guidelines; a device may consist of one instance of a Node Object type, and one or more instances of other functional profiles. 6.9 Network Management — The ANSI/EIA/CEA-709.1 (LONWORKS) protocol defines a complete network management and diagnostic protocol for LONWORKS devices. This protocol is a layer above the Session layer (request/response service) and provides mechanisms for application downloading, device address assignment, distribution of destination addresses for implicit messaging, router configuration, and device-level diagnostics. The LONMARK Application"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Figure 2 LonMark Object Structure (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Figure 2 LonMark Object Structure\n\nContent: Layer Interoperability Guidelines define a device management layer for functional blocks."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: 7.1 The LONMARK guidelines do not require any specific objects to exist in a device in order to be a compliant LONMARK device, except that a Node object functional block is required for devices that contain multiple functional blocks (SEMI compliant devices will typically have a Node object functional block). New LONMARK standard profiles are defined in this standard to identify and describe functional blocks that shall exist in devices that are to be interoperable and interchangeable on a LONMARK SEMI compliant SAN network. 7.1.1 LONMARK International Association publishes functional profiles for various sensor, actuator, and controller objects. A specific device may be implemented using functional blocks based on these profiles. The Common Device Model specification additionally identifies two functional blocks (namely the Device Manager (DM) and Sensor Actuator Controller (SAC) objects) that must exist in all SEMI compliant SAN devices. The required functional profiles for a SEMI"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: compliant SAN device utilizing the network communication specification described herein necessarily comprise, at minimum, the union of the LONMARK functional profile requirements and the CDM specification requirements. 7.1.2 A list of required and optional object types is given in Table 3. Additional objects that are specified in a particular SDM are given identifiers in that SDM specification. The LONMARK specific presentation information for these identifiers is given in $\\ S 9$ of this document. Table 3 Common Device Model Required and Optional Object Types #1 LonMark groups SEMI Class IDs as reference 180 and designates specific object name categories as .XX. See LONMARK Application Layer Interoperability Guideline and http://types.lonmark.org. #2 See E54.1 – CDM specification for further information #3 A turnaround connection is not a profile, but is a protocol-specific method for creating a link #4 The LonMark Application Layer maps the SEMI Device Manger (DM) and"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 3)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: Sensor/Actuator/Controller (SAC) objects to the LonMark Node object. 7.1.3 Service Requests Code — Most service requests are implemented as network variable updates addressed to the network variable corresponding to the specified attribute. The exceptions to this mapping are requests that require more than a 31 byte response. In that case, the request is implemented as a network variable update containing a file request to an nviSemiReq input to the Node Object functional block of a device. This input is defined by the SNVT_semi_req type as follows: typedef enum { struct { CMD_RESET $\\begin{array} { r l r } { \\mathbf { \\Psi } } & { = } & { 1 , } \\\\ & { = } & { 2 , } \\\\ & { = } & { 3 , } \\\\ & { = } & { 4 , } \\\\ & { = } & { 5 , } \\\\ & { = } & { 6 , } \\\\ & { = } & { 7 , } \\\\ & { = } & { 8 , } \\\\ & { = } & { 9 , } \\end{array}$ CMD_ABORT CMD_RECOVER CMD_GET_ATTRIBUTE CMD_SET_ATTRIBUTE CMD_OERATE CMD_RESTOTE_DEFAULT CMD_PUBLISH_ATTRIBUTE CMD_LOCK CMD_UNLOCK $\\begin{array}{c} \\begin{array} { l }"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 4)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\end{array} \\bf { 1 } 2 , \\qquad \\begin{array} { r } { \\frac { 1 } { 2 } { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\end{array} \\bf { 1 } 2 , \\qquad \\begin{array} { r } { \\frac { 1 } { 2 } { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\end{array} \\bf { 1 } 2 , \\qquad \\begin{array} { r } { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\end{array} \\bf { 2 } , \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\\\ { { \\bf \\Pi } } \\end{array}$ CMD_GET_EXCEPTION_QUEUE CMD_CLEAR_EXCEPTION_QUEUE CMD_EXECUTE CMD_PERFORM_DIAGNOSTICS } semi_request_t; typedef struct { unsigned int flblock_index; semi_request_t service_code; unsigned int parameter; // Optional parameter } SNVT_semi_req; 7.1.4 A device accepts a SNVT_semi_req request by updating the nvoSemiStat and nvoFileStat outputs of the Node Object function block. The"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 5)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: nvoSemiStat output is defined by the SNVT_semi_status type as follows: typedef enum { struct { STAT_SUCCESS $\\mathbf { \\Omega } = \\mathbf { \\Omega } 0 ,$ STAT_UNSUPPORTED_SERVICE $\\mathbf { \\Psi } = \\mathbf { \\Psi } _ { 1 } ,$ STAT_UNSUPPORTED_ATTRIBUTE $\\mathbf { \\varepsilon } = \\mathbf { \\varepsilon } _ { 2 } ,$ STAT_SET_ATTRIBUTE_ERROR $\\mathbf { \\lambda } = \\ 3 ,$ STAT_GET_ATTRIBUTE_ERROR = 4, STST_CALIBRATION_ERROR $\\mathit { \\Theta } = \\ 5 ,$ STAT_SERVICE_REQUEST_ERROR = 6, STAT_DIAGNOSTIC_ERROR $= 7 .$ , } semi_status_t; typedef struct { semi_status_t status; unsigned long selected_file; struct address { // Address of the requesting device unsigned short domain_id[6]; unsigned short domain_length; unsigned short subnet; unsigned short node; } } SNVT_semi_status; 7.1.5 If the nvoSemiStat and nvoFileStat outputs indicate the request was accepted, the requesting device then fetches the requested data by transferring the file with the file index reported by the nvoSemiStat response."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 6)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: 7.1.6 Object Attributes — The SEMI GetAttribute and SEMI SetAttribute service requests are implemented as network variable fetch, poll, and update requests addressed to the network variable corresponding to the specified attribute. This is appropriate when responses greater than 31 bytes are not required. A GetAttribute service request may be addressed directly to any network variable as a LonTalk request message, using the LonTalk protocol network management NV fetch mechanism. A GetAttribute service request may also be addressed to an output network variable as a LonTalk NV poll message, using the NV selection mechanism. A SetAttribute service request may be addressed to an input network variable as a LonTalk NV update message, using the NV selection mechanism. The confirmation of a SetAttribute (network variable update) is provided by the acknowledged service of the LonTalk protocol transport layer. 7.1.7 Sequence Numbers — Each network variable in a functional block is identified by"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 7)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: means of a selfdocumentation string stored in the device’s memory. This string contains the functional block index of the functional block to which this variable belongs, and the Sequence Number of the network variable within its functional block. For the LONWORKS NCS, this sequence number is identical to the numerical sequence number specified by the CDM tag. As an example, using the Device Manager object instance declared as the second object instance in the device it has an Instance Id of 1. The Device Manager attribute Standard Revision Level has the tag DmA2. The self-documentation string for this network variable is, therefore, specified as “ $@$ 1|2.” 7.1.8 Publish Service — The Publish notification service is implicit when an output network variable is updated. The device propagates the value of the output network variable (equivalent to a read-only attribute) to any input network variable(s) to which it may be bound. The ANSI/EIA/CEA-709.1 (LONWORKS) protocol only supports"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 8)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: propagation of output network variables. In CDM terminology, this means that only read-only attributes may be published. If a specific device model requires publication of a read/write attribute, an output network variable whose value mirrors the value of the input (read/write) network variable may be introduced to the object definition. 7.2 Sensor/Actuator/Controller Object (\\*) — The SEMI CDM SAC object coordinates the functionality of Sensor, Actuator, and Controller objects in the device. The SAC object is mapped to the LONMARK Node object functional block. Each device must support one (and only one) Node object functional block. The SAC functional block as well as its common required and optional attributes, services and behavior are described in document SEMI E54.1 the CDM standard specification. Extensions to the current SNVT list and LONMARK Interoperability Guidelines are marked with an asterisk $( ^ { * } )$ . 7.2.1 Extensions to the Node Object functional profile are defined in"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 9)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: the LONMARK Interoperability Guidelines, which form part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS technology. Table 4 summarizes the network variables that implement the attributes of the SAC object. Table 5 summarizes the services implemented by the SAC object. Table 4 Sensor/Actuator/Controller (SAC) Object Network Variables #1 This input is used to specify an attribute for the Restore Default and Publish Attribute services. #2 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 5 Sensor/Actuator/Controller (SAC) Object Services #1 These services may use the new Attribute ID input to the Node Object functional block. #2 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.3 Device Manager Object $( ^ { * } )$ — The Device Manager object is the device component responsible for managing and consolidating the device operation. The Device Manager"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 10)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: object is mapped to the LONMARK Node object functional block. Each device must support one (and only one) Node Object functional block. The DM functional block as well as its common required and optional attributes, services and behavior are described in SEMI E54.1 the CDM standard specification. Extensions to the current SNVT list and LONMARK Interoperability Guidelines are marked with an asterisk $( ^ { * } )$ . 7.3.1 The SEMI CDM Device Manager functional block, which is mapped to the LONMARK Node object, combines attributes of device self-documentation with an exception reporting mechanism. A new functional profile is, therefore, defined with the following mandatory configuration parameters, network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. Table 6 summarizes the network variables that implement the attributes of the Device Manager functional block. Table 6 Device Manager (DM) Object"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 11)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: Network Variables #1 This input is used to specify an attribute for the Restore Default and Publish Attribute services. #2 This input is used to specify a test ID for the Perform Diagnostics service. #3 This input is used to specify a password for the Unlock service. #4 This input is used to specify a password for the Get and Clear Exception Queue services. #5 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.3.2 Device Manager Functional Block Services — Table 7 summarizes the services implemented by the Device Manager functional block. Table 7 Device Manager (DM) Object Services #1 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.3.3 The Publish $\\mathrm { ( D m S 8 ) }$ notification service for the Device Manager exception status is implemented when an RQ_PROPAGATE request is received on the nviRequest input to the Node Object functional block. A specific network variable may be specified on"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 12)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: the SNVT_member input. This causes the value of this network variable to be propagated across the network to other network variable(s) to which it may be bound. The implementation of the Device Manager functional block updates the specified output network variable according to the conditions specified by the Reporting Mode and Exception Status Reporting Interval configuration properties of the functional block. 7.3.4 Device Manager Object Configuration Properties — The DM object has configuration properties to control exception reporting as shown in Table 8. These parameters are Standard Configuration Property Types (SCPTs). 7.3.4.1 The type SCPT_rept_mode $( ^ { * } )$ contains two four-bit fields specifying the reporting method for alarms and warning conditions. For example, in Neuron C, the application programming language used on the Neuron Chip, the declaration of SCPT_rept_mode is as follows: typedef enum { REP_REQUEST $\\begin{array} { r l r } & { } & \\\\ & { = } & { 0 , } \\\\ & { } &"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 13)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: \\\\ & { = } & { 1 , } \\\\ & { } & \\\\ & { = } & { 2 , } \\\\ & { } & \\\\ & { = } & { 3 , } \\\\ & { } & \\\\ & { = } & { 4 , } \\\\ & { } & \\\\ & { = } & { 5 , } \\\\ & { } & \\end{array}$ REP_REQ_LATCHED REP_EVT_TRIGD_ON REP_EVT_TRIGD_ONOFF REP_TIME_TRIGD REP_EVT_ON_TIME_TRIGD REP_EVT_ONOFF_TIME_TRIGD } rept_mode_t; typedef struct { rept_mode_t alarm_rept_mode :4; rept_mode_t warn_rept_mode :4; } SCPT_rept_mode; 7.3.4.2 The type SCPT_exc_sts(\\*) is a 16-bit value representing times from 0.00 to 655.35 seconds, with a resolution of 0.01 seconds. This parameter is optional. The default reporting mode is REP_REQUEST. 7.3.4.3 Device Manager Functional Block Output Network Variables — The Device Manager functional block of the CDM defines the attribute variable Device Status. The data type SNVT_dev_status is an enumeration. One field of the union is an enumeration, corresponding to the device status attribute defined by the table Device Status Attribute Values of the CDM. The values of this type are defined"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 14)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: in Table 8. Table 8 Device Status Attribute Variable Enumeration Values 7.3.4.4 The application programming language used to declare SNVT_dev_status is as follows: typedef enum { DS_UNKNOWN $\\begin{array} { l } { { \\mathrm { ~ ~ \\omega ~ } } } \\\\ { { \\mathrm { ~ ~ \\omega ~ } } } \\\\ { { \\mathrm { ~ ~ \\omega ~ } } } \\\\ { { \\mathrm { ~ ~ \\omega ~ } } } \\\\ { { \\mathrm { ~ ~ \\omega ~ } } } \\\\ { { \\mathrm { ~ ~ \\omega ~ } } } \\\\ { { \\mathrm { ~ ~ \\omega ~ } } } \\end{array}$ DS_INIT_SELFTEST DS_IDLE DS_SELFTEST_EXCPT DS_EXECUTING DS_ABORT_1 $\\begin{array} { r l r } { \\mathbf { \\sigma } } & { { } = } & { 5 , } \\\\ { \\mathbf { \\sigma } } & { { } = } & { 6 , } \\end{array}$ DS_ABORT_2 } dev_status_t; 7.3.4.4.1 The value DS_ABORT_1 corresponds to the Abort from Idle or Executing state, and the value DS_ABORT_2 corresponds to the Abort from Initialized/Self Testing or Self Test Exception state of the DM object. 7.3.4.5 The type SNVT_exc_que(\\*) contains four fields specifying the exception queue and"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 15)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: exception elements to retrieve. For example, in Neuron C, the application programming language used on the Neuron Chip, the declaration of SNVT_exc_que_mode is as follows: typedef enum { REP_ALARM $\\begin{array} { r l } { { \\mathbf { \\eta } } } & { { } { { 0 } } , } \\\\ { { \\mathbf { \\eta } } } & { { } { { \\mathbf { \\eta } } } } \\\\ { { \\mathbf { \\eta } } } & { { } { { \\mathbf { \\eta } } } } \\end{array}$ REP_WARNING } que_t; typedef struct { que_t exception_type :1; int element_number :1; SNVT_state exception_list[13]; int exception_clear :1; } SNVT_exc_que; 7.3.4.6 The type SNVT_exc_detail $( ^ { * } )$ is a sequence of three structures containing arrays. The ANSI/EIA/CEA709.1 protocol limits the size of each of these arrays to 9 bytes, so that the type fits within the network variable size limit of 31 bytes. For example, in Neuron C, the declaration of SNVT_exc_detail is as follows: typedef struct { u_char comn_exc_size; int calibration : 1; int real_time : 1; int communic : 1; int RAM :"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 16)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: 1; int EEPROM : 1; int EPROM : 1; int microproc : 1; int diagnostic : 1; -\\*/ int resvd1 : 1; int reset : 1; int notify_mfr : 1; int maintenance : 1; int power_inputV : 1; int power_outptV : 1; int power_resvd : 1; int power_overC : 1; u_char comn_exc_dtl[7]; u_char dev_exc_size; u_char dev_exc_dtl[9]; \\* \\*/ u_char mfr_exc_size; u_char mfr_exc_dtl[9]; } SNVT_exc_detail; 7.4 Sensor, Actuator, and Controller Functional Blocks — These functional blocks are necessarily specific to the Specific Device Models. The LONMARK Application Layer Interoperability Guidelines provide a framework for defining functional profiles. Specific Device Models may employ these functional profiles, and/or may define their own functional profiles and Standard Network Variable Types for device-specific requirements. As long as the functional profile definition guidelines are followed, these profiles may be proposed to the LONMARK Interoperability Association as new standard profiles. 7.5 Assembly Object (Asm) – The"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 17)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: Assembly (Asm) object instances may be used to provide for grouping more than one attribute from one or more functional blocks in a device into a single data structure for communication over the LonWorks network. The presentation of Assembly object instance attributes are indicated in Table 9. The presentation of Assembly object services are indicated in Table 10. Table 9 Assembly Object Network Variables Table 10 Assembly Object Network Services 7.6 Local Link Object (Lnk) — The Local Link (Lnk) object instances may be used to “link” an attribute of one object instance to an attribute of another object instance. Refer to SEMI $\\mathrm { E } 5 4 . 1 \\mathrm { ~ - ~ } \\mathrm { C D M }$ standard for further explanation and use of this object. The presentation of Local Link object instance attributes are indicated in Table 11. The presentation of Local Link object services are indicated in Table 12. Table 11 Local Link Object Network Variables #1 This is not an NV or CP. It is configuration"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 18)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: information contained within the device’s NV configuration table and address table that specifies a network variable connection between two or more network variables on the device. It can only be used to connect network variables of the same type. The link is created as soon as the tables are updated, so the Commit operation is not a separate step. Table 12 Local Link Object Network Services 7.7 Sensor-AI Object (Sai) — The presentation of the Sensor Analog Input (Sensor-AI) object instance attributes are as indicated in Table 13. The presentation of the Sensor-AI object services is indicated in Table 14. Table 13 Sensor-AI Object Instance Network Variables #1 A SCPTmaxSendTime value of 0 is used to inhibit report rate reporting. #2 A SCPTsndDelta value of 0 is used to inhibit value delta reporting. #3 A SCPTreportROC value of 0 is used to inhibit ROC reporting. #4 The form and content of this SNVT is context-specific. #5 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 19)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: for further definition. Table 14 Sensor-AI Object Instance Network Services (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.7.1 Sensor-AI Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.7.1.1 SNVT_xxx — The value of the sensor (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.7.2 Sensor-AI Object Configuration Parameters — The Sensor-AI object has configuration properties to control exception reporting as shown in Table 15. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.8 Sensor-EI Object (Sei) — The presentation of the Sensor"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 20)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: Enumerated Input (Sensor-EI) object instance attributes are as indicated in Table 15. The presentation of object services shall be indicated in Table 16. Table 15 Sensor-EI Object Instance Network Variables #1 A SCPTmaxSendTime value of 0 is used to inhibit report rate reporting. #2 The form and content of this SNVT is context-specific. #3 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 16 Sensor-EI Object Instance Network Services #1 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.8.1 Sensor-EI Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.8.1.1 SNVT_xxx — The value of the sensor (associated with the object instance) that is to be made available on the network. The form and content"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 21)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: of this SNVT is context-specific. 7.8.2 Sensor-EI Object Configuration Parameters — The Sensor-EI object has configuration properties to control exception reporting as shown in Table 17. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.9 Sensor-BI Object (Sbi) — The presentation of the Sensor Binary Input (Sensor-BI) object instance attributes are as indicated in Table 17. The presentation of Sensor-BI object services is indicated in Table 18. Table 17 Sensor-BI Object Instance Network Variables #1 A SCPTmaxSendTime value of 0 is used to inhibit report rate reporting. #2 The form and content of this SNVT is context-specific. #3 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 18 Sensor-BI Object Instance Network Services $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 22)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: definition. 7.9.1 Sensor-BI Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.9.1.1 SNVT_xxx — The value of the sensor (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.9.2 Sensor-BI Object Configuration Parameters — The Sensor-BI object has configuration properties to control exception reporting as shown in Table 19. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.10 Sensor-BI-TH Object (Sbith) — The presentation of the Sensor Binary Input Threshold (Sensor-BI-TH) object instance attributes are as indicated in Table 19. The presentation of Sensor-BI-TH object services is"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 23)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: indicated in Table 20. Table 19 Sensor-BI-TH Object Instance Network Variables #1 A SCPTmaxSendTime value of 0 is used to inhibit report rate reporting. #2 The form and content of this SNVT is context-specific. #3 An invalid value output is used to indicate an invalid reading. #4 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 20 Sensor-BI-TH Object Instance Network Services #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.10.1 Sensor-BI-TH Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.10.1.1 SNVT_xxx — The value of the sensor (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.10.2 Sensor-BI-TH Object"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 24)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: Configuration Parameters — The Sensor-BI-TH object has configuration properties to control exception reporting as shown in Table 19. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.11 Actuator-AO Object (Aao) — The presentation of the Actuator Analog Output (Actuator-AO) object instance attributes are as indicated in Table 21. The presentation of Actuator-AO object services is indicated in Table 22. Table 21 Actuator-AO Object Instance Network Variables #1 A value of 0 is used to disable the watchdog timeout. #2 The form and content of this SNVT is context-specific. #3 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 22 Actuator-AO Object Instance Network Services (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.11.1 Actuator-AO Object Network Variables — A new"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 25)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.11.1.1 $S N V T \\_ x x x$ — The setting of the actuator (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.11.2 Actuator-AO Object Configuration Parameters — The Actuator-AO object has configuration properties to control exception reporting as shown in Table 21. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.12 Actuator-EO Object (Aeo) — The presentation of the Actuator Enumerated Output (Actuator-EO) object instance attributes are as indicated in Table 23. The presentation of Actuator-EO object services is indicated in Table 24. Table 23 Actuator-EO Object"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 26)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: Instance Network Variables #1 A value of 0 is used to disable the watchdog timeout. #2 The form and content of this SNVT is context-specific. #3 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 24 Actuator-EO Object Instance Network Services (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.12.1 Actuator-EO Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.12.1.1 $S N V T \\_ x x x$ — The setting of the actuator (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.12.2 Actuator-EO Object Configuration Parameters — The Actuator-EO object has configuration properties to control exception reporting as shown in Table"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 27)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: 23. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.13 Actuator-BO Object $( A b o )$ — The presentation of the Actuator Binary Output (Actuator-BO) object instance attributes are as indicated in Table 25. The presentation of Actuator-BO object services is indicated in Table 26. Table 25 Actuator-BO Object Instance Network Variables #1 A value of 0 is used to disable the watchdog timeout. #2 The form and content of this SNVT is context-specific. #3 $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 26 Actuator-BO Object Instance Network Services (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.13.1 Actuator-BO Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 28)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.13.1.1 SNVT_xxx — The setting of the actuator (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.13.2 Actuator-BO Object Configuration Parameters — The Actuator-BO object has configuration properties to control exception reporting as shown in Table 25. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ . 7.14 Controller Object (C) — The presentation of the Controller Output (C) object instance attributes are as indicated in Table 27. The presentation of Controller object services is indicated in Table 28. Table 27 Controller-C Object Instance Network Variables #1 The form and content of this SNVT is context-specific. #2 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types (Part 29)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 7  Required and Optional Object Types\n\nContent: further definition. Table 28 Controller-C Object Instance Network Services #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 7.14.1 Controller Object Network Variables — A new functional profile is defined with the following mandatory network variables and behaviors. This functional profile forms part of the LONMARK Functional Profiles for SEMI SAN-compliant devices based on LONWORKS. 7.14.1.1 SNVT_xxx — The setting of the actuator (associated with the object instance) that is to be made available on the network. The form and content of this SNVT is context-specific. 7.14.2 Controller Object Configuration Parameters — The Controller object has configuration properties to control exception reporting as shown in Table 27. These parameters are Standard Configuration Property Types (SCPTs). Extensions to the current SCPT list and Interoperability Guidelines are marked by an asterisk $( ^ { * } )$ ."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 8  Protocol Compliance (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 8  Protocol Compliance\n\nContent: 8.1 A method of testing protocol compliance is required to verify implementation conformance to the standard. By virtue of the fact that the intermediate layers of the ANSI/EIA/CEA-709.1 (LONWORKS) protocol are implemented in commercially available silicon, compliance verification is needed only at the physical and application layers. The LONMARK Interoperability Association provides a compliance verification service to its members. When the SEMI Sensor/Actuator Network functional profiles are approved and incorporated by LONMARK International Association, this service may be used to verify compliance with the SEMI guidelines. 8.2 The certification procedure and checklist may be viewed and obtained by accessing web site http://www.lonmark.org. 8.3 Following the LonMark Interoperability Guidelines during product design will allow easy product certification. Application-specific functional profile(s) are available to download from the User Guides section to ease the specification process. All questions"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 8  Protocol Compliance (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 8  Protocol Compliance\n\nContent: about guidelines and certification should be directed to “cert@lonmark.org”. Design assistance may be obtained by referencing “lm_confm.pdf”."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 9  Specific Device Type Information (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 9  Specific Device Type Information\n\nContent: 9.1 This section provides for the mapping of network-visible specific device model structure and behavior, specified in a SEMI standard Specific Device Model specification, to the ANSI/EIA/CEA-709.1 (LONWORKS) protocol. Each subsection is devoted to a single Specific Device Model specification. As additional SEMI SDM specifications are created, additional SDM mappings are added as subsections to this NCS specification. Unless otherwise noted, all attributes and services described are instance level attributes (as opposed to class level attributes). Device-type-specific items, such as overrides to the standard connector, may also be noted in these subsections. 9.1.1 Note that the formats of object instance attributes and services are detailed in the associated Specific Device Model specification. The presentation of the attributes and services to a LONWORKS network is detailed in the tables contained in the following sub-sections and in the LONMARK Application Layer Interoperability"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 9  Specific Device Type Information (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 9  Specific Device Type Information\n\nContent: Guidelines document. Note that relationships between object classes, including inheritance are defined in the associated SDM specification and the CDM specification. 9.1.2 The instance identifier format of 1 through n, assigned to an object type, refers to the possibility of multiple instantiations of the object type. Refer to Table 3 of this document and the CDM document for a further explanation of object instance assignments. 9.2 Specific Device Model For Mass Flow Device — These sections detail the network mapping required to support the Specific Device Model For Mass Flow Device (see reference SEMI E54.3 of $\\ S 4 . 1 \\dot { }$ ). Table 29 summarizes the Mass Flow Device object types. Subsequent Table 30 to Table 49 detail the instance attributes and services associated with each Mass Flow Device object type. Table 29 Mass Flow Device Object Types #1 A turnaround connection is not a profile, but is a protocol-specific method of creating a link 9.2.1 The presentation of the Mass Flow"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 9  Specific Device Type Information (Part 3)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # 9  Specific Device Type Information\n\nContent: Device - Device Manager(DM) Object — is as defined by SEMI E54.1, CDM standard specification. There are no additional object instance attributes or services required by this SDM. 9.2.2 The presentation of the Mass Flow Device – Sensor/Actuator Controller (SAC) Object — is as defined by SEMI E54.1, CDM standard specification. There are no additional object instance attributes or services required by this SDM. 9.2.3 Sensor-AI-MF — The presentation of the Sensor Analog Input Mass Flow (Sensor-AI-MF) object instance attributes are as indicated in Table 30. The presentation of Sensor-AI-MF object services is indicated in Table 31."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 30  Sensor-AI-MF Object Instance Network Variables (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 30  Sensor-AI-MF Object Instance Network Variables\n\nContent: #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 31 Sensor-AI-MF Object Instance Network Services #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 9.2.4 Service Requests Code — The service request is implemented as a network variable update containing a file request to an nviSemiReq input to the Sensor-AI-MF Object functional block of a device. This input is defined by the SNVT_semi_req type as follows: typedef enum { struct { CMD_PERFORM_ZERO_OFFSET ${ \\begin{array} { r l } { = } & { 1 2 9 , } \\\\ { = } & { 1 3 0 , } \\\\ { = } & { 1 3 1 , } \\end{array} }$ CMD_QUERY_SUPPORTED_GAS_TYPES CMD_SELECTED_PROGRAMMED_GAS CMD_INSERT_GAS_TYPE $\\begin{array} { r c l } { { } } & { { = } } & { { 1 3 2 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { } } & { { = } } & { { 1 3 3 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { } } & { { = } } & { { 1 3 5 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { } } & {"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 30  Sensor-AI-MF Object Instance Network Variables (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 30  Sensor-AI-MF Object Instance Network Variables\n\nContent: { } } & { { } } \\\\ { { } } & { { } } & { { } } \\\\ { { } } & { { } } & { { = } } & { { 1 3 6 , } } \\end{array}$ CMD_DELETE_GAS_TYPE CMD_GET_GAS_CALIBRATION_DATA_VALUE CMD_SET_GAS_CALIBRATION_DATA_VALUE CMD_AUTORANGE } semi_request_t; typedef struct { unsigned int flblock_index; semi_request_t service_code; unsigned int parameter; // Optional parameter } SNVT_semi_req; 9.2.5 Sensor-AI-AT — The presentation of the Sensor Analog Input Ambient Temperature (Sensor-AI-AT) object instance attributes are as indicated in Table 32. The presentation of object services shall be indicated in Table 33."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 32  Sensor-AI-AT Object Instance Network Variables",
    "content": "Table 33  Sensor-AI-AT Object Instance Network Services  \n9.2.6  Assembly-MFM — The presentation of the Assembly Mass Flow Meter (Assembly-MFM) object instance attributes are as indicated in Table 34. The presentation of object services shall be indicated in Table 35.  \nTable 34  Assembly-MFM Object Instance Network Variables  \nTable 35  Assembly-MFM Object Instance Network Services  \n9.2.7  Sensor-AI-Aux — The presentation of the Sensor Analog Input Auxiliary (Sensor-AI-Aux) object instance attributes are as indicated in Table 36. The presentation of object services shall be indicated in Table 37."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 36  Sensor-AI-Aux Object Instance Network Variables",
    "content": "Table 37  Sensor-AI-Aux Object Instance Network Services  \n9.2.8  Actuator-AO-MF — The presentation of the Actuator Analog Output Mass Flow (Actuator-AO-MF) object instance attributes are as indicated in Table 38. The presentation of object services shall be indicated in Table 39.  \nTable 38  Actuator-AO-MF Object Instance Network Variables  \n#1: (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition.  \nTable 39  Actuator-AO-MF Object Instance Network Services  \n9.2.9  Controller- $C$ — The presentation of the Controller (C) object instance attributes are as indicated in Table 40.\nThe presentation of Controller object services are indicated in Table 41."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: Table 41 Controller-C Object Instance Network Services 9.2.10 Local Link-Lnk — The presentation of the Local Link (Lnk) object instance attributes are as indicated in Table 42. The presentation of Local Link object services are indicated in Table 43. Table 42 Local Link Object Instance Network Variables Table 43 Local Link Object Instance Network Services 9.2.11 SISO — The presentation of the Single Input Single Output (SISO) object instance attributes are as indicated in Table 44. The presentation of SISO object services are indicated in Table 45. Table 44 SISO Object Instance Network Variables #1: (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 45 SISO Object Instance Network Services 9.2.12 SISO-Setpoint – The presentation of the Single Input Single Output Setpoint (SISO-Setpoint) object instance attributes are as indicated in Table 46. The presentation of SISO-Setpoint object services are indicated in Table 47. Table"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: 46 SISO-Setpoint Object Instance Network Variables #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 47 SISO Object Instance Network Services 9.2.13 Assembly-MFC — The presentation of the Assembly Mass Flow Controller (Assembly-MFC) object instance attributes are as indicated in Table 48. The presentation of Assembly-MFC object services are indicated in Table 49. Table 48 Assembly-MFC Object Instance Network Variables Table 49 Assembly-MFC Object Instance Network Services 9.3 Specific Device Model For In-Situ Particular Monitor Device — These sections detail the network mapping required to support the Specific Device Model for In-Situ Particle Monitor Devices (see reference SEMI E54.10 of $\\ S 4 . 1 )$ . Table 50 summarizes the In-Situ Particle Monitor Device object types. Subsequent Table 51 to Table 82 details the attributes and services associated with each In-Situ Particle Monitor Device object type. Table 50 In-Situ"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 3)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: Particle Monitor Device Object Types 9.3.1 Device Manager — The presentation of the extended ISPM Device manager (DM) object instance attributes are as indicated in Table 51. The presentation of the extended ISPM DM object services are indicated in Table 52. Table 51 Extended Device Manager Object Instance Network Variables #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 52 Extended Device Manager Object Instance Network Services 9.3.2 Service Requests Code — The service request is implemented as a network variable update containing a file request to an nviSemiReq input to the Extended Device Manager Object functional block of a device. This input is defined by the SNVT_semi_req type as follows: typedef enum { struct { CMD_LASER_ON $\\begin{array} { r c l } { { } } & { { } } & { { = } } & { { 3 3 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { } } & { { = } } & { { 3 4 , } } \\end{array}$ CMD_LASER_OFF } semi_request_t;"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 4)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: typedef struct { unsigned int flblock_index; semi_request_t service_code; unsigned int parameter; // Optional parameter } SNVT_semi_req; 9.3.3 Sensor Actuator Controller — The presentation of the extended ISPM Sensor Actuator Controller (SAC) object instance attributes are as indicated in Table 53. The presentation of SAC object services are indicated in Table 54. Table 53 Extended SAC Object Instance Network Variables $( ^ { * } )$ LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 54 Extended SAC Object Instance Network Services #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 9.3.4 Service Requests Code — The service request is implemented as a network variable update containing a file request to an nviSemiReq input to the Extended SAC Object functional block of a device. This input is defined by the SNVT_semi_req type as follows: typedef enum { struct { CMD_CLEAR_COUNTS $= 3 5 .$ , }"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 5)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: semi_request_t; typedef struct { unsigned int flblock_index; semi_request_t service_code; unsigned int parameter; // Optional parameter } SNVT_semi_req; 9.3.5 Sensor-AI-LCS — The presentation of the Sensor Analog Input Laser Sensor (Sensor-AI-LCS) object instance attributes are as indicated in Table 55. The presentation of Sensor-AI-LCS object services are indicated in Table 56. Table 55 Sensor-AI-LCS Object Instance Network Variables Table 56 Sensor-AI-LCS Object Instance Network Services 9.3.6 Sensor-AI-SLS — The presentation of the Sensor Analog Input Stray Light Sensor (Sensor-AI-SLS) object instance attributes are as indicated in Table 57. The presentation of Sensor-AI-SLS object services are indicated in Table 58. Table 57 Sensor-AI-SLS Object Instance Network Variables Table 58 Sensor-AI-SLS Object Instance Network Services 9.3.7 Sensor-AI-MNS — The presentation of the Sensor Analog Input Medium Noise Sensor (Sensor-AI-MNS) object instance attributes are as"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 6)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: indicated in Table 59. The presentation of Sensor-AI-MNS object services are indicated in Table 60. Table 59 Sensor-AI-MNS Object Instance Network Variables Table 60 Sensor-AI-MNS Object Instance Network Services 9.3.8 Sensor-AI-Counter — The presentation of the Sensor Analog Input Counter (Sensor-AI-Counter) object instance attributes are as indicated in Table 61. The presentation of Sensor-AI-Counter object services are indicated in Table 62. Table 61 Sensor-AI-Counter Object Instance Network Variables Table 62 Sensor-AI-Counter Object Instance Network Services 9.3.9 Assembly-ISPM#1 — The presentation of the Assembly #1 In-Situ Particle Monitor (Assembly-ISPM#1) object instance attributes is as indicated in Table 63. The presentation of Assembly-ISPM#1 object services are indicated in Table 64. Table 63 Assembly-ISPM#1 Object Instance Network Variables Table 64 Assembly-ISPM#1 Object Instance Network Services 9.3.10 Assembly-ISPM#2 — The presentation of the Assembly"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 7)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: #2 In-Situ Particle Monitor (Assembly-ISPM#2) object instance attributes is as indicated in Table 65. The presentation of the Assembly-ISPM#2 object services are indicated in Table 66. Table 65 Assembly-ISPM#2 Object Instance Network Variables Table 66 Assembly-ISPM#2 Object Instance Network Services 9.3.11 Assembly-ISPM#3 — The presentation of the Assembly #3 In-Situ Particle Monitor (Assembly-ISPM#3) object instance attributes is as indicated in Table 67. The presentation of Assembly-ISPM#3 object services are indicated in Table 68. Table 67 Assembly-ISPM#3 Object Instance Network Variables Table 68 Assembly-ISPM#3 Object Instance Network Services 9.3.12 Assembly-ISPM#4 — The presentation of the Assembly #4 In-Situ Particle Monitor (Assembly-ISPM#4) object instance attributes is as indicated in Table 69. The presentation of Assembly-ISPM#4 object services are indicated in Table 70. Table 69 Assembly-ISPM#4 Object Instance Network Variables Table 70 Assembly-ISPM#4"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 8)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: Object Instance Network Services 9.3.13 Assembly-ISPM#5 — The presentation of the Assembly #5 In-Situ Particle Monitor (Assembly-ISPM#5) object instance attributes is as indicated in Table 71. The presentation of Assembly-ISPM#5 object services are indicated in Table 72. Table 71 Assembly-ISPM#5 Object Instance Network Variables Table 72 Assembly-ISPM#5 Object Instance Network Services 9.3.14 Assembly-ISPM#6 — The presentation of the Assembly #6 In-Situ Particle Monitor (Assembly-ISPM#6) object instance attributes is as indicated in Table 73. The presentation of Assembly-ISPM#6 object services are indicated in Table 74. Table 73 Assembly-ISPM#6 Object Instance Network Variables Table 74 Assembly-ISPM#6 Object Instance Network Services 9.3.15 Assembly-ISPM#7 – The presentation of the Assembly #7 In-Situ Particle Monitor (Assembly-ISPM#7) object instance attributes is as indicated in Table 75. The presentation of Assembly_ISPM#7 object services are indicated in Table 76."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables (Part 9)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 40  Controller -C Object Instance Network Variables\n\nContent: Table 75 Assembly-ISPM#7 Object Instance Network Variables Table 76 Assembly-ISPM#7 Object Instance Network Services 9.3.16 Assembly-ISPM#8 — The presentation of the Assembly $\\# 8 \\ \\mathrm { I n } .$ -Situ Particle Monitor (Assembly-ISPM#8) object instance attributes is as indicated in Table 77. The presentation of Assembly-ISPM#8 object services are indicated in Table 78."
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables (Part 1)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables\n\nContent: Table 78 Assembly-ISPM#8 Object Instance Network Services 9.3.17 Assembly-ISPM#9 — The presentation of the Assembly #9 In-Situ Particle Monitor (Assembly-ISPM#9) object instance attributes is as indicated in Table 79. The presentation of Assembly-ISPM#9 object services are indicated in Table 80. Table 79 Assembly-ISPM#9 Object Instance Network Variables Table 80 Assembly-ISPM#9 Object Instance Network Services 9.3.18 Assembly-ISPM#48 — The presentation of the Assembly $\\# 4 8 \\ \\mathrm { I n }$ -Situ Particle Monitor (Assembly-ISPM#48) object instance attributes is as indicated in Table 81. The presentation of Assembly-ISPM#48 object services are indicated in Table 82. Table 81 Assembly-ISPM#48 Object Instance Network Variables Table 82 Assembly-ISPM#48 Object Instance Network Services 9.4 Specific Device Model For Endpoint Device — These sections detail the network mapping required to support the Specific Device Model for Endpoint Devices (see reference SEMI E54.11"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables (Part 2)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables\n\nContent: of $\\ S 4 . 1 \\dot { }$ ). Table 83 summarizes the Endpoint Device object types. Subsequent Table 84 to Table 97 details the attributes and services associated with each Endpoint Device object type. Table 83 Endpoint Device Object Types 9.4.1 Device Manager — The presentation of the extended EPD Device manager (DM) object instance attributes are as indicated in Table 84. The presentation of the extended EPD DM object services are indicated in Table 85. Table 84 Extended Device Manager Object Instance Network Variables Table 85 Extended Device Manager Object Instance Network Services 9.4.2 Sensor Actuator Controller — The presentation of the extended EPD Sensor Actuator Controller (SAC) object instance attributes are as indicated in Table 86. The presentation of extended EPD SAC object services are indicated in Table 87. Table 86 Extended SAC Object Instance Network Variables #1 This input is used to specify an attribute for the Endpoint services. #2 $( ^ { * } )$"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables (Part 3)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables\n\nContent: LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 87 Extended SAC Object Instance Network Services 9.4.3 Service Requests Code — The service request is implemented as a network variable update containing a file request to an nviSemiReq input to the Extended SAC Object functional block of a device. This input is defined by the SNVT_semi_req type as follows: typedef enum { struct { CMD_RESET_ENDPOINT $\\begin{array} { l } { { \\dag } } \\\\ { { \\begin{array} { r c l } { { \\dag } } & { { = } } & { { 3 3 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { \\dag } } & { { = } } & { { 3 4 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { \\dag } } & { { = } } & { { 3 5 , } } \\\\ { { } } & { { } } & { { } } \\\\ { { \\dag } } & { { = } } & { { 3 6 , } } \\end{array} } } \\end{array}$ CMD_DOWNLOAD_RECIPE CMD_UPLOAD_RECIPE CMD_CALIBRATE } semi_request_t; typedef struct { unsigned int flblock_index; semi_request_t service_code; unsigned int parameter; // Optional"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables (Part 4)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables\n\nContent: parameter } SNVT_semi_req; 9.4.4 Sensor-BI-TH-EP — The presentation of the Sensor Binary Input Threshold Endpoint (Sensor-BI-TH-EP) object instance attributes are as indicated in Table 88. The presentation of Sensor-BI-TH-EP object services are indicated in Table 89. Table 88 Sensor-BI-TH-EP Object Instance Network Variables #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. Table 89 Sensor-BI-TH-EP Object Instance Network Services #1 (\\*) LonMark interoperability extension. Refer to $\\ S 6 . 8 . 3$ for further definition. 9.4.5 Service Requests Code — The service request is implemented as a network variable update containing a file request to an nviSemiReq input to the Sensor-AI-MF Object functional block of a device. This input is defined by the SNVT_semi_req type as follows: typedef enum { struct { CMD_ENDPOINT_ON ${ \\begin{array} { l } { = \\ 3 3 , } \\\\ { = \\ 3 4 , } \\\\ { = \\ 3 5 , } \\\\ { = \\ 3 6 , } \\\\ { = \\ 3 7 , }"
  },
  {
    "title": "SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables (Part 5)",
    "content": "Title: SEMI E54.16-0705 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR LONWORKS - # Table 77  Assembly-ISPM#8 Object Instance Network Variables\n\nContent: \\end{array} }$ CMD_ENDPOINT_OFF CMD_ENDPOINT_START CMD_ENDPOINT_SUSPEND CMD_ENDPOINT_RESUME } semi_request_t; typedef struct { unsigned int flblock_index; semi_request_t service_code; unsigned int parameter; // Optional parameter } SNVT_semi_req; 9.4.6 Assembly-EPD#1 — The presentation of the Assembly #1 Endpoint (Assembly-EPD#1) object instance attributes is as indicated in Table 90. The presentation of Assembly-EPD#1 object services are indicated in Table 91."
  }
]