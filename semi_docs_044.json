[
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication\n\nContent: request is accepted, the equipment responds with a challenge. The equipment selects the algorithms to be used for authentication (if applicable), provides its own identification and challenges the client to authenticate itself. The challenge can be a simple request to client to prove its identity. Note that errors can be returned instead of the normal parameters. Additional errors may be needed as required by the implementation protocol used to support the concepts. 10.1.3 Client Authenticate — The client responds to the server challenge, confirming the algorithms selected (if applicable), equipment’s identification and also presents proof of client’s own identity. The proof is typically a hash of some random data encrypted with a key that only the client would know and that the server can verify. A secret unique to the authentication protocol may also be generated by the client and sent to equipment in the response. Actual algorithms used for exchange of this secret will be defined by the specific authentication"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication (Part 3)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication\n\nContent: protocol specified in the adjunct standard. Table 5 Equipment Challenge Parameter Definitions Table 6 Client Authenticate Parameter Definitions 10.1.4 Equipment ACK — Equipment verifies client’s response and confirms the exchanged session secret in this final authentication protocol message. The acknowledgement contains a parameter that can be a hash of the secret or its derived secret. The derivation algorithm for derived session secret is known both to the equipment and the client, and is part of the protocol specification. This allows client to verify the exchange by verifying the hash. Subsequent communication over the session will make use of the derived secret keys. Note that this standard does not require data be encrypted over the established session, the derived secret is only used to identify the session and hence the authorizations of the authenticated client. Additional errors may be defined as required by the protocol chosen, and technology used by the implementations. Table 7 Equipment ACK Argument"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication (Part 4)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication\n\nContent: Definitions"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10.2 Session Identifier",
    "content": "10.2.1 The session id returned from the EstablishSession request (Section 13.2.6) can be used to identify the session for subsequent communications and to enforce authorizations.  The identifier will be embedded in special headers in the message transport, and not as formal parameters in the communication messages thus preserving their original structure as defined by the respective interface specifications."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.1 Authorization Overview (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.1 Authorization Overview\n\nContent: 11.1.1 Any client wishing to invoke privileged services on the equipment must be authorized to do so. Authorization is implemented by granting access control privileges beforehand to defined clients and later checked against the client’s requests. The total set of available privileges may include standardized service-level access control, such as privileges to invoke specific services or functions, but may also include supplier-defined finergrained privileges. A default privilege to allow access to all services available from an authenticated session is defined in this specification, and must be supported by all implementations. A user of the equipment therefore has the option to reduce security enforcement on the equipment to authentication alone, achieved by assigning this allaccess privilege to all defined clients. 11.1.2 Figure 6 provides an abstract overview of the relationships among the Role, Principal, and Privilege concepts defined in this specification. A Principal is either assigned to one and"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.1 Authorization Overview (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.1 Authorization Overview\n\nContent: only one Role, or to one or more Privileges. A Role is defined as a uniquely-identifiable set of 1 or more Privileges, and cannot be composed from other Roles. Zero or more Principals can be assigned to at most one Role. These relationships are enforced through the management of Access Control List entries, described in Section 11.2."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2 Access Control List (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2 Access Control List\n\nContent: 11.2.1 Access control privileges are assigned to defined clients (principals) by using an Access Control List (ACL). An ACL is a collection of ACL entries, each entry granting a subset of the available privileges to a specific subject. A subject can represent a specific principal, a uniquely-named role, or all principals that successfully authenticate with the equipment. A principal can have privileges granted to it through either an explicit list of privileges, or indirectly through assignment to a role. The equipment shall maintain the ACL defined in this specification in nonvolatile memory. 11.2.2 Roles are used to simplify the management of privilege assignments to principals. Each unique role has an ACL entry that specifies the privileges assigned to that role. Those privileges can then be granted to principals through a RoleAssignment ACL entry for each principal that should have those privileges. A principal must either have a RoleAssignment or an explicit list of privileges assigned to it"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2 Access Control List (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2 Access Control List\n\nContent: (PrivilegeAssignment); it is not permitted to have both. 11.2.3 The equipment shall refuse session requests from clients that have no ACLEntry, either explicitly through a role or privilege assignment, or implicitly through the existence of an ACLEntry for all authenticated principals."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.4 ACLEntry",
    "content": "11.2.4.1 Figure 7 shows the classes used for requesting the creation of a new ACLEntry on the equipment (see Section 12.3.2.3).  The ACLEntry is an abstract base class for the two kinds of ACL entries, PrivilegeAssignment, and RoleAssignment.  There can be only one ACLEntry for each subject.  Attempts to add a second entry for same subject shall generate a duplicate entry error (see Section 12.3.2.3).  This class has no attributes or associations."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.5 PrivilegeAssignment",
    "content": "11.2.5.1 This class defines an association between a given subject (either a Principal or a Role) and its set of assigned privileges on the equipment.  A PrivilegeAssignment for a Principal establishes all privileges that are specifically granted to the Principal.  A given Principal must either have a PrivilegeAssignment ACLEntry or a RoleAssignment ACLEntry (see Section 11.2.6); it cannot have one (or more) of each.  A PrivilegeAssignment for a Role defines the role itself and the privileges that will be granted to any Principal that is assigned to that Role (see Section 11.2.6).  There can be only one PrivilegeAssignment ACLEntry for a given Role.  \nTable 8 PrivilegeAssignment Association Definitions"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.6 RoleAssignment (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.6 RoleAssignment\n\nContent: 11.2.6.1 This class assigns a specific Principal to a Role. The identified Role must have a PrivilegeAssignment ACLEntry elsewhere in the ACL. All privileges assigned to the identified Role are granted to the identified Principal’s sessions. A given Principal must either have a RoleAssignment ACLEntry or a PrivilegeAssignment ACLEntry (see Section 11.2.5); it cannot have one (or more) of each. 11.2.6.2 A PrivilegeAssignment ACLEntry for a Role cannot be deleted from the ACL until all Principals that were assigned to that Role have been removed from it by deletion of their RoleAssignment ACLEntry. Any authenticated sessions that were established for such Principals prior to the deletion of their RoleAssignment ACLEntry shall continue to be operable with that Role’s privileges until the session is terminated. Subsequent attempts by such Principals to request sessions shall be rejected unless there is a default set of privileges assigned to the reserved “anyPrincipal” (see Section 11.2.8). Otherwise, in order for"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.6 RoleAssignment (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.6 RoleAssignment\n\nContent: session requests to be accepted, these Principals will have to have specific privileges assigned to them directly through a PrivilegeAssignment ACLEntry, or indirectly through assignment to a new Role. Table 9 RoleAssignment Association Definitions"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.7 Subject",
    "content": "11.2.7.1 This is an abstract base class used to represent any entity that can be granted privileges in an ACL entry. This can be either a Principal or a Role.  The id is a text field that identifies a particular Subject.  If the Subject is a Principal, then the id is equal to that Principal’s unique id used during authentication.  If the Subject is a Role, then the id is equal to the name of the Role."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.8 Principal (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.8 Principal\n\nContent: 11.2.8.1 This class represents a specific Principal that can be authenticated and assigned privileges. This specification defines a reserved Principal id that represents any Principal that successfully authenticates to the equipment. The value of the id for this reserved Principal is “urn:semi-org:auth:anyPrincipal”. All implementations shall support this reserved Principal. If an equipment user’s security policy permits the approach, a PrivilegeAssignment or RoleAssignment ACL entry can be created for the reserved Principal to assign a default set of privileges to any client that successfully authenticates, rather than creating an ACL entry for each Principal. 11.2.8.2 Each client that attempts to authenticate to the equipment must have an id that matches the id of one PrivilegeAssignment or RoleAssignment ACLEntry for that Principal, or else there must be one PrivilegeAssignment or RoleAssignment ACLEntry for the reserved “anyPrincipal”. If there are no such entries for the authenticating client, the equipment"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.8 Principal (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.8 Principal\n\nContent: shall reject the session request. If there is a PrivilegeAssignment or RoleAssignment ACLEntry for both the specific Principal and the reserved “anyPrincipal”, the equipment shall accept the session request, and shall grant only those privileges assigned to the specific Principal to the session. Privileges assigned to the reserved “anyPrincipal” shall not be granted to such sessions."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.9 Role",
    "content": "11.2.9.1 This class represents a Role that can be assigned privileges.  Roles can simplify the assignment of privileges to Principals.  This is achieved by creating a single PrivilegeAssignment ACL entry for the Role containing the appropriate privileges, and then assigning each Principal (or the reserved “anyPrincipal”) to that Role using a RoleAssignment ACL entry."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.10 Privilege (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.10 Privilege\n\nContent: 11.2.10.1 This class represents a specific privilege that can be granted to subjects as part of an ACL entry. All defined privileges supported by the equipment can be obtained using the GetDefinedPrivileges operation of the SecurityAdmin interface. How each privilege is applied to a subject is determined by the specification or equipment supplier that defines the privilege. The privilege id is a text field that identifies a particular privilege and must be unique across all privileges defined on the equipment. Permission and privilege is used interchangeably in this specification. 11.2.10.2 This specification defines a reserved Privilege id that represents all Privileges that are supported by the equipment. The value of the id for this reserved Privilege is “urn:semi-org:auth:allPrivileges”. All implementations shall support this reserved Privilege. If an equipment user’s security policy permits the approach, an ACL entry can be created for any Principal or Role that assigns this reserved Privilege to that"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.10 Privilege (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 11.2.10 Privilege\n\nContent: Principal or Role. Principals or Roles that are assigned this privilege are granted all privileges supported by the equipment. A PrivilegeAssignment ACL entry containing this privilege cannot include any other privileges supported by the equipment in the entry. Table 11 Privilege Attribute Definitions 11.2.10.3 This specification also defines a reserved Privilege id that represents the Privileges of the SecurityAdmin as described in 12.2. The value of the id for this reserved Privilege is “urn:semi-org.auth:securityAdminPrivileges”. All implementations shall support this reserved Privilege. One and only one Principal can be assigned this privilege, either through a RoleAssignment or PrivilegeAssignment ACLentry. Once assigned, that Principal is permitted access to all operations defined for the SecurityAdmin interface. Requests to create more than one ACLEntry assigning this privilege to a Principal shall be rejected (see Section 12.3.2.3)."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 12.1 Administration Overview",
    "content": "12.1.1 As the number of clients and resources to manage across a factory scales up, support for a centralized security administration model becomes a critical capability.  This specification will not describe how a factory can implement such a model for their network, but will specify standard mechanisms to enable this capability.  This specification describes a security administration interface to allow remote management of client credentials and authorizations, such as from a central location.  Only concepts and behavior are described, it is expected that a separate technology adjunct standard will be created describing the specific message structure, protocols and algorithms that will used."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 12.2 Security Admin",
    "content": "12.2.1 The equipment must support one security administration account.  This admin agent will have privileges to utilize the SecurityAdmin interface defined in this specification.  The initial security admin credentials must be established at the time of equipment install via some out of band means, this can be a local operator interface or provided by equipment vendor as a factory preset.  If the admin credentials are factory preset, then there must be some means for end-user to re-establish its credentials.  This specification requires that only the security admin can utilize the services defined in the security administration interface.  Security admin privileges are granted to one and only one Principal via a reserved privilege id.  The equipment shall only support 1 active security admin session at a time."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 12.3 Security Administration Interface",
    "content": "12.3.1 Figure 8 summarizes the standard services available through the security admin interface to any client authenticated as the security admin.  Equipment manufacturers are free to define additional operations if needed.  \nFigure 8 Security Administration Interface"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 12 Security Administration Operations",
    "content": "12.3.2.1 GetDefinedPrivileges — This operation retrieves the set of privileges supported by the equipment manufacturer.  The list shall include the reserved “allPrivileges” Privilege defined in this specification (see Section 11.2.10).  \nTable 13 GetDefinedPrivileges Parameter Definitions  \n12.3.2.2 GetACL — This operation requests for the entire ACL currently defined on the equipment."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 14 GetACL Parameter Definitions (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 14 GetACL Parameter Definitions\n\nContent: 12.3.2.3 AddACLEntry — This operation adds a new ACL entry to the equipment’s ACL. If the ACLEntry is a PrivilegeAssignment or a RoleAssignment for a Principal or Role that already has a PrivilegeAssignment or RoleAssignment ACLEntry, the equipment shall return an error. If the ACLEntry is a PrivilegeAssignment and refers to privilege id’s that are not supported by the equipment, the equipment shall return an error. If the ACLEntry is a RoleAssignment and refers to a Role that does not have a PrivilegeAssignment ACLEntry defined, the equipment shall return an error. If the ACLEntry is a RoleAssignment or PrivilegeAssignment that would result in more than one Principal having the SecurityAdmin privilege (see Section 11.2.10.3), the equipment shall return an error. Otherwise, the equipment shall store the newly-added ACLEntry together with the rest of the ACL in nonvolatile memory. Table 15 AddACLEntry Parameter Definitions 12.3.2.4 DeleteACLEntry — This service removes an ACL entry from"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 14 GetACL Parameter Definitions (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 14 GetACL Parameter Definitions\n\nContent: equipment’s ACL. The deletion of an ACLEntry that has been applied to one or more active sessions does not affect the privileges granted to that session, nor does it terminate any such session. Attempts to establish new sessions by a Principal whose PrivilegeAssignment or RoleAssignment ACLEntry has been deleted shall be rejected by the equipment until a new ACL entry is created for that Principal, or unless there is an ACLEntry for the reserved “anyPrincipal” (see Section 11.2.8). It is an error to delete a PrivilegeAssignment ACLEntry for a Role when there are still Principals assigned to that Role through a RoleAssignment ACLEntry. Table 16 DeleteACLEntry Parameter Definitions 12.3.2.5 GetActiveSessions — This operation allows the security admin to retrieve information for all active nonadmin sessions currently established on the equipment."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 17 GetActiveSessions Parameter Definitions",
    "content": "12.3.2.6 SetMaxSessions — This operation allows the security admin to set the maximum number of simultaneous non-admin sessions that the equipment will allow.  This limit only applies to new session requests not coming from the security admin, current established sessions are not affected.  If the number of current active sessions exceeds this limit, any new non-admin session requests shall be rejected by the equipment.  New session requests are authenticated first to determine if the client is not the security admin, then the check on the limit is made to determine whether or not to reject the request.  Setting this limit to 0 will restrict to security admin sessions only.  \nTable 18 SetMaxSessions Parameter Definitions  \n12.3.2.7 GetMaxSessions — his operation retrieves the current maximum limit of simultaneous non-admin sessions set on equipment.  \nTable 19 GetMaxSession Parameter Definitions"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 12.3.3 Type Definitions",
    "content": "12.3.3.1 UnauthorizedOperationError — This class describes an authorization error associated with a specific operation."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 21 UnauthorizedOperationError Association Definitions",
    "content": "12.3.3.2 UnrecognizedPrivilegeError — This class describes an error where one or more privileges are not recognized by the equipment."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 22 UnrecognizedPrivilegeError Attribute Definitions (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 22 UnrecognizedPrivilegeError Attribute Definitions\n\nContent: Table 23 UnrecognizedPrivilegeError Association Definitions 12.3.3.3 DefinedPrivilege — This class is used to describe privileges supported by the equipment. The equipment shall maintain the list of supported privileges in non-volatile memory. Table 24 DefinedPrivileges Attribute Definitions 12.3.3.4 ActiveSession — This class describes an active session on the equipment. Not all communication protocols require the specification of a separate endpoint. Any implementation of this specification must define requirements for the presence or absence of the endpoint information provided for sessions (see Section 13.2.6). Table 25 ActiveSession Attribute Definitions Table 26 ActiveSession Association Definitions 12.3.3.4.1 EndPoint — An abstract data type used to describe a communication end point. This specification only defines end points using the HTTP protocol, although others are possible depending on the communication protocol. Any implementation of this specification must"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 22 UnrecognizedPrivilegeError Attribute Definitions (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 22 UnrecognizedPrivilegeError Attribute Definitions\n\nContent: define requirements for the support of separate endpoint addresses, and any additional EndPoint subclasses required for the communication protocol used. This class has no attributes or associations. 12.3.3.4.2 HTTPEndPoint — This class is used to describe addressing information that the equipment is to use for sending notifications to clients where the communication protocol in use is based on HTTP."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 12.4 Equipment Console Interfaces",
    "content": "12.4.1 The equipment manufacturer shall provide access to the SecurityAdmin operations from the equipment console."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 13  Session Communications (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 13  Session Communications\n\nContent: 13.1 Session Message Flow — Figure 13 shows an example of a typical message flow for an authenticated communication session. 13.1.1 Authentication — Authentication message flow as described in Section 10 in which both client and equipment mutually verify each other’s identity. 13.1.2 Session Establishment — Session establishment in this specification is achieved by sending a EstablishSession request following authentication. EstablishSession includes the client’s end point (if necessary) for equipment notifications (see Section 13.2.6). Upon receiving the request, the equipment determines if the authenticated client has a corresponding ACLEntry. If so, a new session is created for the client if possible (see Section 13.2.6), and generates a unique session identifier for it. The session identifier is returned to the client in the EstablishSession response for use in subsequent requests. Every session established on the equipment has associated with it a unique session identifier, the client’s id, and end"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 13  Session Communications (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 13  Session Communications\n\nContent: point address. Once established, the session is granted the Privileges assigned to the client based on the corresponding ACLEntry for that client (Principal). Changes to the ACL do not affect the Privileges of sessions established prior to the change.. 13.1.3 Service Request and Response — Service requests, as defined by any interface specification that requires authenticated communications and authorization, are made. The unique session identifier required for authorization is carried in reserved session headers within the implementation protocol (see Section 10.2). 13.1.4 Close Session — Request by a client to terminate an authenticated session. Upon receiving this request, the equipment clears all context information related to that session, including closing any existing, active connection, and terminating any activities initiated by the client during the session."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 13.2 SessionManager Interface",
    "content": "13.2.1 The equipment shall implement the session management operations defined in this section.  These operations are accessible to any client after an authenticated session is established, including the security admin.  \nFigure 14 Generic Session Services"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations\n\nContent: 13.2.3 PersistSession — Upon receiving this request, if the client is requesting that the session be persisted, the equipment shall store the client’s current session context including the session identifier, any client endpoint addressing information, and session privileges to non-volatile memory. Once the session has been persisted, it remains active across equipment shutdowns, reactivating as soon as the equipment is in a state where it can support external communications. Persistent sessions can still be terminated if the equipment determines that the client is unreachable. For further details, see the Session Monitoring state of Session State Model, defined in Section 14.3.2.7. See session state transitions (Table 30) into and out of the Frozen state for required behavior on freezing and resuming persistent sessions. If the client uses this operation to remove persistence from the session state, the equipment can remove the client’s session context from non-volatile memory, and shall not"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations\n\nContent: re-activate this session automatically at equipment startup. Table 29 PersistSession Parameter Definitions 13.2.4 SessionPing — Upon receiving this request, the equipment shall reply with its id. Ids are preconfigured and must be the same one as used during the authentication phase. If equipment ids are not used during authentication, then this is an identifier that shall be configurable at the equipment. See the Session Monitoring state defined in Section 14.3.2.7, regarding behavior of established authenticated sessions in the event of ping timeouts. Table 30 SessionPing Parameter Definitions 13.2.5 CloseSession — Upon receiving this request, the equipment shall send the SessionClosed notification (see Section 15.1.3) to the client whose session is being closed, delete all information related to the client’s session, and close any active connection to the client if one exists. 13.2.5.1 The established equipment security admin has the privilege to terminate or close any active session via the"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations (Part 3)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations\n\nContent: CloseSession request. This admin function can be used to cleanup sessions where clients are no longer active or to force termination of any session even when a client is still active. Table 31 CloseSession Parameter Definitions 13.2.6 EstablishSession — This operation creates a new authenticated session, sets the end point address to be used for sending notifications to the client and establishes a session identifier. This must be the first request sent after authentication is complete in order to create a new session, any other request is rejected with operation cannot be performed error. The session identifier must be unique for each active session and is valid as long as the session is not closed. The session identifier must be included in all subsequent requests in a special header defined by the protocol specification. A client must have an ACLEntry defined in order to establish sessions, else request is rejected. The client’s assigned Privileges from its ACLEntry are read at the time the"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations (Part 4)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 28 SessionManager Operations\n\nContent: session is established and are assigned to the session. Subsequent requests using the established session will use the session’s Privileges for access verification even if the client’s Privileges have changed since then. Table 32 EstablishSession Parameter Definitions"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 13.3 Encryption of Data",
    "content": "13.3.1 This standard does not require data transmitted over an established session to be encrypted, encryption is only required as specified by the authentication protocol."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14  State Model",
    "content": "14.1 This section defines the client’s view of the equipment’s behavior in supporting authentication, session establishment, session management and communications over an established session.  The state models represent client’s view of the equipment’s state, not necessarily the actual equipment’s internal operations.  No transitions in these state models are to be made available for event reporting.  \n14.2 Session Establishment State Model — The session establishment state model defines the behavior of the equipment for establishment of authenticated sessions over this interface.  It defines the equipment’s management of authenticated sessions overall during startup and shutdown.  For definition of individual session behaviors, see Section 14.3."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.2.1 Session Establishment States",
    "content": "14.2.1.1 DISALLOWED — This state is active when the equipment is shutting down, either as part of an orderly shutdown or an emergency power-off.  While in this state, any requests for new authenticated sessions (if it is possible to receive them) are rejected and all active sessions have been closed or FROZEN (Section 14.3.2.9).  In the case of an emergency shutdown, all active sessions may be dropped abruptly and notifications to clients may not be possible.  In this case, persistent sessions shall still be resumed on startup since their state is saved to non-volatile storage.  \n14.2.1.2 ALLOWED — Establishment of authenticated sessions is allowed.  Upon entry to this state, all FROZEN persistent sessions are resumed per the session state model.  While in this state, requests for establishment of new authenticated sessions are accepted, see Section 14.3 Session State Model for behavior on establishment of an authenticated session.  \n14.2.2 Session Establishment State Transitions\nTable 33 Session Establishment State Transitions Table"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3 Session State Model",
    "content": "14.3.1 The session state model defines behavior of equipment related to establishing an authenticated session, supporting the services and message exchanges over the established session and to terminating the session."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States\n\nContent: 14.3.2.1 ACTIVE — Parent state, covers entire lifecycle of an authenticated session. Session is active beginning with a successful request to establish a new session, and is active until the session is closed. 14.3.2.2 AUTHENTICATING — This state is where the client and the equipment carry out the authentication process and establish new authenticated sessions. Privileges are granted to the session once the client is authenticated and the session successfully established. See Section 10 for the authentication message flow, and Section 13.2.6 for session establishment. 14.3.2.3 ESTABLISHED — This state is the parent of all those sub-states that relate to service invocation and communications subsequent to successful authentication and session establishment. It has two simultaneous substates, COMMUNICATING and MONITORING, both of which are active whenever the session is ESTABLISHED. 14.3.2.4 COMMUNICATING (ESTABLISHED Sub-State) — This is the ESTABLISHED sub-state where all session communications are handled."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States\n\nContent: 14.3.2.5 MONITORING (ESTABLISHED Sub-State) — This state provides a watchdog mechanism to monitor status of the established session. 14.3.2.6 READY (COMMUNICATING Sub-State) — Initial state upon session established and COMMUNICATING state becomes active. Both the client and the equipment have been successfully authenticated without errors. The equipment is awaiting service requests in this state and can report relevant events to authenticated clients. Except for the services defined in this specification, the services allowed or events reported are dependent on the specifications that defined them. 14.3.2.7 SESSION MONITOR (MONITORING Sub-State) — Initial state upon entry to ESTABLISHED state and when MONITORING becomes active. The equipment shall periodically check the active status of the session by sending ping messages to the client. See Section 15.1.1for details of the SessionPing message. A ping message is sent upon first entry to the state. When resuming persistent sessions during equipment startup, the"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States (Part 3)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States\n\nContent: ping message tells client of each persistent session that the equipment is now online. The interval at which the next ping message is sent, and the number of attempts to be made before closing a session shall be configurable, and must include a way to disable periodic pings (such as by using a delay interval of zero). If the client does not respond after the configured number of pings, the equipment shall terminate the session automatically. The default number of ping attempts shall be set to 3. 14.3.2.8 CLOSING — Session is being terminated either at request of client, security admin, or equipment initiated due to errors. Session context are cleared including established session identifier. A SessionClosed (section 15.1.3) notification is sent to client (if possible) on transition to this state. 14.3.2.9 FROZEN — A persistent session is put on hold as the equipment is powered down or in a state where it is not able to communicate. A SessionFrozen (section 15.1.2) notificatication is sent to client (if"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States (Part 4)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.2 Session States\n\nContent: possible) on transition to this state. When resuming a persistent session, behavior is governed by re-entry to the ESTABLISHED state and its sub-states."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 14.3.3 Session State Transitions",
    "content": "Table 34 Session State Transitions Table"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 15  Client Interface",
    "content": "15.1 This section specifies the interface that the equipment shall use to communicate security related information and requests/events to authenticated clients with established sessions.  \nFigure 17 Session Client Interface  \nTable 35 Session Client Operations  \n15.1.1 SessionPing — Upon receiving this request, the client shall reply with its id.  The client id returned must be the same one used by the client during the authentication phase.  See the Session Monitoring state defined in Section 14.3.2.7, regarding behavior of established authenticated sessions in the event of ping timeouts."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 36 SessionPing Parameter Definitions",
    "content": "15.1.2 SessionFrozen — This is a notification message sent by the equipment to notify clients with persistent sessions that communications will be put on hold, either due to communications disabled or equipment shutdown. From the client’s perspective, this means session pings will not be answered by the equipment and no notifications will be sent by the equipment until a ping message is received from the equipment indicating that the session is again resumed.  The equipment shall send one notification for each persistent session.  See session state transitions (Table 31) into and out of frozen state for respective behavior on freezing and resuming sessions.  \n15.1.2.1 There are no parameters associated with this service.  \n15.1.3 SessionClosed — This is a notification message sent by the equipment to notify the client that this session is being terminated, and is sent whenever a session is closed."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 16.1 Fundamental Requirements (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 16.1 Fundamental Requirements\n\nContent: 16.1.1 This specification defines the standard services and mechanisms to support authentication of clients to the equipment for session establishment and access control and to support credential and privilege/policy administrations. Not all capabilities need to be supported for a particular implementation. The following constitutes fundamental security requirements that all compliant implementations must support: Authentication services and state model, Section 10 Authorization, Section 11 Session and ACL administration, Section 11.2.10.3 Authenticated session management, Sections 13 and 15 All communication and authenticated session state models, Section 14 16.2 Optional Capabilities 16.2.1 The following capabilities defined in this standard can optionally be implemented depending on the needs of the equipment: Equipment console administration interface, Section 12.4 NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 16.1 Fundamental Requirements (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 16.1 Fundamental Requirements\n\nContent: application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer's instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA)",
    "content": "This provisional specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee. Current edition approved by the North American Regional Standards Committee on December 10, 2005.  Initially available at www.semi.org February 2005; to be published March 2005."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # Table of Contents",
    "content": "1 Purpose 4\n1.1 Specification Purpose ..\n2 Scope ... .4\n2.1 Specification Scope. 4\n3 Limitations.. 4\n3.1 Provisional Specification.. .4\n4 Referenced Standards . 4\n4.1 SEMI Standards... 4\n4.2 OMG Standards... 4\n4.3 W3C Standards...\n4.4 Other Standards .. 5\n5 Terminology .\n5.1 Abbreviations and Acronyms.....\n5.2 Definitions .... .5\n6 Conventions.. 6\n6.1 Translating UML to XML Schema.. .6\n6.2 Documenting XML Schema and WSDL Files ... 7\n6.3 Documenting XML Schema with Diagrams..\n6.4 XML Schema Sample . .8\n6.5 Translating UML to WSDL.. .9\n7 SEMI E132 Authentication Mapping to SSL . 10\n7.1 SSL Overview.. 10\n7.2 Credentials and Digital Certificates... ..11\n7.3 Enabling/Disabling SSL Authentication . 13\n8 Mapping of SEMI E132 UML to XML Schema and WSDL .13\n8.1 WSDL Organization.. ..13\n8.2 SecurityAdmin Interface ... .14\n8.3 SessionManager Interface . .33\n8.4 SessionClient Interface . .41"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Figures (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Figures\n\nContent: Figure 1 XML Schema Example Diagram .8 Figure 2 XML for Sample . .9 Figure 3 SSL Basic Handshake Flow . .11 Figure 4 SEMI E132.1 Security Credentials.. ..12 Figure 5 XML Schema and WSDL File Organization ..14 Figure 6 XML Schema and WSDL files for SEMI E132 . ..14 Figure 7 Mapping the SecurityAdmin interface to a WSDL portType.. ..15 Figure 8 Sample SecurityAdmin WSDL Service definition. ....16 Figure 9 UnauthorizedOperationType XML Schema Type . ...17 Figure 10 E132Header XML Schema Element . ..18 Figure 11 GetDefinedPrivilegesRequest XML Schema Element.... ..19 Figure 12 GetDefinedPrivilegesResponse XML Schema Element .. ..19 Figure 13 DefinedPrivilegesType XML Schema Type ... .19 Figure 14 GetDefinedPrivilegesErrorType XML Schema Type . .20 Figure 15 GetACLRequest XML Schema Element.... 21 Figure 16 GetACLResponse XML Schema Element ..... .21 Figure 17 ACLEntrySelectorType XML Schema Type .22 Figure 18 PrivilegeAssignment XML Schema Type..... 22 Figure 19 RoleAssignment XML"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Figures (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Figures\n\nContent: Schema Type... .23 Figure 20 AddACLEntryRequest XML Schema Element... .24 Figure 21 AddACLEntryResponse XML Schema Element . .25 Figure 22 UnrecognizedPrivilegeType XML Schema Type .. .25 Figure 23 DeleteACLEntryRequest XML Schema Element . .26 Figure 24 DeleteACLEntryResponse XML Schema Element.. .27 Figure 25 GetActiveSessionsRequest XML Schema Element ... .28 Figure 26 GetActiveSessionsResponse XML Schema Element.. .28 Figure 27 ActiveSession XML Schema Type . .29 Figure 28 SetMaxSessionsRequest XML Schema Element .... .30 Figure 29 SetMaxSessionsResponse XML Schema Element... .31 Figure 30 GetMaxSessionsRequest XML Schema Element.. .32 Figure 31 GetMaxSessionsResponse XML Schema Element ... .32 Figure 32 Sample SessionManager WSDL Service Definition . .35 Figure 33 EstablishSessionRequest XML Schema Element.. .35 Figure 34 EstablishSessionResponse XML Schema Element .. .36 Figure 35 PersistSessionRequest XML Schema Element.. ..37 Figure 36 PersistSessionResponse XML Schema"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Figures (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Figures\n\nContent: Element .. .37 Figure 37 SessionPingRequest XML Schema Element.... .38 Figure 38 SessionPingResponse XML Schema Element . .39 Figure 39 CloseSessionRequest XML Schema Type .. ..40 Figure 40 CloseSessionResponse XML Schema Element.. ...40 Figure 41 E132HashHeader Schema Element. ..41 Figure 42 Sample SessionClient WSDL Service definition . ..43 Figure 43 SessionFrozenNotification XML Schema Element.. ...45 Figure 44 SessionClosedNotification XML Schema Element.. 46"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables\n\nContent: Table 1 Example Translation Table. .6 Table 2 Example Translation Table for Operation Input/Output Arguments . 7 Table 3 Example Schema/WSDL Document Description Table.. 7 Table 4 Altova XMLSPY Schema Diagram Symbols. .7 Table 5 Example Interface WSDL Port Type Table.. .9 Table 6 Example Interface WSDL Binding Table... .9 Table 7 Example Operation Binding Table .. ..10 Table 8 Example PortType Operation Table .. 10 Table 9 XML Schema.. ..14 Table 10 SecurityAdmin PortType Definitions ... ..15 Table 11 SecurityAdmin Binding Definitions .... ..15 Table 12 SecurityAdmin Port Type.. ..16 Table 13 SecurityAdmin Binding.. ..16 Table 14 SEMI E132 Error Codes. ..17 Table 15 Translation Table for UnauthorizedOperationError Class..... ..17 Table 16 Translation Table for GetDefinedPrivileges Output Parameters .. 19 Table 17 Translation Table for DefinedPrivilege Class..... ..19 Table 18 GetDefinedPrivileges Messages ..20 Table 19 GetDefinedPrivileges PortType Operation... .20 Table 20"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables\n\nContent: GetDefinedPrivileges Operation Binding.. .20 Table 21 Translation Table for GetACL Output Parameters.. ..21 Table 22 Translation Table for PrivilegeAssignment Class .... 22 Table 23 Translation Table for RoleAssignment Class . 23 Table 24 Translation Table for Subject Class. ..23 Table 25 Translation Table for Privilege Class .. 23 Table 26 GetACL Messages 24 Table 27 GetACL PortType Operation.. 24 Table 28 GetACL Operation Binding... Table 29 Translation Table for AddACLEntry Input Parameters. 24 Table 30 Translation Table for AddACLEntry Output Parameters ... 25 Table 31 Translation Table for UnrecognizedPrivilegeError Class..... 5 Table 32 AddACLEntry Messages. 26 Table 33 AddACLEntry PortType Operation.. 26 Table 34 AddACLEntry Operation Binding.. 26 Table 35 Translation Table for DeleteACLEntry Input Parameters .... 26 Table 36 Translation Table for DeleteACLEntry Output Parameters..... .27 Table 37 DeleteACLEntry Messages . .27 Table 38 DeleteACLEntry PortType Operation .."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables\n\nContent: 27 Table 39 DeleteACLEntry Operation Binding .... 27 Table 40 Translation Table for GetActiveSessions Output Parameters.. .28 Table 41 Translation Table for Subject Class.. 29 Table 42 Translation Table for HTTPEndPoint Class.. 29 Table 43 GetActiveSessions Messages.. 29 Table 44 GetActiveSessions PortType Operation . .30 Table 45 GetActiveSessions Operation Binding ... .30 Table 46 Translation Table for SetMaxSessions Input Parameters .30 Table 47 Translation Table for SetMaxSessions Output Parameters.. .30 Table 48 SetMaxSessions Messages... ..31 Table 49 SetMaxSessions PortType Operation .. ..31 Table 50 SetMaxSessions Operation Binding ... .31 Table 51 Translation Table for GetMaxSessions Output Parameters. .32 Table 52 GetMaxSessions Messages.. .32 Table 53 GetMaxSessions PortType Operation... .33 Table 54 GetMaxSessions Operation Binding.... .33 Table 55 XML Schema... .33 Table 56 SessionManager PortType Definitions . .33 Table 57 SessionManager Binding Definitions ... .34"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables (Part 4)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables\n\nContent: Table 58 SessionManager Port Type.. .34 Table 59 SessionManager Binding... ..34 Table 60 Translation Table for EstablishSession Input Parameters.. 35 Table 61 Translation Table for EstablishSession Output Parameters. ..36 Table 62 EstablishSession Messages.. ..36 Table 63 EstablishSession PortType Operation. ..36 Table 64 EstablishSession Operation Binding... ..36 Table 65 Translation Table for PersistSession Input Parameters... ..37 Table 66 Translation Table for PersistSession Output Parameters... ..37 Table 67 PersistSession Messages. ..38 Table 68 PersistSession PortType Operation... ..38 Table 69 PersistSession Operation Binding..... ..38 Table 70 Translation Table for SessionPing Output Parameters ... ..39 Table 71 SessionPing Messages ... ..39 Table 72 SessionPing PortType Operation... ..39 Table 73 SessionPing Operation Binding..... ..39 Table 74 Translation Table for CloseSession Input Parameters .... ..40 Table 75 Translation Table for CloseSession Output Parameters ..."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables (Part 5)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # List of Tables\n\nContent: ..40 Table 76 CloseSession Messages . ..40 Table 77 CloseSession PortType Operation .. 41 Table 78 CloseSession Operation Binding .... 41 Table 79 XML Schema.. .41 Table 80 SessionClient PortType Definitions.. .42 Table 81 SessionClient Binding Definitions. ..42 Table 82 SessionClient Port Type . .42 Table 83 SessionClient Binding . .43 Table 84 Translation Table for SessionPing Output Parameters .. ...43 Table 85 SessionPing Messages . ..44 Table 86 SessionPing PortType Operation.. .44 Table 87 SessionPing Operation Binding. ...44 Table 88 SessionFrozen Messages . ..45 Table 89 SessionFrozen PortType Operation . ..45 Table 90 SessionFrozen Operation Binding ....45 Table 91 Translation Table for SessionClosed Input Parameters . ....46 Table 92 SessionClosed Messages . ..46 Table 93 SessionClosed PortType Operation .. ..46 Table 94 SessionClosed Operation Binding .. .46"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 1.1  Specification Purpose",
    "content": "1.1.1  The purpose of this specification is to provide an authentication implementation using SSL and a WSDL/SOAP implementation and XML Schema that corresponds to the UML model for Equipment Client Authentication and Authorization as defined by SEMI E132."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 2.1  Specification Scope",
    "content": "2.1.1  The scope of this document is the faithful representation of the ECA model in an XML schema and corresponding WSDL services.  It will not add new domain information or concepts to the model.  The only additions made are those needed to render useful WSDL or XML Schema.  \nNOTICE: This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 3.1  Provisional Specification",
    "content": "3.1.1  This specification is provisional pending the approval of SEMI E138.  This specification relies on XML Schema types defined in Core Components, and cannot be fully implemented without these types.  Finalization of that specification is a condition for the removal of the provisional status of this document."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 4  Referenced Standards",
    "content": "4.1  SEMI Standards  \nSEMI E121 — Guide for Style & Usage of XML for Semiconductor Manufacturing Applications  \nSEMI E132 — Specification for Equipment Client Authentication and Authorization  \n4.2  OMG Standards1  \nUnified Modeling Language (UML) Specification, Version 1.4, OMG Specification 01-09-67, (http://www.omg.org/technology/documents/modeling_spec_catalog.htm)."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 4.3  W3C Standards2 (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 4.3  W3C Standards2\n\nContent: Extensible Markup Language (XML) 1.0 (Second Edition) W3C, 6 October 2000 (http://www.w3.org/TR/2000/REC-xml-20001006/). Namespaces in XML — W3C, 14 January 1999 (http://www.w3.org/TR/1999/REC-xml-names-19990114/). XML Schema Part 0: Primer — W3C, 2 May 2001 (http://www.w3.org/TR/xmlschema-0/). XML Schema Part 1: Structures — W3C, 2 May 2001 (http://www.w3.org/TR/xmlschema-1/). XML Schema Part 2: Datatypes — W3C, 2 May 2001 (http://www.w3.org/TR/xmlschema-2/). XML Path Language (Xpath) — W3C, 16 November 1999 (http://www.w3.org/TR/xpath/). Web Services Description Language (WSDL) 1.1 — W3C Note, (http://www.w3.org/TR/wsdl) Simple Object Access Protocol (SOAP) 1.1 — W3C Note, (http://www.w3.org/TR/2000/NOTE-SOAP-20000508/) 4.4 Other Standards Secure Sockets Layer (SSL) Protocol 3.0 (available from http://wp.netscape.com/eng/ssl3/draft302.txt) NIST FIPS PUB 180-1 — Secure Hash Algorithm (SHA-1) (http://csrc.nist.gov/publications/fips/fips180-1/fip180- 1.pdf) Web Services"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 4.3  W3C Standards2 (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 4.3  W3C Standards2\n\nContent: Interoperability (WS-I): Basic Profile Version 1.0a (http://www.ws-i.org/Profiles/Basic/2003- 08/BasicProfile-1.0a.html) Internet Engineering Task Force (IETF) RFC 2459 — Internet X.509 Public Key Infrastructure Certificate and CRL Profile (http://www.ietf.org/rfc/rfc2459.txt) PKCS #12: Personal Information Exchange Syntax Standard, version 1.0 (available from http://www.rsasecurity.com/rsalabs/pkcs/pkcs-12/) Universal Unique Identifier (UUID) — ISO/IEC 11578:1996 Information technology – Open Systems Interconnection – Remote Procedure Call (http://www.iso.ch/cate/d2229.html) NOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 5  Terminology",
    "content": "5.1  Abbreviations and Acronyms  \n5.1.1  HTTP — Hyper Text Transport Protocol  \n5.1.2  SHA — Secure Hash Algorithm  \n5.1.3  SOAP — Simple Object Access Protocol  \n5.1.4  SSL — Secure Sockets Layer  \n5.1.5  UML — Unified Modeling Language  \n5.1.6  W3C — World Wide Web Consortium  \n5.1.7  WSDL — Web Service Description Language  \n5.1.8  XML — eXtensible Markup Language  \n5.2  Definitions  \n5.2.1  UML (Unified Modeling Language) — a notation for representing object-oriented designs and views created by Booch, Rumbaugh, and Jacobson in order to merge their three popular notations plus aspects of other existing notations into a single object-oriented notation intended to be usable by all.  \n5.2.2  XML (eXtensible Markup Language) — a markup language used for representing data rich with context and content in documents and in communications.  XML is an extension of SGML, a document-oriented markup language.  It was created by W3C for use on the Internet."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6  Conventions (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6  Conventions\n\nContent: 6.1 Translating UML to XML Schema 6.1.1 The reader is expected to have a working knowledge of the UML, XML, and Schema specifications (See ¶¶4.2 and 4.3). This document does not provide tutorial information on these subjects. 6.1.2 This document follows the guidelines for XML as outlined in SEMI E121. 6.1.3 Some of the key guidelines followed in this document are summarized here: • Attributes of UML classes are generally represented as XML attributes, to improve efficiency in transferring metadata descriptions from the equipment. Exceptions to this convention are UML attributes that correspond to data structures or other constructs that cannot be represented as XML attributes, or may include text values that may need to include non-parsed character data (CDATA). Composition associations are mapped to a single XML element (or multiple such elements if the specified multiplicity is greater than 1). Aggregations are modeled as contained elements or arrays of references to one or"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6  Conventions (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6  Conventions\n\nContent: more unique attributes of the target type. • Inheritance is modeled using complexType extension. In cases where a reference to an abstract base class occurs in the UML model, a choice compositor for each of the possible derived types is used in order to restrict instance documents from including arbitrary extension through type substitution. 6.1.4 The translation of a UML class to XML Schema types is documented using a table format illustrated by Table 1. Operations defined for a UML class are translated into WSDL operations. 6.1.5 Translation Table Column Header Description • Attribute or Role Name — If an attribute, the name of the attribute is placed here. If an association (including aggregation or composition), the role name from the UML diagram is placed here. Compositions are often not assigned roll names. In that case “none” is placed here. UML Name/Type — If an attribute, the data type of the UML attribute is place here. If an association, the type of association is"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6  Conventions (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6  Conventions\n\nContent: placed here. The possible types are “Composition”, “Aggregation”, or the basic “Association”. UML defines these three types of association. • XML Element or Attribute — Lists the type of XML construct used to represent the UML attribute or association. XML Name/Type — Provides the name and data type of the resulting XML construct. The type may be a builtin type (for example, xs:string), or a named type defined within the XML Schema. Table 1 Example Translation Table"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.1.6  Translating Operations to XML Schema",
    "content": "6.1.6.1  The translation of an operation defined for UML interface classes to XML Schema types is documented using a table format illustrated in Table 2.  One row is provided for each possible input/output argument for the operation being described.  \nTable 2  Example Translation Table for Operation Input/Output Arguments"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.2  Documenting XML Schema and WSDL Files",
    "content": "6.2.1  Associated with this document are XML Schema and WSDL files that are core components of the specification.  Each such document is described using a table format illustrated by Table 3."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.3  Documenting XML Schema with Diagrams3 (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.3  Documenting XML Schema with Diagrams3\n\nContent: 6.3.1 This document provides graphical representations of the included XML. Although no standard graphical notation for XML could be found, various XML tools have their own notation. This document will use the notation provided by XMLSpy from Altova Corporation. Figure 1 shows a sample XML diagram that will be used to provide a basis for explanation of the XML graphical notation used in the rest of the document. 6.3.2 In the diagram, rectangular boxes represent XML elements. Ownership or containment is read from right to left in the diagrams. In the sample diagram, ParentType contains Child1, Child2, Child 3, and Child 4. In turn, Child2 contains Child2a, Child2b, and Child2c. The additional symbols (8-sided boxes) represent sequences or choices. See Table 4 for an explanation of these symbols. Table 4 Altova XMLSPY Schema Diagram Symbols 6.3.3 A graphic using a solid line is a required element; using a dashed line represents an optional element"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.3  Documenting XML Schema with Diagrams3 (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.3  Documenting XML Schema with Diagrams3\n\nContent: Numbers or ranges in the lower right hand corner represent cardinality. The default cardinality is one. 6.3.4 To simplify a diagram or help focus on a particular aspect, detail may be hidden. The 8-sided symbols have a small square on the right end. If a minus sign “-” is in the box, then all detail is shown. If the box contains a plus sign $\" \\mathrm { \\Phi } _ { + } , \"$ , then all detail to the right of that symbol is hidden. The example has no hidden detail. 6.3.5 The yellow (or grey if printed in monochrome) boxes indicate the use of other defined types. So, Child4 is of type “Child4Type”. Child4Type defines Child4a and Child4b. This detail may be hidden in the diagram. Object oriented inheritance is typically represented in XML as type extension. In Figure 1, ParentType extends Child1and2Type by adding a sequence that includes Child3 and Child4. 6.3.6 Reading Figure 1 would yield the following additional information: 1. Child1and2Type is an"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.3  Documenting XML Schema with Diagrams3 (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.3  Documenting XML Schema with Diagrams3\n\nContent: ordered sequence of two items: Child2 and Child1. 2. Child1 contains an optional ordered sequence of Child1a, one or more Child1b, and (optionally) Child1c. 3. Child2 contains a choice of one or two of the following: Child2a, Child2b, and Child2c. 4. Child3 contains an unordered sequence of Child3a and Child3b."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.4  XML Schema Sample (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.4  XML Schema Sample\n\nContent: 6.4.1 The sample XML Schema for the example shown in Figure 1, is presented below. Refer to the XML documentation referenced in $\\ P 1 4 . 3$ for a complete description of the syntax and semantics of XML Schema. <xs:element name $\\ c =$ \"Parent\"> <xs:complexType> <xs:sequence> <xs:element name $\\ c =$ \"Child1\"/> <xs:complexType> <xs:sequence minOccurs $\\ c =$ \"0\"> <xs:element name $\\ c =$ \"Child1a\"/> <xs:element name $\\ c =$ \"Child1b\" maxOccurs $\\ c =$ \"unbounded\"/> <xs:element name $\\ c =$ \"Child1c\" minOccurs $\\ c =$ \"0\"/> </xs:sequence> </xs:complexType> </xs:element> <xs:element name $\\ c =$ \"Child2\"> <xs:complexType> <xs:choice maxOccurs $\\ c =$ \"2\"> <xs:element name $\\ c =$ \"Child2a\"/> <xs:element name $\\ c =$ \"Child2b\"/> <xs:element name $\\mathbf { \\lambda } = \\mathbf { \\vec { \\lambda } }$ \"Child2c\"/> </xs:choice> </xs:complexType> </xs:element> <xs:element name $\\ c =$ \"Child3\"> <xs:complexType> <xs:all> <xs:element name $\\ c =$ \"Child3a\"/> <xs:element name $= ^ {"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.4  XML Schema Sample (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.4  XML Schema Sample\n\nContent: \\prime }$ \"Child3b\"/> </xs:all> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> </xs:element>"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 6.5  Translating UML to WSDL",
    "content": "6.5.1  In general, UML interface classes defined in the abstract specification are translated into WSDL as portType definitions, and each portType definition has a corresponding WSDL binding definition.  The following tables show the convention used for documenting the WSDL port type and binding definitions for a given UML interface class."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # Table 6  Example Interface WSDL Binding Table",
    "content": "6.5.2  Each operation defined for a given UML interface class has a corresponding operation definition and binding.\nOperations are described using a table format illustrated by Table 7 and Table 8.  \nTable 7  Example Operation Binding Table  \nTable 8  Example PortType Operation Table"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.1  SSL Overview",
    "content": "7.1.1  This section describes the use of SSL security protocol and supporting technology to implement the authentication scheme described in SEMI E132.  SSL is application protocol independent and transparently supports any higher layered transport protocols such as SOAP over HTTP.  \n7.1.2  Figure 3 presents the basic message flow (handshake) of SSL to establish a secure connection and how it maps to the SEMI E132 authentication messages, please refer to the SSL documentation referenced in $\\ P 1 4 . 4$ for complete specification on SSL.  This specification defines several restrictions on the capabilities of SSL to the minimum necessary to support SEMI E132 authentication.  These restrictions are described in more detail in the following section."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.1.3  SEMI E132 Restrictions on SSL",
    "content": "7.1.3.1  X.509 v3 public key certificates as defined by RFC 2459 must be used to establish equipment and client identities, see X.509 documentation referenced in $\\ P 4 . 4$ for complete details of X.509 structure and content.  The certificate is sent when required during the SSL handshake.  \n7.1.3.2  Mutual authentication is required.  Equipment shall always send its certificate and request for the client’s certificate as part of the SSL handshake.  Correspondingly, client will send its own certificate and the certificate verify message to equipment to allow client authentication."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.1  Overview (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.1  Overview\n\nContent: 7.2.1.1 X.509 certificates shall be used to establish identities for equipment and application clients. The certificate is used by SSL for authentication and to establish secure connections between equipment and clients. An illustration of the SEMI E132.1 security credentials showing role of certificates and ACL is presented in Figure 4. As shown, an X.509 certificate binds an ID to a public key, managed by an agent called the CA described in following sections. An ACL Entry binds the ID to a set of authorizations, managed by the Security Admin. Authorization management, ACL Entry and Security Admin are as defined in SEMI E132, see Authorizations section. $7 . 2 . 1 . 2 \\ \\mathrm { C A }$ is the Certification Authority that issues certificates to equipment and application clients wishing to communicate over SSL. The authenticity of the certificate is verified by the CA signature within the certificate, in effect the CA is certifying the validity of the information contained in"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.1  Overview (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.1  Overview\n\nContent: the certificate, more importantly it certifies the binding between the entity identified in the certificate and its public key used for authentication purposes in SSL. For more information on certificate validation and signature verification, please see referenced X.509 v3 documentation in $\\ P 4 . 4$ . The CA may or may not be the same as the Security Admin as defined in SEMI E132, which manages access control permissions for application clients. Implementation and maintenance of both the CA and the Security Admin are the responsibility of the equipment user, including certificate issuance and security credentials management. Equipment suppliers shall not be required to provide CA or Security Admin implementations. 7.2.1.3 In this specification, only the common name (CN) attribute of the certificate’s subject distinguished name (DN) is required, this is represented as ID in Figure 4. The same ID must be used by the Security Admin when binding authorizations to a principal id in"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.1  Overview (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.1  Overview\n\nContent: an ACLEntry. In summary, SEMI E132 principals are identified by the common name (CN) attribute of the subject distinguished name field of the certificate issued to the principal. 7.2.1.4 Certificates issued by the CA for SEMI E132 shall be encoded in PKCS#12 format along with corresponding private keys. Equipment shall support PKCS#12 to decode certificate and any associated private key issued by the CA. There are no restrictions on the local encoding format of certificates. See PKCS#12 documentation referenced in $\\ P 1 4 . 4$ for complete details. The CA certificate will also be delivered in same format but without the private key. The CA certificate is used by SSL for certificate verification. 7.2.1.5 Certificates must minimally support signing capability if the KeyUsage extension field is present in the certificate, more specifically the digitalSignature bit must be asserted. Please see the X.509 v3 specification for more information on certificate profile."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.2  Establishing Equipment Credentials",
    "content": "7.2.2.1  Equipment must install both the CA’s public certificate and its own certificate along with the corresponding private key, the CA certificate to verify client certificates are from the same trusted CA.  Equipment is responsible for decoding the PKCS#12 encoded certificates and private key from CA to a format supported by its implementation.  \n7.2.2.2  An ACLEntry defining the Security Admin for the equipment must be added using the local equipment interface.  This shall be done at time of equipment install to allow remote administration of access permissions for the equipment."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.2.3  Establishing Application Credentials",
    "content": "7.2.3.1  Application clients wishing to establish SEMI E132 sessions with any equipment must first possess a valid certificate issued by the CA prior to any communications.  Equipment shall ensure SSL handshake terminates for any client that does not present a valid certificate issued by a trusted CA.  Similar to equipment certificates, all client certificates and corresponding private key from CA will be encoded in PKCS#12 format.  The CA certificate must also be installed by the application client to verify equipment certificate chain.  \n7.2.3.2  Each client must also have an ACLEntry defined on the equipment granting the appropriate privileges to support its functions prior to establishing SEMI E132 sessions with the equipment.  This can be done via the Security Admin or via the equipment console.  \n7.2.3.3  Equipment shall reject all SEMI E132 establish session requests if client does not have an ACLEntry defined, even if client possesses a valid certificate issued by trusted CA."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.3  Enabling/Disabling SSL Authentication (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.3  Enabling/Disabling SSL Authentication\n\nContent: 7.3.1 There may be some integration, development, and/or test environments in which it is not practical or feasible to install equipment and/or client certificates in order to communicate with the equipment. As a practical consideration for such environments only, the equipment shall support the ability of the user to enable or disable SSL authentication at the equipment. 7.3.2 If enabled, all SEMI E132-based communication with the equipment shall take place via mutuallyauthenticated SSL as described in $\\ P 7 . 1$ . 7.3.3 If disabled, all SEMI E132-based communication with the equipment shall take place via the normal, unauthenticated HTTP transport. While disabled, requests shall still follow the normal authorization verifications using the client ID provided in the FROM field of the SEMI E132 header; however, because requests are not authenticated there can be no guarantee that the requesting application is authentic. Users should be aware that"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.3  Enabling/Disabling SSL Authentication (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.3  Enabling/Disabling SSL Authentication\n\nContent: disabling SSL authentication provides unrestricted access to all SEMI E132 equipment operations for any application (factory authorized or not) with network access to the equipment. 7.3.4 Equipment shall provide a configuration option to allow switching between SSL and non-SSL communications. Only one such communication port shall be active at any time. During a configuration change, it is the responsibility of the equipment user to close existing sessions prior to the change, as the active port will no longer be available for requests following the change, and clients will not be notified of the change by the equipment. 7.3.5 After a configuration change, any pre-existing persistent sessions shall remain active as defined in the SEMI E132 Session State Model. Users should be aware that all requests made by those sessions after the change must take place on the new port. The equipment is not required to retain non-persistent sessions in the active"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.3  Enabling/Disabling SSL Authentication (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 7.3  Enabling/Disabling SSL Authentication\n\nContent: state following a configuration change. If an equipment reset is required to change this configuration, then persistent sessions shall be resumed, and non-persistent sessions shall be closed as for any equipment shutdown as defined in the SEMI E132 Session State Model."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.1  WSDL Organization",
    "content": "8.1.1  Each interface definition in SEMI E132 is mapped to a WSDL portType and binding definition.  WSDL portType definitions are named after the interface and its operations as they appear in SEMI E132.  WSDL binding definitions for each portType are used to specify the SOAP 1.1 envelope contents for each operation, and to define the corresponding XML encoding styles and HTTP header usage.  All SEMI E132 WSDL interfaces use document/literal encoding, with the complete SOAP header and body contents defined in XML Schema file(s) via global element definitions.  \n8.1.2  Figure 5 shows the relationship between the WSDL binding and portType definitions and the XML Schema types used for each interface.  The portType definition imports XML Schema type definitions used in each operation via the XML Schema “import” statement.  The WSDL binding definition imports the portType definition via the WSDL “import” statement.  \n8.1.3  Figure 6 shows the specific XML Schema and WSDL files defined for SEMI E132."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.1  Establishing an ACLEntry for the Security Admin",
    "content": "8.2.1.1  An ACLEntry defining the Security Admin shall be added via the local equipment interface at time of equipment install.  The subject id of the ACLEntry must match the common name (CN) attribute of the subject distinguished name of the certificate issued to the Security Admin, see $\\ P 7 . 2 . 1 . 3$ .  The Security Admin ACLEntry must grant the reserved privilege “urn:semi-org.auth:securityAdminPrivileges” as defined by SEMI E132.  \n8.2.1.2  Exactly one ACLEntry shall exist for the Security Admin."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.2  XML Schema and WSDL Files",
    "content": "8.2.2.1  The XML Schema and WSDL defined by this specification for the SecurityAdmin interface is contained in the following documents:  \nTable 9  XML Schema  \nTable 10  SecurityAdmin PortType Definitions  \nTable 11  SecurityAdmin Binding Definitions  \n8.2.2.2  These documents are a part of this specification and should accompany this document.  The contents of these documents constitute the core part of this specification."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.3  WSDL Port Type Overview",
    "content": "8.2.3.1  The SecurityAdmin WSDL portType definition organizes the SEMI E132.1 XML Schema data types into a collection of named operations with inputs and outputs that correspond to the UML operations that are defined for the SecurityAdmin interface in SEMI E132.  The WSDL portType itself is named after the SEMI E132 interface, and each WSDL portType operation is named after the corresponding UML operation defined for the interface. Each WSDL operation consists of two WSDL message definitions corresponding to the input and output (request and response) for the UML operation defined in SEMI E132.  Figure 7 illustrates the relationship between the SEMI E132 UML interface and the WSDL portType definition; Table 12 describes this in tabular form.  The WSDL message and operation definitions are described in ${ \\ P } { \\ P } 8 . 2 . 9$ through 8.2.15.  \nMapping the SecurityAdmin interface to a WSDL portType  \nTable 12  SecurityAdmin Port Type"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.4  WSDL Binding Overview",
    "content": "8.2.4.1  The WSDL SecurityAdmin binding definition specifies a message and transport protocol to use for a given portType (SOAP and HTTP for SEMI E132.1), the interface style used (document style for SEMI E132.1).  These settings are shown in Table 13.  For each WSDL portType operation, the binding defines any SOAP headers used and whether or not they are required, the HTTP SOAPAction header value to use for that operation, and the XML encoding to use (literal for SEMI E132.1).  The binding definitions for each portType operation are described in ¶¶8.2.9 through 8.2.15.  \nTable 13  SecurityAdmin Binding"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.5  WSDL Service Overview",
    "content": "8.2.5.1  This specification does not provide a WSDL service definition.  WSDL service definitions provide one way to define and locate the endpoint(s) at which a given interface can be accessed by a client.  Such information cannot be determined until the equipment has been installed on a factory network, and therefore is out of scope for this specification.  Users are responsible for defining the mechanisms by which clients locate SEMI E132 equipment services in the factory.  A sample SecurityAdmin service definition is provided in Figure 8 for reference only.  \nFigure 8 Sample SecurityAdmin WSDL Service definition"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.1  Common Error (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.1  Common Error\n\nContent: 8.2.6.1.1 All errors returned by SEMI E132 operations uses the Error type defined in SEMI E138. The common error is in addition to any custom error construct that may be defined by each operation to provide additional context relevant to the operation and a specific error. The common error type defines 2 attributes, “source” and “code”; see Common Components Specification for more detailed information. All E132 defined errors shall set the “source” attribute to “urn:semi-org:E132”. The error codes for SEMI E132 defined errors are provided in Table 14. Description is a textual description of the error. The Extension element allows equipment suppliers to provide more detailed information regarding the error using XML content defined by the supplier. 8.2.6.1.2 Table 14 below provides a mapping of the SEMI E132 defined errors to its common error code. The SEMI E132 Error column matches the error description of each defined error in the SEMI E132 specification. Errors during"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.1  Common Error (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.1  Common Error\n\nContent: the Authentication message exchange are as defined by the SSL authentication protocol. The SEMI E132 mapped error codes below are in addition to any common error codes defined in the Common Components Specification. Table 14 SEMI E132 Error Codes"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.2  Unauthorized Operation Error (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.2  Unauthorized Operation Error\n\nContent: 8.2.6.2.1.1 Many operations may return an operation not authorized error (common error code 6000). For this error, SEMI E132 defines a specific UnauthorizedOperationError structure to provide additional context information such as list of all the privileges that grant authorization for the requested operation. 8.2.6.2.1.2 The UnauthorizedOperationError class is mapped to the XML UnauthorizedOperationType. Table 15 shows how the attributes and associations of UnauthorizedOperationError class are mapped to XML. Figure 9 shows the XML Schema diagram. Table 15 Translation Table for UnauthorizedOperationError Class 8.2.7.1 The session identifier is required to be present in all requests to the equipment over an SEMI E132 authenticated session. The session identifier is generated by the equipment during the Establish Session operation, and must be a UUID that is guaranteed unique across space and time, see documentation referenced in $\\ P 4 . 4$ for specific"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.2  Unauthorized Operation Error (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.2  Unauthorized Operation Error\n\nContent: details on syntax and format of a UUID. 8.2.7.2 In this specification, a header type is defined in the XML Schema file to carry the SEMI E132 session identifier within the SOAP header for SOAP messages defined for this interface. This provides the most transparent way of sending the session identifier without affecting the input/output parameters of the individual operations. Since SEMI E132 requires all requests to the equipment to be sent over SSL, the session identifier need not be encrypted and shall be included in the header unmodified. Figure 10 shows the XML schema diagram for the E132Header schema element. The session identifier is modeled as the SessionID of XML type xsd:string in the E132Header. 8.2.7.3 The WSDL message “E132HeaderMessage” defines the message used in the SOAP header. It maps to the schema element E132Header as described above, see definitions of “E132HeaderMessage” in SEMI E132- SecurityAdmin-PortType.wsdl. 8.2.7.4 Since SEMI E132"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.2  Unauthorized Operation Error (Part 3)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.6.2  Unauthorized Operation Error\n\nContent: does not require outgoing equipment messages to be sent over SSL, the session identifier must be masked to avoid sending in plaintext. See $\\ P 8 . 4$ of SessionClient interface regarding handling and encoding of session identifier for outgoing equipment messages."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.8  From/To Header Fields",
    "content": "8.2.8.1  Each message over SEMI E132 must also provide the originating source and intended destination using the From/To fields of the E132Header, as shown in Figure 10.  The “From” element identifies the originator of the message, and the “To” element identifies the intended recipient of the message, both of type xsd:string.  In this specification, the ID of the principals that established the SEMI E132 session shall be used for purposes of identifying message source and destination.  Although this information can be extracted based on the session identifier, it is desired that the equipment and client be identified explicitly in each message."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.1  XML Schema Types",
    "content": "8.2.9.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the GetDefinedPrivileges operation.  Per WSDL convention described, a request and response message is defined for the operation corresponding to the input and output messages.  A corresponding schema element and type is defined for the request and response message containing the input and output parameters of the defined operation respectively."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.1.2  GetDefinedPrivileges Request",
    "content": "8.2.9.1.2.1  The service request is mapped to the XML Schema element GetDefinedPrivilegesRequest which is of type GetDefinedPrivilegesRequestType.  There are no input parameters for this operation, thus the request schema element has no content."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.1.3  GetDefinedPrivileges Response",
    "content": "8.2.9.1.3.1  The service response is mapped to the XML Schema element GetDefinedPrivilegesResponse of type GetDefinedPrivilegesResponseType.  Table 16 shows how the output parameters are mapped to XML.  Errors for this operation are returned using the XML schema element Error of type GetDefinedPrivilegesErrorType described in ¶8.2.9.1.5.  The XML Schema diagram for the response element is shown in Figure 12."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.1.4  DefinedPrivilege Class",
    "content": "8.2.9.1.4.1  The DefinedPrivilege class is mapped to the XML DefinedPrivilegesType.  Table 17 shows how the attributes and associations of DefinedPrivilege class are mapped to XML.  Figure 13 shows the XML schema diagram.  \nTable 17  Translation Table for DefinedPrivilege Class  \n8.2.9.1.5.1  Errors for this operation are mapped to the XML Schema element Error of type GetDefinedPrivilegesErrorType.  Figure 14 shows the XML Schema diagram for the error type.  As shown, any error returned must contain the common error element as described in $\\ P [ 8 . 2 . 6 . 1$ .  In addition, if the error is an Operation not authorized error, the UnauthorizedOperationError must also be included providing additional context information as defined in SEMI E132.  The mapping for the UnauthorizedOperationError class is as described in $\\ P 1 8 . 2 . 6 . 2$ ."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.2  WSDL Message(s)",
    "content": "8.2.9.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “GetDefinedPrivilegesRequest Message”, and “GetDefinedPrivilegesResponseMessage” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 18."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.3  WSDL Operation",
    "content": "8.2.9.3.1  See the portType operation definition for “GetDefinedPrivileges” in E132-SecurityAdmin-PortType.wsdl.\nKey information is shown for convenience in Table 19."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.9.4  WSDL Operation Binding",
    "content": "8.2.9.4.1  See the operation binding for “GetDefinedPrivileges” in E132-SecurityAdmin-Binding.wsdl.  Key information is shown for convenience in Table 20."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1  XML Schema Types",
    "content": "8.2.10.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the GetACL operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.2  GetACL Request",
    "content": "8.2.10.1.2.1  The service request is mapped to the XML Schema element GetACLRequest which is of type GetACLRequestType.  There are no input parameters for this operation, thus the XML type is just an empty construct."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.3  GetACL Response",
    "content": "8.2.10.1.3.1  The service response is mapped to the XML Schema element GetACLResponse of type GetACLResponseType.  Table 21 shows how the output parameters are mapped to XML.  The XML Schema diagram for GetACLResponse is shown in Figure 16.  The ACL is defined as a sequence of one or more elements of type ACLEntrySelectorType corresponding to the SEMI E132 UML class ACLEntry.  Mapping for ACLEntry class is as described $\\ P 8 . 2 . 1 0 . 1 . 4$ .  Errors for this operation are returned using the XML Schema element Error of type GetACLErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P { 8 . 2 . 9 . 1 . 5 }$ .  \nTable 21  Translation Table for GetACL Output Parameters"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.4  ACLEntry Class",
    "content": "8.2.10.1.4.1  The ACLEntry class is mapped to the XML Schema type ACLEntryType.  ACLEntry is an abstract base class and there are no attributes or roles defined for this base class, the XML Schema type for ACLEntry is just a empty sequence.  Since there are only two derived classes of ACLEntry defined in SEMI E132, and this specification prohibits unrecognized extensions of the class, an ACLEntrySelector XML Schema type is defined which uses choice to select between the XML Schema types for the only 2 derived classes, PrivilegeAssignment and RoleAssignment.  The XML Schema diagram for ACLEntrySelectorType is shown in Figure 17.  Schema type mappings for PrivilegeAssignment and RoleAssignment classes are further described in subsequent sections."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.5  PrivilegeAssignment Class",
    "content": "8.2.10.1.5.1  The PrivilegeAssignment class is mapped to the XML PrivilegeAssignmentType.  Table 22 shows how the attributes and associations of PrivilegeAssignment class are mapped to XML.  As with the XML definition for the ACLEntry class, the XML SubjectSelectorType provides a choice between the XML types of the only 2 allowed derived classes of the Subject class, Principal and Role.  The XML mapping of Principal and Role classes are described further by the RoleAssignment class.  The XML Schema diagram for PrivilegeAssigmentType is shown in Figure 18.  PrivilegeAssignmentType extends ACLEntryType.  \nTable 22  Translation Table for PrivilegeAssignment Class"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.6  RoleAssignment Class",
    "content": "8.2.10.1.6.1  The RoleAssignment class is mapped to the XML RoleAssignmentType.  Table 23 shows how the attributes and associations of RoleAssignment class are mapped to XML.  The XML Schema diagram for RoleAssigmentType is shown in Figure 19.  RoleAssignmentType extends ACLEntryType.  \nTable 23  Translation Table for RoleAssignment Class"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.7  Subject Class",
    "content": "8.2.10.1.7.1  The Subject Class is another abstract base class and is mapped to the XML SubjectType."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.8  Role Class",
    "content": "8.2.10.1.8.1  The Role class is mapped to the XML RoleType.  RoleType extends SubjectType, with no additional attributes or roles defined."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.9  Principal Class",
    "content": "8.2.10.1.9.1  The Principal class is mapped to the XML PrincipalType.  PrincipalType extends SubjectType, with no additional attributes or roles defined."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.1.10  Privilege Class",
    "content": "8.2.10.1.10.1  The Privilege class is mapped to the XML PrivilegesType."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.2  WSDL Message(s)",
    "content": "8.2.10.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “GetACLRequestMessage”, and “GetACLResponseMessage” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 26.  \nTable 26  GetACL Messages"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.3  WSDL Operation",
    "content": "8.2.10.3.1  See the portType operation definition for “GetACL” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 27."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.10.4  WSDL Operation Binding",
    "content": "8.2.10.4.1  See the operation binding for “GetACL” in E132-SecurityAdmin-Binding.wsdl.  Key information is shown for convenience in Table 28."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.1  XML Schema Types",
    "content": "8.2.11.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the AddACLEntry operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.1.2  AddACLEntry Request",
    "content": "8.2.11.1.2.1  The service request is mapped to the XML schema element AddACLEntryRequest which is of type AddACLEntryRequestType.  Table 29 shows how the input parameters are mapped to XML.  The XML ACLEntryType is as described in $\\ P 1 8 . 2 . 1 0 . 1 . 4$ , under Schema Types for GetACL operation."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.1.3  AddACLEntry Response",
    "content": "8.2.11.1.3.1  The service response is mapped to the XML Schema element AddACLEntryResponse of type AddACLEntryResponseType.  Table 30 shows how the output parameters are mapped to XML.  The XML Schema diagram for AddACLEntryResponse is shown in Figure 21.  Errors for this operation are returned using the XML Schema element Error of type AddACLEntryErrorType, containing the common error element described in $\\ P [ 8 . 2 . 6 . 1$ . In addition, if the error is an operation not authorized error, the UnauthorizedOperationError element must also be provided, of type UnauthorizedOperationType corresponding to the UnauthorizedOperationError class defined in SEMI E132, UML mapping is as described in $\\ P [ 8 . 2 . 6 . 2$ .  If the error is an unrecognized privilege error, the UnrecognizedPrivilegeError element must also be provided, of type UnrecognizedPrivilegeType corresponding to the UnrecognizedPrivilegeError class, UML mapping for this class is described in $\\ P 8 . 2 . 1 1 . 1 . 4$ ."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.1.4  UnrecognizedPrivilegeError Class",
    "content": "8.2.11.1.4.1  The UnrecognizedPrivilegeError class is mapped to the XML UnrecognizedPrivilegeType.  Table 31 shows how the attributes and associations of UnrecognizedPrivilegeError class are mapped to XML.  The privileges provided represent the list of privileges in input arguments that are not recognized by the equipment.  Figure 22 shows the XML Schema diagram.  \nTable 31  Translation Table for UnrecognizedPrivilegeError Class"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.2  WSDL Message(s)",
    "content": "8.2.11.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “AddACLEntryRequestMessage”, and “AddACLEntryResponseMessage” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 32."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.3  WSDL Operation",
    "content": "8.2.11.3.1  See the portType operation definition for “AddACLEntry” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 33."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.11.4  WSDL Operation Binding",
    "content": "8.2.11.4.1  See the operation binding for “AddACLEntry” in E132-SecurityAdmin-Binding.wsdl.  Key information is shown for convenience in Table 34."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.12  DeleteACLEntry Operation",
    "content": "8.2.12.1  XML Schema Types  \n8.2.12.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the DeleteACLEntry operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.12.1.2  DeleteACLEntry Request",
    "content": "8.2.12.1.2.1  The service request is mapped to the XML Schema element DeleteACLEntryRequest which is of type DeleteACLEntryRequestType.  Table 35 shows how the input parameters are mapped to XML."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.12.1.3  DeleteACLEntry Response",
    "content": "8.2.12.1.3.1  The service response is mapped to the XML Schema element DeleteACLEntryResponse of type DeleteACLEntryResponse.  Table 36 shows how the output parameters are mapped to XML.  The XML Schema diagram for DeleteACLEntryResponse is shown in Figure 24.  Errors for this operation are returned using the XML Schema element Error of type GetACLErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P [ 8 . 2 . 9 . 1 . 5$ ."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.12.2  WSDL Message(s)",
    "content": "8.2.12.2.1  Three messages are defined for this operation corresponding to the E132Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “DeleteACLEntryRequestMessage”, and “DeleteACLEntryResponseMessage” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 37."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.12.3  WSDL Operation",
    "content": "8.2.12.3.1  See the portType operation definition for “DeleteACLEntry” in E132-SecurityAdmin-PortType.wsdl.\nKey information is shown for convenience in Table 38."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.12.4  WSDL Operation Binding",
    "content": "8.2.12.4.1  See the operation binding for “DeleteACLEntry” in E132-SecurityAdmin-Binding.wsdl. Key information is shown for convenience in Table 39."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13  GetActiveSessions Operation",
    "content": "8.2.13.1  XML Schema Types  \n8.2.13.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the GetActiveSessions operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.1.2  GetActiveSessions Request",
    "content": "8.2.13.1.2.1  The service request is mapped to the XML Schema element GetActiveSessionsRequest of type GetActiveSessionsRequestType.  There are no input parameters for this operation."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.1.3  GetActiveSessions Response",
    "content": "8.2.13.1.3.1  The service response is mapped to the XML Schema element GetActiveSessionsResponse of type GetActiveSessionsResponseType.  Table 40 shows how the output parameters are mapped to XML.  The XML Schema diagram for GetActiveSessionsResponse is shown in Figure 26.  The ActiveSession class is described in $\\ P 8 . 2 . 1 3 . 1 . 4$ . Errors for this operation are returned using the XML Schema element Error of type GetActiveSessionsErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P { 8 . 2 . 9 . 1 . 5 }$ .  \nTable 40  Translation Table for GetActiveSessions Output Parameters"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.1.4  ActiveSession Class",
    "content": "8.2.13.1.4.1  The ActiveSession class is mapped to the XML ActiveSessionType.  Table 41 shows how the attributes and associations of ActiveSession class are mapped to XML.  The XML Schema diagram is shown in Figure 27. The association with the EndPoint class is modeled as an XML element of type EndPointSelectorType, and currently has but one choice defined for allowed derived class, the HTTPEndPointType which contains just an URL.  \nTable 41  Translation Table for Subject Class"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.1.5  EndPoint Class",
    "content": "8.2.13.1.5.1  The EndPoint class is mapped to the XML EndPointType.  EndPoint class is an abstract base class and there are no attributes or roles defined for this class.  Associations with the EndPoint class are modeled as XML elements of type EndPointSelectorType, and currently has but one choice defined for allowed derived class, the HTTPEndPointType which contains just an URL."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.1.6  HTTPEndPoint Class",
    "content": "8.2.13.1.6.1  The HTTPEndPoint class is mapped to the XML HTTPEndPointType.  Table 42 shows how the attributes and associations of HTTPEndPoint class are mapped to XML.  HTTPEndPointType extends EndPointType."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.2  WSDL Message(s)",
    "content": "8.2.13.2.1  Three messages are defined for this operation corresponding to the E132Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “GetActiveSessionsRequestMessage”, and “GetActiveSessionsResponseMessage” in E132-1-V0305-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 43."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.3  WSDL Operation",
    "content": "8.2.13.3.1  See the portType operation definition for “GetActiveSessions” in E132-1-V0305-SecurityAdminPortType.wsdl.  Key information is shown for convenience in Table 44."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.13.4  WSDL Operation Binding",
    "content": "8.2.13.4.1  See the operation binding for “GetActiveSessions” in E132-1-V0305-SecurityAdmin-Binding.wsdl.  Key information is shown for convenience in Table 45."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.14.1  XML Schema Types",
    "content": "8.2.14.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the SetMaxSessions operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.14.1.2  SetMaxSessions Request",
    "content": "8.2.14.1.2.1  The service request is mapped to the XML Schema element SetMaxSessionsRequest of type SetMaxSessionsRequestType.  Table 46 shows how the input parameters are mapped to XML."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.14.1.3  SetMaxSessions Response",
    "content": "8.2.14.1.3.1  The service response is mapped to the XML Schema element SetMaxSessionsResponse of type SetMaxSessionsResponseType.  Table 47 shows how the output parameters are mapped to XML.  The XML Schema diagram for SetMaxSessionsResponse is shown in Figure 29.  Errors for this operation are returned using the XML Schema element Error of type SetMaxSessionsErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P [ 8 . 2 . 9 . 1 . 5$ .  \nTable 47  Translation Table for SetMaxSessions Output Parameters"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.14.2  WSDL Message(s)",
    "content": "8.2.14.2.1  Three messages are defined for this operation corresponding to the E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “SetMaxSessionsRequestMessage”, and “SetMaxSessionsResponseMessage” in E132-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 48."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.14.3  WSDL Operation",
    "content": "8.2.14.3.1  See the portType operation definition for “SetMaxSessions” in E132-SecurityAdmin-PortType.wsdl.\nKey information is shown for convenience in Table 49."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.14.4  WSDL Operation Binding",
    "content": "8.2.14.4.1  See the operation binding for “SetMaxSessions” in E132-SecurityAdmin-Binding.wsdl.  Key information is shown for convenience in Table 50."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.15.1  XML Schema Types",
    "content": "8.2.15.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the GetMaxSessions operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.15.1.2  GetMaxSessions Request",
    "content": "8.2.15.1.2.1  The service request is mapped to the XML Schema element GetMaxSessionsRequest of type GetMaxSessionsRequestType.  There are no input parameters for this operation."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.15.1.3  GetMaxSessions Response",
    "content": "8.2.15.1.3.1  The service response is mapped to the XML Schema element GetMaxSessionsResponse of type GetMaxSessionsResponseType.  Table 51 shows how the output parameters are mapped to XML.  The XML Schema diagram for GetMaxSessionsResponse is shown in Figure 31.  The MaxSessions and SessionCount output arguments are contained in the GetMaxSessionsResponseBodyType, this is to allow for better compatibility across WSDL compilers.  Errors for this operation are returned using the XML Schema element Error of type GetMaxSessionsErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P { 8 . 2 . 9 . 1 . 5 }$ .  \nTable 51  Translation Table for GetMaxSessions Output Parameters"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.15.2  WSDL Message(s)",
    "content": "8.2.15.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “GetMaxSessionsRequestMessage”, and “GetMaxSessionsResponseMessage” in E132-1-V0305-SecurityAdmin-PortType.wsdl.  Key information is shown for convenience in Table 52."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.15.3  WSDL Operation",
    "content": "8.2.15.3.1  See the portType operation definition for “GetMaxSessions” in E132-1-V0305-SecurityAdminPortType.wsdl.  Key information is shown for convenience in Table 53.  \nTable 53  GetMaxSessions PortType Operation"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.2.15.4  WSDL Operation Binding",
    "content": "8.2.15.4.1  See the operation binding for “GetMaxSessions” in E132-1-V0305-SecurityAdmin-Binding.wsdl.  Key information is shown for convenience in Table 54."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.1  Session Identifier",
    "content": "8.3.1.1  The SessionManager interface uses the same SOAP header as described in $\\ P [ 8 . 2 . 7$ for the SecurityAdmin interface.  With the exception of the EstablishSession operation, all SOAP request and response messages defined in the SessionManager interface includes this SOAP header to contain the session identifier.  The EstablishSession operation is where the session identifier is first defined by the equipment and communicated to client in the EstablishSession response."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.2  XML Schema and WSDL Files",
    "content": "8.3.2.1  The XML Schema and WSDL defined by this specification for the SessionManager interface is contained in the following documents:  \nTable 55  XML Schema  \nTable 56  SessionManager PortType Definitions  \nTable 57  SessionManager Binding Definitions  \n8.3.2.2  These documents are a part of this specification and should accompany this document.  The contents of these documents constitute the core part of this specification."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.3  WSDL Port Type Overview",
    "content": "8.3.3.1  The SessionManager WSDL portType definition organizes the SEMI E132.1 XML Schema data types into a collection of named operations with inputs and outputs that correspond to the UML operations that are defined for the SessionManager interface in SEMI E132.  The WSDL portType itself is named after the SEMI E132 interface, and each WSDL portType operation is named after the corresponding UML operation defined for the interface. Each WSDL operation consists of two WSDL message definitions corresponding to the input and output (request and response) for the UML operation defined in SEMI E132.  The relationship between the UML interface and the WSDL portType definition is similar in structure to that of the SecurityAdmin interface.  Table 58 describes the mapping between UML operations and WSDL operations of the SessionManager interface.  The WSDL message and operation definitions are described in ¶¶8.3.6 through 8.3.9.  \nTable 58  SessionManager Port Type"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.4  WSDL Binding Overview",
    "content": "8.3.4.1  The WSDL SessionManager binding definition specifies a message and transport protocol to use for a given portType (SOAP and HTTP for SEMI E132.1), the interface style used (document style for SEMI E132.1).  These settings are shown in Table 59.  For each WSDL portType operation, the binding defines any SOAP headers used and whether or not they are required, the HTTP SOAPAction header value to use for that operation, and the XML encoding to use (literal for SEMI E132.1).  The binding definitions for each portType operation are described in ¶¶8.3.6 through 8.3.9.  \nTable 59  SessionManager Binding"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.5  WSDL Service Overview",
    "content": "8.3.5.1  This specification does not provide a WSDL service definition.  WSDL service definitions provide one way to define and locate the endpoint(s) at which a given interface can be accessed by a client.  Such information cannot be determined until the equipment has been installed on a factory network, and therefore is out of scope for this  \nspecification.  Users are responsible for defining the mechanisms by which clients locate E132 equipment services in the factory.  A sample SessionManager service definition is provided in Figure 32 for reference only."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.6  EstablishSession Operation",
    "content": "8.3.6.1  XML Schema Types  \n8.3.6.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the EstablishSession operation.  See GetDefinedPrivileges operation regarding schema conventions used.  The session identifier SOAP header is not used for this operation."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.6.1.2  EstablishSession Request",
    "content": "8.3.6.1.2.1  The service request is mapped to the XML Schema element EstablishSessionRequest of type EstablishSessionRequestType. Table 60 shows how the input parameters are mapped to XML. EndPointSelectorType is as described in ¶8.2.13.1.5, XML description for the EndPoint class."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.6.1.3  EstablishSession Response",
    "content": "8.3.6.1.3.1  The service response is mapped to the XML Schema element EstablishSessionResponse of type EstablishSessionResponseType.  Table 61 shows how the output parameters are mapped to XML.  The XML schema diagram for EstablishSessionResponse is shown in Figure 34.  Errors for this operation are returned using  \nthe XML Schema element Error of type EstablishSessionErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P [ 8 . 2 . 9 . 1 . 5$ ."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.6.2  WSDL Message(s)",
    "content": "8.3.6.2.1  Three messages are defined for this operation corresponding to the Request and Response messages.  The SOAP header message for session identifier is not used for this operation.  See the message definitions for “EstablishSessionRequestMessage”, and “EstablishSessionResponseMessage” in E132-SessionManagerPortType.wsdl.  Key information is shown for convenience in Table 62."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.6.3  WSDL Operation",
    "content": "8.3.6.3.1  See the portType operation definition for “EstablishSession” in E132-1-V0305-SessionManagerPortType.wsdl.  Key information is shown for convenience in Table 63."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.6.4  WSDL Operation Binding",
    "content": "8.3.6.4.1  See the operation binding for “EstablishSession” in E132-1-V0305-SessionManager-Binding.wsdl.  Key information is shown for convenience in Table 64.  Note that the E132Header is still required, though the equipment shall ignore the session ID provided in the request as this will be generated by the equipment following session establishment.  If SSL is enabled, equipment shall always use the ID from the client’s certificate for authorization verifications, otherwise if SSL is disabled, the client can be identified using the FROM field of the E132Header. See $\\ P 7 . 3$ for more information on and impact of disabling SSL.  \nTable 64  EstablishSession Operation Binding"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.7  PersistSession Operation",
    "content": "8.3.7.1  XML Schema Types  \n8.3.7.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the PersistSession operation.  See GetDefinedPrivileges operation regarding schema conventions used.  \n8.3.7.1.2  PersistSession Request  \n8.3.7.1.2.1  The service request is mapped to the XML Schema element PersistSessionRequest of type PersistSessionRequestType.  Table 65 shows how the input parameters are mapped to XML."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.7.1.3  PersistSession Response",
    "content": "8.3.7.1.3.1  The service response is mapped to the XML Schema element PersistSessionResponse of type PersistSessionResponseType.  Table 66 shows how the output parameters are mapped to XML, the error type is just the common error described in $\\ P 1 8 . 2 . 6 . 1$ .  The XML Schema diagram for PersistSessionResponse is shown in Figure 36.  \nTable 66  Translation Table for PersistSession Output Parameters"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.7.2  WSDL Message(s)",
    "content": "8.3.7.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “PersistSessionRequestMessage”, and “PersistSessionResponseMessage” in E132-1-V0305-SessionManager-PortType.wsdl.  Key information is shown for convenience in Table 67.  \nTable 67  PersistSession Messages"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.7.3  WSDL Operation",
    "content": "8.3.7.3.1  See the portType operation definition for “PersistSession” in E132-1-V0305-SessionManagerPortType.wsdl.  Key information is shown for convenience in Table 68."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.7.4  WSDL Operation Binding",
    "content": "8.3.7.4.1  See the operation binding for “PersistSession” in E132-1-V0305-SessionManager-Binding.wsdl.  Key information is shown for convenience in Table 69."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.8.1  XML Schema Types",
    "content": "8.3.8.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the SessionPing operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.8.1.2  SessionPing Request",
    "content": "8.3.8.1.2.1  The service request is mapped to the XML Schema element SessionPingRequest of type SessionPingRequestType.  There are no input parameters to this operation, so the schema element has no content."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.8.1.3  SessionPing Response",
    "content": "8.3.8.1.3.1  The service response is mapped to the XML Schema element SessionPingResponse of type SessionPingResponseType.  Table 70 shows how the output parameters are mapped to XML, the error type is just the common error described in $\\ P [ 8 . 2 . 6 . 1$ .  The XML Schema diagram for SessionPingResponse is shown in Figure 38.  \nTable 70  Translation Table for SessionPing Output Parameters"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.8.2  WSDL Message(s)",
    "content": "8.3.8.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “SessionPingRequestMessage”, and “SessionPingResponseMessage” in E132-SessionManager-PortType.wsdl.  Key information is shown for convenience in Table 71."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.8.3  WSDL Operation",
    "content": "8.3.8.3.1  See the portType operation definition for “SessionPing” in E132-1-V0305-SessionManagerPortType.wsdl.  Key information is shown for convenience in Table 72."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.8.4  WSDL Operation Binding",
    "content": "8.3.8.4.1  See the operation binding for “SessionPing” in E132-1-V0305-SessionManager-Binding.wsdl.  Key information is shown for convenience in Table 73."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.9.1  XML Schema Types",
    "content": "8.3.9.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the CloseSession operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.9.1.2  CloseSession Request",
    "content": "8.3.9.1.2.1  The service request is mapped to the XML Schema element CloseSessionRequest of type CloseSessionRequestType.  Table 74 shows how the input parameters are mapped to XML."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.9.1.3  CloseSession Response",
    "content": "8.3.9.1.3.1  The service response is mapped to the XML Schema element CloseSessionResponse of type CloseSessionResponseType.  Table 75 shows how the output parameters are mapped to XML.  The XML Schema diagram for CloseSessionResponse is shown in Figure 40.  Errors for this operation are returned using the XML Schema element Error of type CloseSessionErrorType.  The error type is the same as that defined for the GetDefinedPrivileges operation described in $\\ P [ 8 . 2 . 9 . 1 . 5$ ."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.9.2  WSDL Message(s)",
    "content": "8.3.9.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HeaderMessage”, “CloseSessionRequestMessage”, and “CloseSessionResponseMessage” in E132-1-V0305-SessionManager-PortType.wsdl.  Key information is shown for convenience in Table 76."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.9.3  WSDL Operation",
    "content": "8.3.9.3.1  See the portType operation definition for “CloseSession” in E132-1-V0305-SessionManagerPortType.wsdl.  Key information is shown for convenience in Table 77."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.3.9.4  WSDL Operation Binding",
    "content": "8.3.9.4.1  See the operation binding for “CloseSession” in E132-1-V0305-SessionManager-Binding.wsdl.  Key information is shown for convenience in Table 78."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.1  Session Identifier (Part 1)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.1  Session Identifier\n\nContent: 8.4.1.1 Equipment initiated SOAP messages such as equipment notifications are not required by SEMI E132 to be send over an SSL channel, though equipment is still required to include the session identifier in all messages. Since sending the session ID in plaintext is undesired, this specification defines a hashed session identifier to be included in the SOAP header. Figure 41 shows the XML Schema diagram for the E132HashHeader schema element. The hashed session identifier is modeled as the XML element SessionIDHash of type xsd:base64Binary in the E132HashHeader. 8.4.1.2 The value of the SessionIDHash element is computed by first applying the SHA-1 hash function to the session identifier, the resulting hashed output is then based 64 encoded. The session identifier must be converted to a UTF-8 string prior to applying the hash. See SHA documentation reference in $\\ P 4 . 4$ for algorithm specification. Base64Encoding is as specified in the XML Schema standard (part 2)"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.1  Session Identifier (Part 2)",
    "content": "Title: SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.1  Session Identifier\n\nContent: referenced in $\\ P 4 . 3$ . 8.4.1.3 All equipment initiated SOAP messages and corresponding responses over SEMI E132 authenticated sessions shall include the E132HashHeader in the SOAP header. 8.4.2 The From/To fields are as described in $\\ P [ 8 . 2 . 8$ . 8.4.3 XML Schema and WSDL Files 8.4.3.1 The XML Schema and WSDL defined by this specification for the SessionClient interface is contained in the following documents:"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # Table 79  XML Schema",
    "content": "Table 79  XML Schema  \nTable 80  SessionClient PortType Definitions  \nTable 81  SessionClient Binding Definitions  \n8.4.3.2  These documents are a part of this specification and should accompany this document.  The contents of these documents constitute the core part of this specification."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.4  WSDL Port Type Overview",
    "content": "8.4.4.1  The SessionClient WSDL portType definition organizes the SEMI E132.1 XML Schema data types into a collection of named operations with inputs and outputs that correspond to the UML operations that are defined for the SessionClient interface in SEMI E132.  The WSDL portType itself is named after the SEMI E132 interface, and each WSDL portType operation is named after the corresponding UML operation defined for the interface.  Each WSDL operation consists of two WSDL message definitions corresponding to the input and output (request and response) for the UML operation defined in SEMI E132.  Table 82 describes the mapping between the UML operations and WSDL operations.  The WSDL message and operation definitions are described in more detail in ¶¶8.4.7 through 8.4.9 .  \nTable 82  SessionClient Port Type"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.5  WSDL Binding Overview",
    "content": "8.4.5.1  The WSDL SessionClient binding definition specifies a message and transport protocol to use for a given portType (SOAP and HTTP for SEMI E132.1), the interface style used (document style for SEMI E132.1).  These settings are shown in Table 83.  For each WSDL portType operation, the binding defines any SOAP headers used and whether or not they are required, the HTTP SOAPAction header value to use for that operation, and the XML  \nencoding to use (literal for SEMI E132.1).  The binding definitions for each portType operation are described in ¶¶8.4.7 through 8.4.9.  \nTable 83  SessionClient Binding"
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.6  WSDL Service Overview",
    "content": "8.4.6.1  This specification does not provide a WSDL service definition.  WSDL service definitions provide one way to define and locate the endpoint(s) at which a given interface can be accessed by a client.  Such information cannot be determined until the equipment has been installed on a factory network, and therefore is out of scope for this specification.  A sample SessionClient service definition is provided in Figure 42 for reference only."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.7  SessionPing Operation",
    "content": "8.4.7.1  XML Schema Types  \n8.4.7.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the SessionPing operation."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.7.1.2  SessionPing Request",
    "content": "8.4.7.1.2.1  The service request is mapped to the XML Schema element SessionPingRequest of type SessionPingRequestType.  There are no input parameters to this operation, so the schema element has no content. See SessionPing operation of the SessionManager interface."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.7.1.3  SessionPing Response",
    "content": "8.4.7.1.3.1  The service response is mapped to the XML Schema element SessionPingResponse of type SessionPingResponseType.  Table 84 shows how the output parameters are mapped to XML.  See SessionPing operation of the SessionManager interface for more details."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.7.2  WSDL Message(s)",
    "content": "8.4.7.2.1  Three messages are defined for this operation corresponding to the SEMI E132 Header, Request and Response messages.  See the message definitions for “E132HashHeaderMessage”, “SessionPingRequestMessage”, and “SessionPingResponseMessage” in E132-1-V0305-SessionClient-PortType.wsdl.  Key information is shown for convenience in Table 85."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.7.3  WSDL Operation",
    "content": "8.4.7.3.1  See the portType operation definition for “SessionPing” in E132-1-V0305-SessionClient-PortType.wsdl.\nKey information is shown for convenience in Table 86."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.7.4  WSDL Operation Binding",
    "content": "8.4.7.4.1  See the operation binding for “SessionPing” in E132-1-V0305-SessionClient-Binding.wsdl. Key information is shown for convenience in Table 87."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.8.1  XML Schema Types",
    "content": "8.4.8.1.1  This section describes the XML mappings for the classes defined in SEMI E132 for the SessionFrozen operation.  See GetDefinedPrivileges operation regarding schema conventions used."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.8.1.2  SessionFrozen Notification",
    "content": "8.4.8.1.2.1  The SessionFrozen notification is mapped to the XML Schema element SessionFrozenNotification of type SessionFrozenNotificationType.  There are no input parameters for this notification, so the schema element has no content."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.8.2  WSDL Message(s)",
    "content": "8.4.8.2.1  Two messages are defined for this operation corresponding to the SEMI E132 Hash Header, and the Notification message.  See message definitions for “E132HashHeaderMessage” and “SessionFrozenInMessage” in E132-1-V0305-SessionClient-PortType.wsdl.  Key information is shown for convenience in Table 88."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.8.3  WSDL Operation",
    "content": "8.4.8.3.1  See the portType operation definition for “SessionFrozen” in E132-1-V0305-SessionClientPortType.wsdl.  Key information is shown for convenience in Table 89.  There is no output message defined for notifications."
  },
  {
    "title": "SEMI E132.1-0305 PROVISIONAL SPECIFICATION FOR SOAP BINDING FOR EQUIPMENT CLIENT AUTHENTICATION AND AUTHORIZATION (ECA) - # 8.4.8.4  WSDL Operation Binding",
    "content": "8.4.8.4.1  See the operation binding for “SessionFrozen” in E132-1-V0305-SessionClient-Binding.wsdl.  Key information is shown for convenience in Table 90."
  }
]