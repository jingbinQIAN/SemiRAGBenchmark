{
  "doc_id": "semi_docs_118",
  "chunk_id": 1,
  "content": "SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 1  Purpose\n\n1.1 This standard is intended to define the methodology for the assessment of 2D Data Matrix direct mark quality.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 2  Scope\n\n2.1  This standard defines assessme nt criteria, metrology methods, and assessment reporting procedures as applied to 2D Data Matrix code direct marks on semiconductor related materials.  Application specifications, which refer to this standard, may further limit its scope to more specific requirements of a particular application.  \n2.2  This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the user of this standard to establish appropriate safety and health practices and determine the applicability of regulatory limitations prior to use.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 3  Limitations\n\n3.1  This standard will not specific ally address the quality assessment of paper-printed labels and will be limited to the usage of the Data Matrix symbology as defined by the AIMI standard.  \n3.2  This standard will not specify the resulting minimum, maximum or nominal values of any direct mark assessment method which would be considered acceptable for a 2D Data Matrix direct mark application.  Application specifications may define these values with reference to this standard.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 4  Referenced Standards\n\n4.1  AIM International Technical S pecification  \nAIMI Uniform Symbology Specification - Data Matrix\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology\n\nContent: 5.1 Definitions of terms relating to 2D Data Matrix direct mark assessment are as follows: 5.1.1 alternating pattern of a Data Matrix code symbol a line of alternately filled and unfilled cells indicative of the cell spacing along one of the major axes of the Data Matrix symbol (see Figure 1). 5.1.2 binary value a mark in the s ubstrate surface indicates the binary value of one. The absence of a mark, or a smooth surface surrounding a cell center point, indicates the binary value of zero. 5.1.3 cell, of a Data Matrix symbol the area within which a marking may be placed to indicate a binary value. The cell is the smallest element of a twodimensional Data Matrix symbol. The cell shape is generally quadrilateral, typically rectangular and ideally square. 5.1.4 cell center point, of a Data Ma trix symbol the point at which the centerline of a matrix row intersects the centerline of a column. 5.1.5 cell size, of a Data Matrix sym bol the number of image pixels within a Data Matrix symbol cell. Since the cell is generally\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology\n\nContent: rectangular in shape, the resolution is specified in both the horizontal and vertical directions of the cell. 5.1.6 cell spacing, of a Data Matrix symbol the vertical or horizontal distance between the cell center points of contiguous cells. 5.1.7 centerline, of a row or a colum n the line positioned parallel to, and spaced equally between, the boundary lines of the row or column. 5.1.8 edge the location of a signi ficant change in pixel brightness values between regions. It is the point(s) that has the greatest amount of contrast difference (change in intensity values) between pixels. 5.1.9 edge detection method a me thod whereby the location of an edge in an image is determined. 5.1.10 error correction mathemati cal techniques, which reconstruct the original information, based upon the remaining data in a damaged or poorly marked code. Reed Solomon and convolution are two such techniques. NOTE 1: Error correction techniques are described extensively in AIMI Uniform Symbology Specification - Data Matrix. 5.1.11\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology (Part 3)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology\n\nContent: finder pattern, of a Data Matr ix symbol a perimeter to the data region. Two adjacent sides contain marks in every cell: these are used primarily to define physical size, orientation and symbol distortion. This is often referred to as the L finder pattern. The two opposite sides are made up of cells containing marks in alternate cells (see Figure 1). 5.1.12 grayscale value the assignm ent of a digital value to a degree of light intensity. The shades of gray are used by a computer to reconstruct an image. A common scale is 256 shades of gray, with 0 being black and 255 being white. 5.1.13 histogram a graphic represe ntation of a frequency distribution of pixel values within an area of interest in a two-dimensional grayscale digital image. The horizontal axis of the graph represents the range of possible grayscale values in the image. The vertical axis of the graph represents the frequency of occurrence of each grayscale value in the area of interest (see Figure 2). 5.1.14 image coordinates location s in a\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology (Part 4)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology\n\nContent: twodimensional digital image are referenced by a twodimensional orthogonal coordinate system. The datum for the coordinate system is in the upper-left corner of the image. The horizontal axis or x-axis is located along the top of the image, with increasing positive values from left to right in the image. The vertical axis or yaxis is located along the left side of the image, with increasing positive values from top to bottom in the image. 5.1.15 mark a cell or area of a Dat a Matrix symbol, which has been marked, meaning the substrate has been altered by the marking process so as to significantly alter its contrast when imaged. Also can refer to an entire Data Matrix symbol that has been applied in rows and columns on a substrate by a marking process. 5.1.16 pixels picture elements. In a twodimensional digital image, pixels are individual elements to which a grayscale value is associated. The combination of grayscale values for each pixel and its respective location in a two-dimensional plane form a digital\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology (Part 5)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 5  Terminology\n\nContent: representation of a real scene. 5.1.17 pixel resolution the precisio n in pixels at which all measurements are performed. The maximum pixel resolution shall be 1 pixel.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # of Pixels\n\n5.1.18  quiet zone  areas of space surrounding the machine-readable symbol.  Quiet zone requirements may be found in application and symbology specifications. Sometimes called “Clear Area” or “Margin.”  \n5.1.19  space an unmarked cell or area of a Data Matrix Symbol.  \n5.1.20 symbol  a machine-readable pattern comprised of a quiet zone, finder pattern, symbology characters (which include special functions and error detection and/ or correction characters) required by a particular symbology.  \n5.1.21  symbol contrast  the differen ce in grayscale values between the marked and unmarked areas of a Data Matrix symbol.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 6.1  Test Image (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 6.1  Test Image\n\nContent: 6.1.1 A test image of the mark shall be obtained in a configuration that mimics the typical reading configuration for that mark, at substantially the same resolution, illumination, optical focus, image exposure, gain or other image signal preprocessing settings that are used during reading. Individual applications may dictate a specific wavelength or color temperature and spatial construction of illumination, image resolution, optical focus, image exposure, etc. The mark/reader configuration shall be consistent to the extent that repeatable results can be obtained from a single sample over many instances of one mark/reader configuration. 6.1.2 The intent of the assessment p rocedure is to regard a test image from the actual mark/reader configuration as the source for all assessment. Therefore, the assessment criteria and the algorithms used to carry out each assessment should be resident in the actual reading system or equivalent that is used to read the mark. If a separate assessment or verification system, which\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 6.1  Test Image (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 6.1  Test Image\n\nContent: has different illumination characteristics, resolution, etc., is used, uncorrelated results may occur.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 6.2  Edge Detection Method\n\n6.2.1  Many of the assessment procedures depend significantly on the type of edge detection method that is employed to locate edges in the test image which define the bounds of the entire Data Matrix symbol as well as individual cells within the matrix.  The edge detection method used should be consistent throughout the assessment process.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.1.1  Data Matrix Location Descrip tors\n\n7.1.1.1  The implementation of the sym bol quality assessment depends on knowledge of the location and orientation of the Data Matrix symbol in the image, which consists of the 4 image coordinate values of the matrix corner points, P1, P2, P3, and P4 (see Figure 3). In addition, the number of rows M and the number of columns $\\mathrm { \\Delta N }$ in the Data Matrix symbol is also required (see Figure 3).  Determine the image coordinate values and the number of rows and columns using a preprocessing decoding procedure resident in the reading system.  Should this process either fail or not be available, determine these values by inspection of the test image.  Report the coordinate values of each matrix corner point and the number of rows and columns.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.1.2  The Data Matrix Grid\n\n7.1.2.1  Based on the location of the 4 matrix corner points and the number of rows and columns in the matrix establish a geometrical 2 dimensional matrix grid.  Establish line segment P1P2 using points P1 and P2, line segment P2P3 using P2 and P3, line segment P3P4 using P3 and P4, and finally line segment P1P4, using P4 and P1.  Divide the number of rows M into the P1P2 line segment, producing M equally sized line segments.  Divide the number of rows M into the P3P4 line segment producing a similar result.  Divide the number of columns N into P1P4 line segment, producing N equal sized line segments.  Divide the number of columns $\\mathrm { \\Delta N }$ into the P2P3 line segment, producing a similar result.  Connect the corresponding new line segment endpoints between P1P2 and P3P4. Connect the corresponding new line segment endpoints between P1P4 and P2P3.  This results in a 2 dimensional matrix grid similar to that shown in Figure 3. This grid is generally quadrilateral in shape, practically rectangular and ideally square.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.1.3  Data Matrix Cell Center Point s\n\n7.1.3.1  Determine the ideal geometric al center points in each matrix cell in the following manner.  Establish a new set of points at the bisection of each row and column line segment used to form the matrix grid. Form line segments between each corresponding row bisection point in P1P2 and P3P4.  Do the same for the column bisection points in P1P4 and P2P3.  The intersection points between this new set of lines in each matrix cell is the ideal geometrical matrix cell center point (see Figure 4).\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.2  Symbol Contrast (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.2  Symbol Contrast\n\nContent: 7.2.1 Symbol Contrast measures the distinctiveness of the two reflective states in the symbol, namely light and dark. Many aspects of the mark/reader configuration affect the resulting symbol contrast in the image. 7.2.2 Within the grayscale image, se lect all of the image pixels, which fall within the area of the symbol, extending outward to the limits of any required quiet zones. Sort the selected pixels by their reflectance values into a histogram. Calculate the arithmetic mean of the reflectance histogram. Use this mean value to separate the reflectance histogram into 2 sections or sub-histograms, which represent approximate reflectance histograms for the dark and light contrasts of the symbol. Calculate the arithmetic mean of each sub-histogram. The lower grayscale value of the two means represents the dark grayscale value $\\mathrm { G } _ { \\mathrm { D } }$ and the higher value represents the light grayscale value $\\mathrm { G } _ { \\mathrm { L } }$ . Use these two grayscale values to calculate a new\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.2  Symbol Contrast (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.2  Symbol Contrast\n\nContent: symbol contrast. The difference of the grayscale levels divided by the full range of grayscale (255 in the case of 8 bit A/D Sampling) is the Symbol Contrast. Report the Symbol Contrast value. $$ \\mathrm { S C } = \\frac { \\mathrm { G _ { L } - G _ { D } } } { \\mathrm { G r a y s c a l e R a n g e } ( 2 5 5 ) } { \\times 1 0 0 \\% } $$\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.3  Symbol Contrast Signal to Noi se Ratio (SNR)\n\n7.3.1  The Symbol Contrast Signal to Noise Ratio (SNR) is a relative measure of the symbol contrast (signal) to the maximum deviation in the light or dark grayscale level in the symbol (noise). Using the subhistograms and the two grayscale values $\\mathrm { \\bf G } _ { \\mathrm { L } }$ and $\\mathrm { G } _ { \\mathrm { D } }$ found in the Symbol Contrast calculation, calculate the deviation of each sub-histogram about each respective grayscale value.  Two values will result:  the deviation of light pixels $\\mathrm { \\Delta D _ { L } }$ and the deviation of dark pixels $\\mathrm { \\Delta D _ { D } }$ . Calculate a symbol contrast difference in grayscale value using the grayscale values.  Divide this contrast difference by the maximum deviation calculated for the individual light and dark sections of the histogram. This ratio is the Symbol Contrast SNR.  Report the symbol contrast SNR.  \n$$\n\\mathrm { S y m b o l C o n t r a s t S N R = \\frac { G _ { L } - G _ { D } } { M a x \\Big ( D _ { L } , D _ { D } \\Big ) } }\n$$\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.4  Mark Growth (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.4  Mark Growth\n\nContent: 7.4.1 Mark Growth is concerned wit h tracking the tendency of a marking system to over or under mark the symbol. This is a size comparison between the actual marked cells vs. their nominal size. Changes in mark growth can be indicative of changes in the marking process or substrate characteristics or changes in the reader configuration, such as illumination or optical focus. 7.4.2 Within the grayscale image, ba sed upon the matrix coordinates and the number of rows and columns in the matrix, determine a scanline of pixels which bisects the horizontal alternating pattern and determine a scanline which bisects the vertical alternating pattern of the matrix (Figure 3). Scan along each alternating pattern, generating a cross-sectional grayscale profile of each alternating pattern as shown in Figure 5. Determine the location of each edge within the alternating patterns locally, using an appropriate edge detection method. Based upon the edge locations, compute the width of each matrix cell in the horizontal alternating\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.4  Mark Growth (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.4  Mark Growth\n\nContent: pattern in the direction of the horizontal scanline. Also, compute the height of each matrix cell in the vertical alternating pattern in the direction of the vertical scanline. Separate the mark and space cell widths and compute the median space cell width (SCW) and the median mark cell width (MCW). Horizontal Mark Growth (HMG) is computed as: $$ \\mathrm { H M G } = \\frac { \\mathrm { M e d } \\left( \\mathrm { M C W } \\right) } { \\mathrm { M e d } \\left( \\mathrm { M C W } \\right) + \\mathrm { M e d } \\left( \\mathrm { S C W } \\right) } { \\times 1 0 0 \\% } $$ Separate the mark and space cell heights and compute the median space cell height (SCH) and the median mark cell height (MCH). Vertical Mark Growth (VMG) is computed as: $$ \\mathrm { V M G } = \\frac { \\mathrm { M e d ( M C H ) } } { \\mathrm { M e d ( M C H ) } + \\mathrm { M e d ( S C H ) } } { \\times 1 0 0 \\% } $$ Report the Horizontal Mark Growth and Vertical Mark Growth values.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.5  Data Matrix Cell Size\n\n7.5.1  The Data Matrix Cell Size expresses the average size of each cell in the matrix in pixels and is composed of a width and height component.  Compute the Cell Size using the distances between corner points and the known number of rows M and the known number of columns N in the matrix (referring to Figure 3).\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.5.2  Data Matrix Cell Width\n\n7.5.2.1  Compute the Data Matrix Cell Width (DMCW) using the distance between P1 and P4, dist(P1, P4), the distance between P2 and P3, dist(P2, P3) and the number of columns $\\mathrm { \\Delta N }$ as follows:  \n$$\n\\mathrm { D M C W } = { \\frac { \\mathrm { d i s t } \\ ( \\mathrm { P } 1 , \\mathrm { P } 4 ) + \\mathrm { d i s t } \\ ( \\mathrm { P } 2 , \\mathrm { P } 3 ) } { 2 \\times \\mathrm { N } } }\n$$  \nReport the Data Matrix Cell Width.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.5.3  Data Matrix Cell Height\n\n7.5.3.1  Compute the Data Matrix Cell Height (DMCH) using the distance between P1 and P2, dist(P1,P2), the distance between P3 and P4, dist(P3,P4) and the number of rows M as follows:  \n$$\n\\mathrm { D M C H } = \\frac { \\mathrm { d i s t } ( \\mathrm { P } 1 , \\mathrm { P } 2 ) + \\mathrm { d i s t } ( \\mathrm { P } 3 , \\mathrm { P } 4 ) } { 2 \\times \\mathrm { M } }\n$$  \nReport the Data Matrix Cell Height.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.6  Data Matrix Mark Misplaceme nt\n\n7.6.1  Data Matrix Mark Misplaceme nt measures the average misplacement of Data Matrix marks from their respective ideal Data Matrix Cell Center Points as defined in Section 7.1.3. The Mark Misplacement is measured separately in horizontal and vertical directions relative to the average width of the marks in the respective direction.  \n7.6.2  Using the mark cell horizontal and vertical edge locations, as determined in Section 7.4.2, compute the image coordinate of the midpoint between the edges of each mark in the corresponding horizontal and vertical directions.  In the horizontal direction, for each mark calculate its misplacement $\\mathrm { M H _ { i } }$ as the distance between the detected midpoint and its ideal cell center point. In the vertical direction, for each mark calculate its misplacement $\\mathrm { M V _ { i } }$ as the distance between the detected midpoint and its ideal cell center point.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.6.3  Horizontal Mark Misplacemen t\n\n7.6.3.1  In the horizontal direction, for a given number of columns $\\mathrm { \\bf N } .$ , and the Data Matrix Cell Width (DMCW) as computed in Section 7.5.2, compute the Horizontal Mark Misplacement (HMM)as follows:  \n$$\n\\mathrm { \\underline { { H M M } } = \\frac { \\overset { n } { i = 1 } M H _ { i } } { n \\times D M C W } { \\times 1 0 0 \\% } }\n$$  \nwhere ${ \\mathfrak { n } } = { \\mathbb { N } } / 2$ if $\\mathrm { \\Delta N }$ is even or $\\mathbf { n } = \\mathbf { N } / 2 + 1$ if $\\mathrm { \\Delta N }$ is odd.\nReport the Horizontal Mark Misplacement.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.6.4  Vertical Mark Misplacement\n\n7.6.4.1  In the vertical direction, for a g iven number of rows $\\mathbf { M }$ , and the Data Matrix Cell Height (DMCH) as computed in Section 7.5.3, compute the Vertical Mark Misplacement (VMM) as follows:  \n$$\n\\mathrm { V M M } = \\frac { \\underset { i = 1 } { m } \\mathrm { M V _ { i } } } { \\underset { m \\times \\mathrm { D M C H } } { \\mathrm { m } \\times \\mathrm { D M C H } } } { \\times 1 0 0 \\% }\n$$  \nwhere $\\mathbf { m } = \\mathbf { M } / 2$ if $\\mathbf { M }$ is even and $\\mathbf { m } = \\mathbf { M } / 2 { + } 1$ if $\\mathbf { M }$ is odd.  Report the Vertical Mark Misplacement.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.7  Unused Error Correction\n\n7.7.1  The error correction capacity o f Reed-Solomon decoding is expressed in the equation:  \n$$\ne + 2 t \\leq d - p { \\mathrm { ~ w h e r e } } ;\n$$  \n$e$ is the number of erasures,\n$t$ is the number of errors,\n$d$ is the number of error correction codewords, $p$ is the number of codewords reserved for error detection.  \n7.7.2  Values for $d$ and $p$ are defined by the AIMI Symbology Specification (often depending on symbol size), while e and t are determined during a successful decode.  Compute the Unused Error Correction as follows:  \n$$\n\\mathrm { U E C } = \\left( 1 . 0 - \\frac { \\left( \\mathrm { e } + 2 \\mathrm { t } \\right) } { \\left( \\mathrm { d } - \\mathrm { p } \\right) } \\right) \\times 1 0 0 \\%\n$$  \nReport the Unused Error Correction value.  \n7.7.3  In symbols with more than one (e.g. interleaved) Reed-Solomon block, calculate the Unused Error Correction for each block independently and report the value for each block.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.8  Cell Defects and Finder Patter n Defects (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.8  Cell Defects and Finder Patter n Defects\n\nContent: 7.8.1 If the error correction capacity of the Data Matrix symbol is not exceeded then the Cell Defect measurement can be made. Because the Data Matrix symbol has been decoded, the correct binary value of each cell is known. 7.8.2 Based upon the Data Matrix G rid as defined in Section 7.1.2 (Figure 4), and the total matrix size, identify the number and location of all pixels which fall within the bounds of the Data Matrix Grid. Based upon the reflectance threshold determined by the Symbol Contrast measurement, assign a binary value to each pixel within the Data Matrix Grid. Accumulate the total number of identified image pixels, which are the incorrect binary value. Divide this number by the total number of pixels within the Data Matrix Grid. $$ { \\mathrm { C e l l D e f e c t s } } = { \\frac { \\# { \\mathrm { o f ~ i n c o r r e c t } } { \\mathrm { p i x e l s } } } { { \\mathrm { t o t a l } } \\# { \\mathrm { o f ~ p i x e l s } } } } \\times 1 0 0 \\% $$ 7.8.3 Finder pattern quality can\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.8  Cell Defects and Finder Patter n Defects (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 7.8  Cell Defects and Finder Patter n Defects\n\nContent: be c alculated in a similar manner. Based on the Data Matrix Grid as defined in Section 7.1.2 (Figure 4), determine the number and location of image pixels which fall within the bounds of the L finder pattern of the Data Matrix Grid. Using the reflectance threshold determined by the Symbol Contrast measurement, assign a binary value to each pixel within the L finder pattern. Accumulate the total number of identified image pixels, which are the incorrect binary value. Divide this number by the total number of pixels within the L finder pattern. $$ \\mathrm { F . P . D e f e c t s } = \\frac { \\# \\mathrm { o f ~ i n c o r r e c t } \\mathrm { p i x e l s } } { \\mathrm { t o t a l } \\# \\mathrm { o f ~ p i x e l s } } \\times 1 0 0 \\% $$\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 8.1  Result Significance\n\n8.1.1  The significance of the assessm ent results will depend on the mark/reader application.  Open system applications in which multiple marker and reader systems of various types at multiple sites are used will require stricter adherence to desired mark assessment results.  If the mark is intended to survive subsequent processing steps after marking which will affect mark characteristics, then reassessment may be necessary to ensure continued readability.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 9.1  Assessment Results\n\n9.1.1  The results of each assessment shall be reported and listed individually.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 9.2  Additional Information\n\n9.2.1  The following items should als o appear in the report:  \nidentification of the mark under assessment;\noperator identification;\nlocation of  where the assessment was done;\ndescription of specific marking and reading equipment used.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 9.3  Supplemental Information (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 9.3  Supplemental Information\n\nContent: 9.3.1 Supplemental information can be reported optionally. This information provides further details about the size, content and color polarity of the Data Matrix symbol. 9.3.2 Symbol Type indicates the EC C (error correction) level of the analyzed symbol. See the AIMI Specification for details on ECC levels other than ECC 200. 9.3.3 Symbol Size indicates the tota l size of the matrix, including the L and alternating patterns per the AIMI specification. 9.3.4 Image Polarity can be Dark on Light or Light on Dark. The first term refers to the polarity of the L, the second the polarity of the quiet zone. 9.3.5 Encoded Data shows the printable encoded characters only. As many lines as needed will be included for larger symbols. 9.3.6 Data Codewords and Error Codewords (ECC 200 only) shows the actual encoding codewords that are contained in the symbol. Codewords, which contain errors, may be indicated or highlighted. By referring to Annex M of the AIMI Specification the exact physical location of codewords\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 9.3  Supplemental Information (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 9.3  Supplemental Information\n\nContent: can be determined. 9.3.7 Encodation Scheme (ECC 0 through 140 only) reports the “Base” number, which relates to the density or efficiency with which the data has been encoded in the symbol. For more detailed information refer to Section 5 of the AIMI Specification.\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 10.1  Pixel Resolution (Part 1)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 10.1  Pixel Resolution\n\nContent: 10.1.1 The pixel resolution shall be sp ecified for all assessments. This value determines the precision, accuracy and repeatability of each resulting measurement. NOTICE: SEMI makes no warranties or representations as to the suitability of the standard set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user's attention is called to the possibility that compliance with this standard may require the use of copyrighted material or of an invention covered by patent rights. RVSI Acuity CiMatrix has filed a statement with SEMI asserting that the patented or copyrighted item can be used by the public for the purpose of implementing this standard without specific license and without payment of\n\nSEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 10.1  Pixel Resolution (Part 2)\n\nTitle: SEMI T10-0701 TEST METHOD FOR THE ASSESSMENT OF 2D DATA MATRIX DIRECT MARK QUALITY - # 10.1  Pixel Resolution\n\nContent: royalty or other charge. Attention is also drawn to the possibility that some elements of this standard may be subject to patented technology or copyrighted items other than those identified above. Semiconductor Equipment and Materials International (SEMI) shall not be held responsible for identifying any or all such patented technology or copyrighted items. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights and the risk of infringement of such rights are entirely their own responsibility.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES\n\nThis specification was technically approved by the Global Traceability Committee and is the direct responsibility of the North American Traceability Committee. Current edition approved by the North American Regional Standards Committee on April 11, 2003.  Initially available at www.semi.org June 2003; to be published July 2003.  Orignally published November 2002.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 1  Purpose\n\n1.1  This specification provides a symbology for marking hard surface reticle substrates within the edge exclusion area of the substrate.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 2  Scope\n\n2.1  This specification defines the geometric and spatial relationships and content (including error checking and correcting code) of square two-dimensional, machinereadable, Data Matrix symbols for pattern-surface marking of resist-coated 6 inch reticle substrates that comply with the specifications of SEMI P1.  \n2.1.1  This specification addresses only the Data Matrix field characteristics and location.  This Data Matrix field may contain the information previously contained in various bar code symbols on 6 inch reticles.  The format of such information is not detailed in this specification.  \nNOTICE: This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 3  Limitations\n\n3.1  This specification does not cover any other code fields on the reticle.  These might be stepper-specific or user-specific or both.  The location, symbology and content of these other fields, if they exist, are determined between reticle supplier and user.  \nNOTE 1:  Data Matrix symbology is applicable to a broad range of semiconductor products including virgin wafers, processed and patterned FPD substrates, lead frames and reticles. The format and algorithms of this code are based on two-dimensional symbology specified in ISO/IEC 16022 — International Symbology Specification – Data Matrix.  \n3.2  Although this specification does not specify the marking techniques to be employed when complying with its requirements, it is assumed that the symbol will be obtained by exposure of individual dots in a resist coating with an e-beam, laser or other patterngeneration tool.  \nNOTE 2: An experiment executed by International Sematech found such e-beam marks to be suitable for the application.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 4.1  SEMI Standard\n\nSEMI P1 — Specification for Hard Surface Photomask\nSubstrates\n4.2  ANSI Standard1  \nANSI MH10.8.2 — Data Application Identifier Standard  \n4.3  ISO/IEC Standard2  \nISO/IEC 16022 International Symbology Specification – Data Matrix  \n4.4  Uniform Code Council Standard3  \nManufacturer Identification Codes  \nNOTICE: As listed or revised, all documents cited shall be the latest publications of adopted standards.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 5  Terminology\n\n5.1  Terms relating to the data matrix code symbol characteristics are defined in ISO/IEC 16022.  \n5.2  Definitions of terms relating to the marking area are as follows:\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 5.3  Definitions\n\n5.3.1  mark area — a rectangular area containing the mark field(s) and the surrounding quiet zone.  \n5.3.2  mark field — an area within which all mark elements occur.  \n5.3.3  quiet zone — an unpatterned, unmarked area that surrounds a mark field.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 6  Ordering Information\n\n6.1  Purchase orders for substrates furnished to this specification shall specify the following optional items:  \n6.1.1  Number (15 to 91) of message characters.  \n6.1.2  Content of Message Characters 16 and up, if present.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.1  Data Matrix Code Symbol Dimensions\n\n7.1.1  Each square matrix code symbol shall be composed of an array of 32 rows and 32 columns (see Table 1 and Figure 1) as defined in compliance with ISO/IEC 16022.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.2  Cell Dimensions\n\n7.2.1  Cell spacing shall be $1 0 0 \\mu \\mathrm { m }$ , center to center.  \n7.2.2  Cell shape shall be square.  \n7.2.3  Cell size shall be $1 0 0 \\pm \\textsf { I } \\mu \\textrm { m }$ .  \n7.2.4  Dot Misalignment — The symbol shall be readable in accordance with ISO/IEC 16022.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.3  Border Rows and Columns (see Figure 1)\n\n7.3.1  One border row and one border column shall contain a dot in each cell. These are identified as the primary border row and the primary border column. These are used by the code reader to determine the orientation of the matrix.  \n7.3.1.1  The opposing (secondary) border row and column shall contain dots in alternating cells, as shown in Figure 1.  \n7.3.2  For square Data Matrix code symbols, the reference point of the symbol is generally the physical centerpoint of the cell common to the primary border row and the primary border column.  However, for the present application it is more convenient to reference the location of the Data Matrix code symbol to the bottom left corner of the cell containing the reference point, identified in the figures as the “reference corner.”\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.4  Quiet Zone\n\n7.4.1  The quiet zone surrounding the Data Matrix code symbol shall be four cells $( 4 0 0 ~ \\mu \\mathrm { m } )$ wide.  \n7.4.2  The area between the quiet zone and the nearest side of the pellicle frame shall be filled with an unpatterned chrome film.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.5  Content of the Data Matrix Code Symbol\n\n7.5.1  Each square Data Matrix code symbol shall contain between 15 and 91 message characters, together with error checking and correcting (ECC) 200 code characters, encoded in accordance with ISO/IEC 16022.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.5.2  The message characters may include any of those designated as EDIFACT in Table 5 and Annexe J.3 of ISO/IEC 16022.\n\n7.5.3  The first 15 message characters shall contain supplier-assigned 8-character substrate identification code, followed by a 7-character supplier (manufacturer) identification code defined by UCC as a six-digit company identification, preceded by a zero (0).  \n7.5.4  The remaining message characters, if any, shall contain information as agreed between the supplier and user. This may require field identifiers and field concatenators (see ANSI MH10.8.2).\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.6  Location of the Data Matrix Code Symbol (Part 1)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.6  Location of the Data Matrix Code Symbol\n\nContent: 7.6.1 With the substrate positioned front surface up and with the substrate’s reference corner toward the operator and to the operator’s left, the lower left corner of the Data Matrix code symbol shall be located $1 3 9 . 6 \\pm 0 . 5 ~ \\mathrm { m m }$ to the right and $1 1 0 . 4 \\pm 0 . 5 \\ \\mathrm { m m }$ above the substrate’s reference corner. 7.6.2 This places the $3 2 ~ \\mathrm { r o w } \\times 3 2$ column square Data Matrix code symbol entirely within a $1 4 ~ \\mathrm { m m }$ wide edge exclusion area (see Figure 2). 7.6.3 The primary border row of the symbol shall be parallel with the adjacent edge of the substrate $\\pm \\ : 1 0 . 0 ^ { \\circ }$ The primary border column of the symbol shall be nominally perpendicular to the same edge. 7.6.4 Mark Area Dimensions — The mark area shall be $4 . 0 \\ : \\mathrm { m m } \\times 4 . 0 \\ : \\mathrm { m m }$ . Table 1 Data Matrix Code Symbol Dimensions NOTE: All dimensions in millimeters. Figure 1 Data Matrix Code Symbol Showing Border Rows and\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.6  Location of the Data Matrix Code Symbol (Part 2)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.6  Location of the Data Matrix Code Symbol\n\nContent: Columns NOTE: All dimensions in millimeters. NOTE: All dimensions in millimeters. NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer' s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require the use of copyrighted material or of an invention covered by patent rights. RVSI Acuity CiMatrix has filed a statement with SEMI asserting that the patented or copyrighted item can be used by the public for the purpose of implementing this standard without specific license and without payment of royalty or other charge. Attention is also drawn to the possibility\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.6  Location of the Data Matrix Code Symbol (Part 3)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # 7.6  Location of the Data Matrix Code Symbol\n\nContent: that some elements of this standard may be subject to patented technology or copyrighted items other than those identified above. Semiconductor Equipment and Materials International (SEMI) shall not be held responsible for identifying any or all such patented technology or copyrighted items. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights and the risk of infringement of such rights are entirely their own responsibility.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # RELATED INFORMATION 1 OTHER CONSIDERATIONS\n\nNOTICE:  This related information is not an official part of SEMI T11. It was derived from task force discussions and is provided for reference and information only.  This related information was approved for publication by full letter ballot on August 29, 2002.\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations (Part 1)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations\n\nContent: R1-1.1 This specification defines only the location of the ID mark on the reticle surface. However, issues relating to substrate edge length tolerances, pellicles, reticle positioning, robotic end effectors and alignment marks were considered in development of the specification. These are summarized below and in Figure R1-1. R1-1.2 Substrate Edge Length — Table 1 of SEMI P1 specifies that edge length for $6 ^ { \\circ }$ reticle substrates shall $\\mathrm { b e } \\geq 1 5 1 . 6 ~ \\mathrm { m m }$ and $\\leq 1 5 2 . 4 \\ \\mathrm { m m }$ . Figure 2 represents this as $1 5 2 . 0 \\pm \\ : 0 . 4 \\ : \\mathrm { m m }$ . R1-1.3 Pellicles — It is assumed that the pellicle is a square with a nominal size of $1 2 4 ~ \\mathrm { m m }$ that is centered on the mask substrate. A pellicle misalignment allowance of $\\pm \\ : \\ : 0 . 5 \\ : \\mathrm { { m m } }$ has been suggested by reticle suppliers and users; this is reflected in Figure 3. An unpatterened chrome film is specified between the quiet zone and pellicle frame to eliminate\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations (Part 2)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations\n\nContent: influence on the reader of light scattered from the pellicle frame when mark reading illumination and the reader camera are on opposite sides of the reticle as shown in Figure R1-1. Figure R1-1 Example of Top-Side ID Illumination with PatternSide Reader and End Effector R1-1.4 Reticle Positioning — Misalignment in a tool can result from several factors, e.g. position in the cassette, position on the end effector, substrate squareness and others. A reticle misaligment allowance of $\\dot { \\mathbf { \\beta } } \\pm \\ 1 . 5 \\ \\mathrm { m m }$ has been suggested by stepper and other tool suppliers and users. This is reflected in Figure 3. R1-1.5 Robotic End Effectors — End effector grips are typically $\\leq 6 . 0 \\ \\mathrm { m m }$ wide, in the reticle contact area. A $6 . 0 \\mathrm { m m }$ end effector width is shown in Figure 3. NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations (Part 3)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations\n\nContent: standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer' s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require the use of copyrighted material or of an invention covered by patent rights. RVSI Acuity CiMatrix has filed a statement with SEMI asserting that the patented or copyrighted item can be used by the public for the purpose of implementing this standard without specific license and without payment of royalty or other charge. Attention is also drawn to the possibility that some elements of this standard may be subject to patented technology or copyrighted items other than those identified above. Semiconductor Equipment and Materials International (SEMI) shall not be held responsible for identifying any or all such patented technology or copyrighted\n\nSEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations (Part 4)\n\nTitle: SEMI T11-0703 SPECIFICATION FOR MARKING OF HARD SURFACE RETICLE SUBSTRATES - # R1-1  Other Considerations\n\nContent: items. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights and the risk of infringement of such rights are entirely their own responsibility.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS\n\nThis specification was technically approved by the Global Traceability Committee and is the direct responsibility of the Japanese Traceability Committee.  Current edition approved by the Japanese Regional Standards Committee on November 24, 2004.  Initially available at www.semi.org January 2005; to be published March 2005.  Originally published in 2004; previously published July 2004.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 1  Purpose\n\n1.1  Semiconductor production equipment may use jigs and/or implements to produce semiconductor devices.  Some case such important conditions as quality of products and tool performance may depend on jigs or implements.  This difference often comes from such historical events as processing cycles, processing products, stocking environment. To make sure correlation between the conditions and the events tracing jigs and implements is required.  \n1.2  Purpose of this document is to establish concept to trace jigs and/or implements used on equipment for processing material and make sure required information, communications and services to realize the concept.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 2  Scope (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 2  Scope\n\nContent: 2.1 Scope of this specification includes management of required information on equipment. Because a specific piece of jig may be used on other equipment, usually same type and/or same supplier, information transfer between equipment and factory host computer is also in the scope of this specification. 2.2 Such physical issues mark position and mark readers are out of scope, for this specification treats just tracing information, communication of it and logical management. The physical specification may be standardized separately. 2.3 As long as management on this specification and above requirement is expected on an equipment, the equipment is in the scope regardless of the type of process or type of equipment. 2.4 But if jigs and/or implements for certain type of equipment have been already traced or managed complying with existing standard or along with some specification conventionally, they are out of scope of this specification. But this specification can be applied even to such jigs and tools if user and/or suppliers want. 2.5 Because this\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 2  Scope (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 2  Scope\n\nContent: specification describes just base functionalities to realize the traceability, applications of the functionalities including checking or management of counterfeits are out of scope. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 3  Limitations\n\n3.1  This specification defines and makes sure concept and information transfer basics.  Specification about physical ID marking on jigs and tools including readers/writers, and such application of this tracking as security and operations are dependent to standard users.  They are responsible for their application and related regal issues.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 4.1  SEMI Standards\n\nSEMI E5 — SEMI Equipment Communications Standard 2 Message Content (SECS-II) SEMI E30 — Generic Model for Communications and Control of Manufacturing Equipment (GEM) SEMI E39 — Object Service Standard: Concepts, Behavior, and Services NOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 5  Terminology\n\n5.1  Definitions  \n5.1.1  Attachment — general term of Jig and Implement.  \n5.1.2  Implement — a kind of Attachment used to assemble/maintain/improve measurement or production equipment.  \n5.1.3  Jig — a kind of Attachment used to support measurement or production for material on one or more equipment.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6  Convention\n\n6.1  This section defines the conventions followed by this document.  \n6.2  Object Conventions — This document conforms to the conventions for objects established by SEMI E39, including object diagrams, object terminology, and re-quirements for standardized objects.  Accordingly, notation is based on Unified Modeling Language (UML).  \n6.2.1  Formal Name of an Object — The text capitalizes formal object name references.  Similar to the way capitalization is normally used when discussing entities.  When describing something in the general (like cities) lower case is used, but when a specific entity is of interest (New York City), then first letters are capitalized.  \n6.2.2  Components of Complex Attributes — The names of object attributes defined in tables are left-justified.  The individual elements of complex attributes are right-justified in order of appearance below the complex attribute.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.3  State Model Conventions (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.3  State Model Conventions\n\nContent: 6.3.1 This document uses the Harel state chart convention for describing dynamic operation of defined objects. The outline of this convention is described in an attachment of SEMI E30. The official definition of this convention is described in “State charts: A Visual Formalism for Complex Systems”1. 6.3.2 The Harel convention has not the concept of state models of “creation” and “extinction” for expressing a temporary entity. The Secondent described in this document is such an entity, and a copy of the same state model is used for an independent job newly created. In this document, a circle with a black circle inside is used for expressing extinction of an entity. A filled black circle denotes the entry to the state model (the entity creation). 6.3.3 Transition tables are provided in conjunction with the state diagrams to explicitly describe the nature of each state transition. A transition table contains columns for Transition number, Previous State, Trigger, New State, Actions, and Comments. The “trigger” (column 3) for the\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.3  State Model Conventions (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.3  State Model Conventions\n\nContent: transition occurs while in the “previous” state. The “actions” (column 5) includes a combination of: 1. Actions taken upon exit of the previous state. 2. Actions taken upon entry of the new state. 3. Actions taken which are most closely associated with the transition. 4. No differentiation is made between these cases. 6.4 Service Message Representation — Services are functions or methods that may be provided by either the equipment or the host. A service message may be either a request message, which always requires a response, or a notification message, that does not require a response.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.4.1  Service Definition\n\n6.4.1.1  A service definition table defines the specific set of messages for a given service resource, as shown in the following table:  \n6.4.1.2  Type can be either $\\mathbf { \\partial } ^ {  } \\mathbf { N } ^ {  } = 1$ Notification or $\\mathbf { \\cdots } \\mathbf { R } ^ { \\prime \\prime } = \\mathbf { R }$ equest & Response.  \n6.4.1.3  Notification type messages are initiated by the service provider (e.g., the equipment) and the provider does not expect to get a response from the service user.  Request messages are initiated by a service user (e.g., the host). Request messages ask for data or an activity from the provider.  Request messages expect a specific response message (no presumption on the message content).\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.4.2  Service Parameter Dictionary\n\n6.4.2.1  A service parameter dictionary table defines the description, format and its possible value for parameters used by services, as shown in the following table:  \n6.4.2.2  A row is provided in the table for each parameter of a service.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 6.4.3  Service Message Definition\n\n6.4.3.1  A service message definition table defines the parameters used in a service, as shown in the following table:  \n6.4.3.2  The columns labeled REQ/IND and RSP/CNF link the parameters to the direction of the message.  The message sent by the initiator is called the “Request”.  The receiver terms this message the “Indication” or the request.  The receiver may then send a “Response” which the original sender terms the “Confirmation”.  \n6.4.3.3  The following codes appear in the REQ/IND and RSP/CNF columns and are used in the definition of the parameters (eg., how each parameter is used in each direction):\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 7  General Requirements\n\n7.1  Identification Means — Equipment has to have any means to identify physical Jigs and/or Implements.  \n7.2  Communication Means — Each equipment and managing system has to have any electric communication means to transact.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview\n\nContent: 8.1 Attachments in Semiconductor Manufacturing — A semiconductor production line consists of many amount pieces of equipment with many types. Some types of equipment require such attachments as jigs and/or implements to manufacture semiconductor devices. Because some of them act very important roles, quality, yield or productivity of process may depend on them and their management. 8.2 Management of Attachments — Management is required on specific attachments to have better product quality, yield and productivity. This document specifies definitions, concepts, behavior and services to manage attachments on equipments and also in factory. However not all the attachments require such management and specification of this document should be applied to restricted ones especially to the ones used for important processes, sensitive and incompatible combinations between Attachments and equipment. 8.3 Effective Concepts for a Variety of Attachments — There are many kinds of equipment types and also a variety of attachments. To be effective to almost\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview\n\nContent: all of them, specification of this document is generic and idealized without any physical limitations or practical details. It is also important to be independent to rapidly changing technologies and production environment. 8.4 Logical and Informational Specification — To keep track of conceptual document and keep shared area as wide as possible, this document specifies just logical and informational issues, except related information part. Physical specifications are assumed to be defined as separated documents; they may be specified in other standards, propriety specifications or mixed together. 8.5 Tracking Oriented Management — Because there may be very specific managements or operation for strategy in factories and they may not be shared by many fabs, strategic management for specific factory or products may not be better to be standardized. Most parts of the management specified in this document are related to traceability. In other words “tracking of Jigs and Implements” is the standardized area of “management of Attachments” in this\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview (Part 3)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview\n\nContent: document. 8.5.1 Tracking Jigs and Implements — In a semiconductor factory, it is necessary for any management of Jig and/or Implements to be tracked. 8.5.1.1 There are two types of information to track Jigs and/or Implements. One of them is transferring information: e.g., where it is and who use it. It is required to discriminate between logical information and physical attachment. The other is historical information of the attachment: e.g., how much it was used, what condition the processes were and when it was repaired. 8.5.1.2 Such an attachment as Jig or Implement is transferred from stock yard to equipment or the other way and may be between two pieces of equipment. At the time it is picked up at source location for destination, the fact should be reported to Tracking System. When it arrives at the destination, this fact is required to be reported to the system. Verification has to be done at the destination before it is dealt: e.g., process, maintain or stored. If a problem happens during transportation, an exception is raised. 8.5.1.3\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview (Part 4)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview\n\nContent: When it is used on equipment, e.g., for process or maintenance, its history information is accumulated and the information is reported to the system at every milestone. Examples of the history information are time duration, cycle time, such process parameters as temperature and pressure, material characteristics and known damage occurred during the process. 8.5.1.4 The tracking system summarizes reported information. Clients of the system may inquire the information. One of the clients may be scheduler/ dispatcher and it may change process machine for specific material to get better product quality. 8.5.1.5 A client may ask target equipment to handle specific event which shows reaching limited cycle time for a jig on the equipment. Expected handling for the event, for example, is to stop processing. The client may ask to pause before starting a lot if current cycle time of the jig is very close to expiration cycle time. 8.5.2 Application of Tracking System — Because this document specify basic capability tracking Jigs and Implements, specific\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview (Part 5)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 8  Overview\n\nContent: applications for semiconductor device manufactures or equipment suppliers and such advanced applications as securitized tracking are out of scope of this document. Using this basic specification and additional capability supplied by equipment users, equipment suppliers or system suppliers, expected advanced capabilities can be realized.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: 9.1 Domain Analysis and Object Based Modeling — To model and design complicated system or to have shared specification of a part of system which is used widely in deferent applications, some sophisticated methodologies are required. Analyzing problem domain by object oriented paradigm is one of the best practices to be taken. Because this technology is frequently used in many SEMI standards, there is no confusion if this document follows the way. 9.1.1 UML Representation — Above diagram is modeling of Tracking Capability for Jigs and/or Implements in UML diagram. It is not required to make system with object oriented programming language for compliant to this specification. Even if UML is typical object oriented representation, object oriented implementation may be expected but may not be mandatory. 9.1.2 Total Modeling — To make sure what the tracking system is, the model depicted above describes not just tracking information acquisition but also includes fundamental management of the whole tracking system. 9.1.2.1 Acquisition of Minimum\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: Tracking Information — Such capabilities as awareness of Attachments, accumulation of use history until release timing and its report are required to acquire use-history of Jigs and/or Implements on equipment. Cross-hatched classes (HistoryBuffer and Secondment) in light red and their collaboration correspond to the acquisition capabilities. These capabilities are usually implemented on equipment. 9.1.2.2 Action on Expiration — One of the biggest purposes of tracking such Attachments as Jigs and/or Implements is to prevent misprocessing with invalid attachments. An Attachment may be invalid when its use gets beyond expected duration or cycles. This is such a capability as an expected action when an Attachment has been expired by facing invalid situation. Light-red grided class (Expiry) and its collaboration correspond to the special Action capabilities. This capability is usually implemented on equipment. 9.1.2.3 Identification and Verification of Attachments — Such information system as equipment controllers may not understand what the\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 3)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: attachment is even if attachment ID is known. Capability to understand that and verify between information and physical attachment helps not only above fundamental capability but also ensured tracking. Pinkhatched classes (JitMachine and Invoice) and their collaboration correspond to this capability. This capability is also implemented on equipment usually. 9.1.2.4 Tracking Information Management — Such information system as Inventory is necessary to manage and apply acquired Attachment tracking information effectively. Blue Thick-shadowed classes (Attachment, HistoryRecord, Inventory and PublicLocation) and their collaboration correspond to this capability. This capability is usually installed on master equipment, cell controller or host computer. Or it may be distributed on these platforms. 9.1.2.5 Further Application Interface — Final purposes of tracking such attachments as Jigs and Implements are controlling life time of attachments, increasing effectiveness of attachments, preventing falt process and achieve good quality of products. In\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 4)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: this regard this interface capability helps applications. Green light shadowed class (HistoryDB) corresponds this capability. This capability may be installed on the host or application server. 9.1.3 Collaboration in Class Modeling — An example of collaboration is as follows. 9.1.3.1 Application seeks certain type of jigs through HistoryDB. It finds good ones to produce expensive products. It asks Inventory where they are. 9.1.3.2 It picks up the ones and delivers them to target equipments. It updates Inventory and Inventory sends invoices to JitMachines. Invoice object is created on each JitMachine. At the time each jig arrives at each piece of target equipment, the Invoice verifies. If verification succeeds, this fact is notified to Inventory, location is updated, Secondment is created and JitMachine identifies what the sent jigs are. At the same time HistoryBuffer is also created by the Secondment. 9.1.3.3 Equipment runs. HistoryBuffer accumulates events, process conditions and cycle. At some moment, it reports the buffer content to\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 5)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: Inventory. The Inventory manages HistoryRecord. 9.2 Attachment — Attachment represents a Jig or an Implement. This concept is used to handle common nature of the both items. 9.2.1 Attachment object — Attachment object represents such supporting resource as Jig or Implement logically. Attachment object is an instance of Attachment class defined later. Attachment object identifies corresponding physical attachment and its information. This object is abbreviated as “Attachment” in this document and often ‘object’ is omitted. 9.2.2 Attachment Class — Attachment Class defines its inherent data, behavior and services. This class generalizes Jig and Implement registered in an Inventory. This class is illustrated as above for reference. 9.2.2.1 Responsibility of Attachment — This class is responsible for holding and organizing such information as history for a Jig or Implement belonging to an Inventory. 9.2.2.1.1 To complete the responsibility it accepts creation/removal of a HistoryRecord, adding events or increment time/duration requests and\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 6)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: inquiry. They are defined as services of Attachment in this specification. Service names may be different from capabilities above. 9.2.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.2.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. However it has to be defined if this class has explicit state, state model is not defined here because this class is stateless. 9.3 Exception — Exception is unusual state on any\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 7)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: Jig and/or Implement or on the tracking capability including hazardous situation: potential or already destroy materials, attachments, equipment, explosive or insure/kill human. Exception happens on equipment or may be storage capability of corresponding inventory. This fact may be added to history. 9.3.1 Exception Object — Exception object represents unusual situation happened usually on equipment. It is created at the time it is raised. It is destructed after normal condition is recovered from the situation. Exception object is an instance of Exception class defined later. This object is abbreviated as “Exception” in this document and often ‘object’ is omitted. 9.3.2 Exception Class — Exception Class defines its inherent data, behavior and services. This class is illustrated as above for reference. 9.3.2.1 Responsibility of Exception — This class is responsible for identifying situation, its status and such subject as Jigs or Implements. 9.3.2.1.1 To complete the responsibility it accepts notification of state change or adding appendix for\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 8)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: the state. They are defined as services of Exception in this specification. Service names may be different from capabilities above. 9.3.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.3.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. Because this class has explicit state, it defines following states and state model by state chart and transition definition table. 9.3.2.1.3.1 SET — Unusual situation is still\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 9)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: effective. 9.3.2.1.3.2 CLEARED — Unusual situation is removed and it is normal condition about the cause of exception. Table 1 Transition Definition Table of Exception 9.4 Expiry — Expiry represents a kind of nature of a Jig or Implement which has explicit valid duration: processed time period, critical process time, cycle and so on. An Expiry is prepared for a specific duration to allow special action on the Attachment when it has expired. 9.4.1 Expiry Object — Expiry object encapsulates a series of information about one of expiry conditions on an Attachment. It is created at the time Secondment, a representation of an Attachment on equipment, is created or an instruction to specify the expiry is accepted by the Secondment and destructed when the Secondment is removed from equipment. It is also destructed to withdraw expiration after special action is invoked when it fires the expiration. Expiry object is an instance of Expiry class defined later. This object is abbreviated as “Expiry” in this document and often ‘object’ is omitted. 9.4.2\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 10)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: Expiry Class — Expiry Class defines its inherent data, behavior and services. This class is illustrated as above for reference. 9.4.2.1 Responsibility of Expiry — This class is responsible for maintaining expiration of such subject as Jigs or Implements. 9.4.2.1.1 To complete the responsibility it checks expiration subject of the Attachment. This is started at the time it is created. Services to help the responsibility are defined in this specification. Service names may be different from capabilities above. 9.4.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.4.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 11)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. Because this class has explicit state, it defines following states and state model by state chart and transition definition table. 9.4.2.1.3.1 VALID — Attachment is valid for a subject. 9.4.2.1.3.2 EXPIRED — Attachment is invalid because of expiration of specified duration. Table 2 Transition Definition Table of Expiry 9.5 History — History is the concept to track what happens on Jigs and/or Implements and how they are used. A few object classes are modeled to complete this capability. 9.6 HistoryBuffer — HistoryBuffer is tentative history information of a Jig or Implement on equipment. The information is reported to Inventory periodically or at some milestones. When it is reported, the information is cleared for new information. 9.6.1 HistoryBuffer Object — HistoryBuffer object represents buffer area of tentative history information of\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 12)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: an attachment on equipment. It is created at the time an attachment is created and destructed after the attachment is removed. HistoryBuffer object is an instance of HistoryBuffer class defined later. This object is abbreviated as “HistoryBuffer” in this document and often ‘object’ is omitted. 9.6.2 HistoryBuffer Class — HistoryBuffer Class defines its inherent data, behavior and services. This class is illustrated as above for reference. 9.6.2.1 Responsibility of HistoryBuffer — This class is responsible for keeping temporary history information of Jig or Implement on equipment and clear the information after it is reported to Inventory. 9.6.2.1.1 To complete the responsibility it accepts information what happens on an attachment or how it is used including period or cycle. It also accepts inquiries. They are defined as services of HistoryBuffer in this specification. Service names may be different from capabilities above. 9.6.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 13)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.6.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. Because this class has explicit state, it defines following states and state model by state chart and transition definition table. 9.6.2.1.3.1 Empty — No history information is accumulated. 9.6.2.1.3.2 Buffered — Some history information are accumulated and they are not reported. Table 3 Transition Definition Table of HistoryBuffer State 9.7 History Data Base — HistoryDB is an interface of whole history information for\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 14)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: application. 9.7.1 History Data Base object — History Data Base object keeps history data of all Jigs and Implements in a Inventory. History Data Base object is an instance of History Data Base class defined later. There is just one History Data Base object corresponding to a Inventory. This object is abbreviated as “HistoryDB” in this document and often ‘object’ is omitted. 9.7.2 History Data Base Class — HistoryDB Class defines its inherent data, behavior and services. This class manages history of all Jigs and Implements in an Inventory. This class is illustrated as above for reference. 9.7.2.1 Responsibility of HistoryDB — This class is responsible for managing and organizing history information for all Jigs and/or Implements registered in an Inventory. 9.7.2.1.1 To complete the responsibility it accepts adoption/reset of attachment history, updating requests and inquiry. They are defined as services of HistoryDB in this specification. Service names may be different from capabilities above. 9.7.2.1.2 Inherent data is used to complete the\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 15)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.7.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. However it has to be defined if this class has explicit state, state model is not defined here because this class is stateless. 9.8 HistoryRecord — HistoryRecord is a record for each Attachment registered in Inventory. 9.8.1 HistoryRecord object — HistoryRecord object keeps history data of a certain Jig or Implement. HistoryRecord object is an instance\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 16)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: of HistoryRecord class defined later. HistoryRecord objects are aggregated by a HistoryDB object. This object is abbreviated as “HistoryRecord” in this document and often ‘object’ is omitted. 9.8.2 HistoryRecord Class — HistoryRecord Class defines its inherent data, behavior and services. This class manages history of a Jig or Implement belonging to a HistoryDB. This class is illustrated as above for reference. 9.8.2.1 Responsibility of HistoryRecord — This class is responsible to hold and organize history information for a Jig or Implement belonging to a HistoryDB. 9.8.2.1.1 To complete the responsibility it accepts removal of a HistoryRecord, adding events or increment time/duration requests and inquiry. They are defined as services of HistoryRecord in this specification. Service names may be different from above capabilities. 9.8.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 17)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.8.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. However it has to be defined if this class has explicit state, state model is not defined here because this class is stateless. 9.9 Inventory — There is an Inventory to track or manage all such attachments as jigs and Implements in a factory. The inventory may be decomposed into a couple of sub-inventories for jigs and implements respectively. Or it may be divided into a few sub-inventories by type or category for convenience of managing people. Even if so an inventory of a type of attachments used for specific\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 18)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: type of equipment is required to be seen as one whole inventory by inventory user. Because inventory is a logical matter rather than a physical one, some of the attachments can be shared by another inventory for different types of equipment and both inventories can be managed without any confusion. 9.9.1 Inventory Object — The inventory is treated as Inventory object in most part of this specification. It may be written sometimes as “Inventory” for short but it must be started with the capital letter ‘I’. Inventory object is an instance of Inventory Class which is defined later. Tracking system has just one Inventory object. 9.9.2 Inventory Class — Inventory Class defines its inherent data, behavior and services. This class manages all Jigs and Implements in certain area. The area here may not be always special but may be logical in equipment type, attachment type, supplier or nay combination of such category. This class is illustrated as above for reference. 9.9.2.1 Responsibility of Inventory — This class is responsible for managing and\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 19)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: organizing registered Jigs and/or Implements. 9.9.2.1.1 To complete the responsibility it accepts registration/unregistration of attachments, updating requests and inquiry. They are defined as services of Inventory in this specification. Service names may be different from above capabilities. 9.9.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.9.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. However it has\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 20)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: to be defined if this class has explicit state, state model is not defined here because this class is stateless. 9.10 Invoice — Invoice is a set of information for such attachment as Jig or an Implement which is to be transported to equipment. The information set is sent to the equipment before or after actual attachment has arrived. If there is something wrong with the attachment or the information on the equipment, equipment ask for new one. When another attachment or information has arrives, the equipment checks it again. 9.10.1 Invoice Object — Invoice object is created at the time a set of invoice information has received at equipment. If the equipment has more than one load port for the attachment, port ID may be specified in the information set. If port ID is not specified, destination port must be anonymous. If more than one attachment IDs or Load Ports are specified, they are candidate but they are not ordering information nor correspondence between a couple of sets. However there must be correspondent between attachments and\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 21)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: histories. This object is removed at the time all information has been verified regardless of the result. Invoice object is an instance of Invoice class defined later. This object is abbreviated as “Invoice” in this document and often ‘object’ is omitted. Figure 12 Invoice Class 9.10.2 Invoice Class — Invoice Class defines its inherent data, behavior and services. This class provides information about Jig or Implement to be tracked on equipment. This class is illustrated as above for reference. 9.10.2.1 Responsibility of Invoice — This class is responsible for holding and organizing invoice information as well as verification. This object verifies physical attachments with invoice information at the time this object has been created with unverified attachments on equipment or new physical attachment arrives. 9.10.2.1.1 To complete the responsibility it accepts inquiries of inherent information. They are defined as services of Invoice in this specification. Service names may be different from above capabilities. 9.10.2.1.2 Inherent data is\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 22)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.10.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. However it has to be defined if this class has explicit state, state model is not defined here because this class is stateless. 9.11 JitMachine — JitMachine is a piece of equipment with full tracking capability of Jigs and/or Implements. JitMachie collaborate with Inventory so that the inventory fulfills its responsibility. 9.11.1\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 23)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: JitMachine Object — JitMachine object represents a piece of equipment which completes responsibility for tracking such attachments as Jigs and/or Implements on equipment. It verifies passed attachments whether they are right ones to be used on the equipment or not even if they are expected type or compatible. It also let the inventory know that certain attachments have arrived at the equipment or left for the inventory. JitMachine object is an instance of JitMachine class defined later. This object is abbreviated as “JitMachi” in this document and often ‘object’ is omitted. 9.11.2 JitMachine Class — JitMachine Class defines its inherent data, behavior and services. This class is illustrated as above for reference. 9.11.2.1 Responsibility of JitMachine — This class is responsible for verifying attachments, reporting in/out of equipment and organizing Jigs or Implements. 9.11.2.1.1 To complete the responsibility it accepts invoice which shows what are delivered attachments and related requests. They are defined as services of JitMachine in this\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 24)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: specification. Service names may be different from capabilities above. 9.11.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.11.2.1.2.1 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. Because this class has explicit state, it defines following states and state model by state chart and transition definition table. 9.11.2.1.2.2 INSERVICE — JitMachine is available to track Attachments. 9.11.2.1.2.3 OUTOFSERVICE —\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 25)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: JitMachine is not available to track Attachments. Table 4 Transition Definition Table for JitMachine 9.12 Public Location — Public Location represents a location of a Jig or an Implement on the tracking system. This is just for official location other than such private location as detail position in equipment. A public Location may have more than one Jigs and/or Implements. 9.12.1 Public Location Object — Public Location object represents an official location potentially occupied by such supporting resource as a Jig or an Implement and identifies what occupant is if it is occupied. Public Location object is an instance of Public Location class defined later. This object doesn’t identify physical location in equipment. This object is abbreviated as “PublicLocation” in this document and often ‘object’ is omitted. 9.12.1.1 Public Location object is assigned on a piece of equipment and represent one and only one official location of the equipment. However a piece of equipment may have more than one Public Location objects, they have to be\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 26)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: prepared for different types of Attachments. But a Public Location may be used by two or more different attachment types if they can share the physical attachment location and such side effects as contamination may not be expected. 9.12.1.2 It may be also assigned in physical or logical inventory. More than one Public Location may be defined for the inventory. If it is physically divided, each location have to be prepared for physically categorized attachments such view point as attachment types or allowable dimensions. If it is logically divided, there have to be explicit rule to distribute or the inventory has to manage implicitly. 9.12.2 Public Location Class — Public Location Class defines its inherent data, behavior and services. This class is illustrated as above for reference. 9.12.2.1 Responsibility of PublicLocation — This class is responsible for identifying location, its status including remaining room to be occupied by Jigs or Implements and manage them. 9.12.2.1.1 To complete the responsibility it accepts many inquiries about\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 27)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: inherent data of the class or request to update them. They are defined as services of PublicLocation in this specification. Service names may be different from capabilities above. 9.12.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.12.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. Because this class has explicit state, it defines following states and state model by state chart and transition definition\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 28)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: table. 9.12.2.1.3.1 UNOCCUPIED — Public Location is not occupied by any jig or implement. 9.12.2.1.3.2 OCCUPIED — Public Location is occupied by some jigs or/and implements. 9.12.2.1.3.3 VACANT — Public Location is occupied by some jigs or implements and further occupancy is possible. 9.12.2.1.3.4 FULL — Public Location is occupied by some jigs or implements and no further occupancy is allowed. Table 5 Transition Definition Table for Public Location State #1 A unit of transition may be decomposed into transition fragments described in transition numbers on leftmost column in this table and the state chart above for explanation purpose. If a unit of transition is reported or represented, sequenced fragments are required to be consolidated and identified one unique number. For example when capacity of a location is just one and transition fragment $\\# 6$ happens on the state UNOCCUPIED, new state may not be OCCUPIED but has to be FULL. Following table defines unique unit transition ID. Table 6 Transition ID of Public Location State 9.13\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 29)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: Secondment — Secondment represents an Attachment on equipment. This has subset information of the original Attachment’s. 9.13.1 Secondment Object — Secondment object represents such supporting resource as Jig or Implement on equipment logically. Secondment object is an instance of Secondment class defined later. This object is created at the time delivered physical attachment has been verified successfully. If the equipment doesn’t have verification capability, this object is created at the time an Attachment arrived and it is identified. This is removed when physical Attachment has been taken away from the equipment. Attachment object identifies corresponding physical attachment on equipment and its information. This object is abbreviated as “Secondment” in this document and often ‘object’ is omitted. 9.13.2 Secondment Class — Secondment Class defines its inherent data, behavior and services. This class generalizes Jig and Implement registered on equipment. This class is illustrated as above for reference. 9.13.2.1 Responsibility of\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 30)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: Secondment — This class is responsible for holding and organizing such information as history for a Jig or Implement on equipment. 9.13.2.1.1 To complete the responsibility it accepts requests and inquiries. Also it checks events, exceptions and expiration by itself and stimulates such collaborative objects as HistoryBuffer and Exception. They are defined as services of Secondment in this specification. Service names may be different from above capabilities. 9.13.2.1.2 Inherent data is used to complete the responsibility. The data is also referred to as attributes and they have to be defined in some way. This document doesn’t define attributes directly with attribute definition table shown in some SEMI standard documents but defines them indirectly as service parameters. 9.13.2.1.3 Behavior is also defined to complete the responsibility. Behavior is often represented by collaboration with outside of this class and state model. Collaboration reflects a part of associations of this class with others. Collaboration works by asking services\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 31)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: defined on accompanying object which is the other end of association on class diagram. State model is representation of the other part of behavior of this class. Because this class has explicit state, it defines following states and state model by state chart and transition definition table. This class has a couple of parallel substates: USING and EXPIRATION. 9.13.2.1.3.1 USING — This substate specifies use of Secondment whether it is in-use or not. 9.13.2.1.3.2 NOTUSED — One of substates of USING state. Attachment (Secondment) is located somewhere on equipment but it is not used for such intension as process or maintenance. 9.13.2.1.3.3 INUSE — One of substates of USING state. Attachment (Secondment) is used for such intension as process or maintenance right now. It doesn’t matter where it is on equipment but 9.13.2.1.3.4 EXPIRATION — This substate specifies effectiveness of Secondment whether it is expired or not. If there are more than one expiration condition, more than one EXPIRATION substates could be paralleled but it’s out of\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts (Part 32)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 9  Concepts\n\nContent: specification of this document. If all the conditions doesn’t fit, it must be EFFEVTIVE and if one of the conditions fired, it must be EXPIRED. 9.13.2.1.3.5 EFFECTIVE — One of substates of EXPIRATION state. This substate represents that Attachment (actually Secondment) is not expired and it is no problem to keep using. 9.13.2.1.3.6 NOTUSED — One of substates of EXPIRATION state. This substate represents that Attachment (actually Secondment) has been expired and it is not recommended to use. Table 7 Transition Definition Table for JitMachine\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking\n\nContent: 10.1 Services — This section defines content of service messages provided by classes in this document. 10.1.1 Format and Protocol — The message format and communication protocol may not be defined here because they are dependent to specific implementation. 10.1.2 Public Interface — Service definition is a part of definition of public interface. Implementation of services may not be always required if a set of the message communication between objects or from outside of this system are not the boarder of deployment unite provided by different suppliers. 10.1.3 Component Based Deployment — However even if they are not, implementing it may help component base deployment. If it is component based, it is easy to replace, update or improve system by component or such subcomponent as class. 10.2 Service Definition — Service definitions are given for each class. 10.2.1 Attachment — Following tables defines services of Attachment class. 10.2.1.1 Service List — Attachment class has following services. Table 8 10.2.1.2 showId —\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking\n\nContent: This service is used to inquire Attachment’s ID. Following table defines its parameters. Table 9 10.2.1.3 showName — This service is used to inquire Attachment’s name. Following table defines its parameters. Table 10 10.2.1.4 changeName — This service is used to change Attachment’s Name. Following table defines its parameters. Table 11 10.2.1.5 showType — This service is used to inquire Attachment type. Following table defines its parameters. Table 12 10.2.1.6 showHistory — This service is used to inquire Attachment history. Following table defines its parameters. Table 13 10.2.1.7 updateHistory — This service is used to add Attachment history. Following table defines its parameters. Table 14 10.2.1.8 Parameter List — Above services use following parameters. Table 15 10.2.2 Exception — Following tables define services of Exception class. 10.2.2.1 Service List — Exception class has following services. Table 16 10.2.2.2 showId — This service is used to inquire Exception’s ID. Following table defines its parameters.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking (Part 3)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking\n\nContent: Table 17 10.2.2.3 showCategory — This service is used to inquire Exception’s category. Following table defines its parameters. Table 18 10.2.2.4 showCode — This service is used to inquire Exception’s code. Following table defines its parameters. Table 19 10.2.2.5 showDescription — This service is used to inquire detail description of Exception. Following table defines its parameters. Table 20 10.2.2.6 showSubject — This service is used to inquire subject Attachment of Exception. Following table defines its parameters. Table 21 10.2.2.7 showState — This service is used to inquire Exception’s state. Following table defines its parameters. Table 22 10.2.2.8 updateState — This service is used to update Exception’s state in order to follow reality of corresponding Attachment on equipment. Following table defines its parameters. Table 23 10.2.2.9 destruct — This service is used to remove Exception object. Following table defines its parameters. Table 24 10.2.2.10 Parameter List — Above services use following parameters.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking (Part 4)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking\n\nContent: Table 25 10.2.3 Expiry — Following tables define services of Expiry class. 10.2.3.1 Service List — Expiry class has following services. Table 26 10.2.3.2 showId — This service is used to inquire Expiry’s ID. Following table defines its parameters. Table 27 10.2.3.3 showExpiration — This service is used to inquire expiration condition. Following table defines its parameters. Table 28 10.2.3.4 changeExpiration — This service is used to substitute expiration condition. Following table defines its parameters. 10.2.3.5 showAction — This service is used to inquire an action when expiration condition meets. Following table defines its parameters. Table 29 Table 30 10.2.3.6 changeAction — This service is used to substitute an action when expiration condition meets. Following table defines its parameters. Table 31 10.2.3.7 showDescription — This service is used to inquire detail purport of Expiry and related action. Following table defines its parameters. Table 32 10.2.3.8 changeDescription — This service is used to substitute\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking (Part 5)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking\n\nContent: detail purport of Expiry and related action. Following table defines its parameters. Table 33 10.2.3.9 showSubject — This service is used to inquire subject Attachment of Expiry. Following table defines its parameters. Table 34 10.2.3.10 showState — This service is used to inquire Expiry’s state. Following table defines its parameters. Table 35 10.2.3.11 destruct — This service is used to remove Expiry object. Following table defines its parameters. Table 36 10.2.3.12 Parameter List — Above services use following parameters. 10.2.4 HistoryBuffer — Following tables define services of HistoryBuffer class. Table 37 10.2.4.1 Service List — HistoryBuffer class has following services. Table 38 10.2.4.2 ShowAttachment — This service is used to inquire HistoryBuffer’s ID. Following table defines its parameters. 10.2.4.3 showHistory — This service is used to inquire contents of history buffer. Following table defines its parameters. Table 39 Table 40 10.2.4.4 updateHistory — This service is used to append historic information.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking (Part 6)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10  Services for Attachment Tracking\n\nContent: Following table defines its parameters. Table 41 10.2.4.5 showReleaseCondition — This service is used to inquire condition when HistoryBuffer release buffered historic information. The buffer is cleared after releasing contents. Following table defines its parameters. Table 42 10.2.4.6 setReleaseCondition — This service is used to set up condition when HistoryBuffer release buffered historic information. The buffer is cleared after releasing contents. Following table defines its parameters. Table 43 10.2.4.7 showState — This service is used to inquire buffering state. Following table defines its parameters. Table 44 10.2.4.8 destruct — This service is used to remove HistoryBuffer object. Following table defines its parameters. Table 45\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.4.9  Parameter List — Above services use following parameters. (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.4.9  Parameter List — Above services use following parameters.\n\nContent: Table 46 10.2.5 HistoryDB — Following tables define services of HistoryDB class. 10.2.5.1 Service List — HistoryDB class has following services. Table 47 10.2.5.2 update — This service is used to touch up history information. Following table defines its parameters. Table 48 10.2.5.3 reset — This service is used to reset fluctuateable historic value in history. Following table defines its parameters. Table 49 10.2.5.4 adopt — This service is used to adopt new history information as a HistoryRecord. This service is typically used to add an attachment to inventory. Following table defines its parameters. Table 50 10.2.5.5 disown — This service is used to remove a HistoryRecord from history data base. Following table defines its parameters. Table 51 10.2.5.6 showHistory — This service is used to inquire history of an Attachment. Following table defines its parameters. Table 52 10.2.5.7 listRecords — This service is used to list records in history data base. Following table defines its\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.4.9  Parameter List — Above services use following parameters. (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.4.9  Parameter List — Above services use following parameters.\n\nContent: parameters. Table 53\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters. (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters.\n\nContent: Table 54 10.2.6 HistoryRecord — Following tables define services of HistoryRecord class. 10.2.6.1 Service List — HistoryRecord class has following services. Table 55 10.2.6.2 fluctuate — This service is used to make an increment or decrement such a historic value as used period or cycle. Following table defines its parameters. Table 56 10.2.6.3 addEvent — This service is used to append event information. However an exception may not be an event but a state, it occurrence of the exception is an event. To record an exception in history this service is used. Following table defines its parameters. Table 57 10.2.6.4 listEvents — This service is used to list up events recorded as history with identification, code and timestamp. Following table defines its parameters. Table 58 10.2.6.5 showEvent — This service is used to inquire full information of one of events stored as history. Following table defines its parameters. Table 59 10.2.6.6 showHistory — This service is used to inquire history in\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters. (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters.\n\nContent: HistoryRecord. Following table defines its parameters. Table 60 10.2.6.7 destruct — This service is used to remove HistoryRecord object. This service is typically used when an attachment is removed from inventory. Following table defines its parameters. Table 61 10.2.6.8 Parameter List — Above services use following parameters. Table 62 10.2.7 Inventory — Following tables define services of Inventory class. 10.2.7.1 Service List — Inventory class has following services. Table 63 10.2.7.2 update — This service is used to updates information for an Attachment registered in Inventory. Following table defines its parameters. 10.2.7.3 install — This service is used to register a brand new or used Attachment for adding on Inventory. Following table defines its parameters. Table 64 Table 65 10.2.7.4 uninstall — This service is used to unregister an Attachment for removing from Inventory. Following table defines its parameters. Table 66 10.2.7.5 showNamespace — This service is used to inquire\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters. (Part 3)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters.\n\nContent: target equipment group. Following table defines its parameters. Table 67 10.2.7.6 changeNamespace — This service is used to change target equipment group. Following table defines its parameters. Table 68 10.2.7.7 listUp — This service is used to inquire registered Attachments in Inventory. Following table defines its parameters. Table 69 10.2.7.8 showData — This service is used to inquire information of a registered Attachment. Following table defines its parameters. Table 70 10.2.7.9 Parameter List — Above services use following parameters. Table 71 10.2.8 Invoice — Following tables defines services of Invoice class. 10.2.8.1 Service List — Invoice class has following services. Table 72 10.2.8.2 showId — This service is used to inquire Invoice’s ID. Following table defines its parameters. Table 73 10.2.8.3 showAttachments — This service is used to inquire a list of Attachment identification written in Invoice. Following table defines its parameters. 10.2.8.4 showTypes — This service is\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters. (Part 4)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.5.8  Parameter List — Above services use following parameters.\n\nContent: used to inquire Attachment types respective to Attachment list above. Following table defines its parameters. Table 74 Table 75 10.2.8.5 showLoadports — This service is used to inquire expected load ports to load Attachments. Following table defines its parameters. Table 76 10.2.8.6 showHistory — This service is used to inquire Attachment history. Following table defines its parameters. Table 77\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters. (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters.\n\nContent: Table 78 10.2.9 JitMachine — Following tables defines services of JitMachine class. 10.2.9.1 Service List — JitMachine class has following services. Table 79 10.2.9.2 showId — This service is used to inquire JitMachine’s ID. Following table defines its parameters. Table 80 10.2.9.3 showName — This service is used to inquire human friendly name of Jigs/Implements Tracking Machine. Following table defines its parameters. Table 81 10.2.9.4 showType — This service is used to inquire Jigs/Implements Tracking Machine type. Following table defines its parameters. Table 82 10.2.9.5 receiveInvoice — This service is used to delivers Invoice information to specific JitMachine. Following table defines its parameters. Table 83 10.2.9.6 showAttachments — This service is used to inquire a list of Attachments staying on JitMachine. Following table defines its parameters. Table 84 10.2.9.7 showExceptions — This service is used to inquire effective Exceptions raised on a JitMachine. Following table\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters. (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters.\n\nContent: defines its parameters. Table 85 10.2.9.8 Parameter List — Above services use following parameters. Table 86 10.2.10 PublicLocation — Following tables define services of PublicLocation class. 10.2.10.1 Service List — PublicLocation class has following services. Table 87 10.2.10.2 showId — This service is used to inquire location’s identification. Following table defines its parameters. Table 88 10.2.10.3 showName — This service is used to inquire human friendly name of PublicLocation. Following table defines its parameters. Table 89 10.2.10.4 changeName — This service is used to replace human friendly name of PublicLocation. Following table defines its parameters. Table 90 10.2.10.5 showLocationType — This service is used to inquire type of PublicLocation. Following table defines its parameters. Table 91 10.2.10.6 showPossibleTypes — This service is used to inquire acceptable Attachment types for the Public Location. Following table defines its parameters. Table 92 10.2.10.7 showCapacity\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters. (Part 3)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters.\n\nContent: — This service is used to inquire maximum number of occupancy of Attachment for Public Location. Following table defines its parameters. Table 93 10.2.10.8 showAvailableSpace — This service is used to inquire number of available additional occupants on the Public Location for Attachment. Following table defines its parameters. Table 94 10.2.10.9 updateOccupancy — This service is used to fluctuate number of available unoccupied space on PublicLocation. Following table defines its parameters. Table 95 10.2.10.10 showAttachments — This service is used to inquire a list of Attachments occupying on PublicLocation. Following table defines its parameters. Table 96 10.2.10.11 showState — This service is used to inquire occupancy state of Public Location. Following table defines its parameters. Table 97 10.2.10.12 updateState — This service is used to update occupancy state of Public Location in order to follow reality of corresponding Attachment on equipment. Following table defines its\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters. (Part 4)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters.\n\nContent: parameters. Table 98 10.2.10.13 Parameter List — Above services use following parameters. Table 99 10.2.11 Secondment — Following tables defines services of Secondment class. 10.2.11.1 Service List — Secondment class has following services. Table 100 10.2.11.2 showId — This service is used to inquire Secondment’s identification. Following table defines its parameters. Table 101 10.2.11.3 showName — This service is used to inquire human friendly name of Secondment. Following table defines its parameters. Table 102 10.2.11.4 changeName — This service is used to replace human friendly name of Secondment. Following table defines its parameters. Table 103 10.2.11.5 showType — This service is used to inquire type of Secondment. Following table defines its parameters. Table 104 10.2.11.6 showState — This service is used to inquire state of Secondment. Following table defines its parameters. Table 105 10.2.11.7 destruct — This service is used to remove Secondment object. This service is\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters. (Part 5)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # 10.2.8.7  Parameter List — Above services use following parameters.\n\nContent: typically used when an attachment is removed from equipment. Following table defines its parameters. Table 106 10.2.11.8 Parameter List — Above services use following parameters. Table 107\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # RELATED INFORMATION 1 USE CASE OF TRACKING JIGS AND IMPLEMENTS\n\nNOTICE:  This related information is not an official part of SEMI T12 and was derived from the work of the originating task force.  This related information was approved for publication by full letter ballot procedures on January 9, 2004.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R1-1  Use Case Diagram\n\nR1-1.1  Use Case diagram is one of good start point to understand and analyze problem domain.  It is often used before modeling a system.  \nR1-1.2  Use Case diagram consists of Actors and Use Cases.  A use case defines something expected to a system related to an actor or between actors.  All use cases build up whole system.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R1-2  Use Case Diagram of Attachment Tracking (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R1-2  Use Case Diagram of Attachment Tracking\n\nContent: R1-2.1 Figure R1-1 is for use cases of Jigs and Implements. R1-2.2 Update Inventory — Jig Handler updates when it takes jig to or brings from equipment. Tool updates when jig has arrived (and verified) and removed. R1-2.3 Update or Check History — Tool reports when it uses some amount of cycle or such things as maintenance, inspection or problem happens. Superintendent checks history of a jig. Provided information is based on data in database with inquiry about current delta on equipment. R1-2.4 Manage Exception — Tool reports when some exception happens. Superintendent instructs something. Tool replies. R1-2.5 Invoice — Superintendent send invoice to let tool know which jig is delivered. Tool asks whether received jig is right one or not. If something is wrong, an exception process is required. R1-2.6 Manage Expiration — When Jig is used repeatedly and it use-time or cycles reaches preset value, tool has to make some expected action to avoid unexpected processing. R1-2.7 Manage Exception — Superintendent\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R1-2  Use Case Diagram of Attachment Tracking (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R1-2  Use Case Diagram of Attachment Tracking\n\nContent: configures effective period or cycle of a Jig. Tool stop using the Jig or notify the event when it is expired. Figure R1-1\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # RELATED INFORMATION 2AN EXAMPLE ON EQUIPMENT WITH SECS-II AND GEM\n\nNOTICE:  This related information is not an official part of SEMI T12 and was derived from the work of the originating task force.  This related information was approved for publication by full letter ballot procedures on January 9, 2004.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R2-1  GEM Level Example\n\nR2-1.1  This example is a possible implementation of attachment tracking capabilities “Acquisition of Minimum Tracking Information” and “Action on Expiration” with SEMI E5 (SECS-II) and SEMI E30 (GEM).  \nR2-1.2  Great many equipment and production lines adopt GEM level implementation around the world because it was standardized more than ten years ago and was the only unified communication standard between equipment and factory host computer for long period.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R2-2  Example Scenario\n\nR2-2.1  An example scenario consists of setting up expiry, tracing data of an attachment and hitting expiration.  \nFigure R2-1\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # RELATED INFORMATION 3 AN EXAMPLE ON EQUIPMENT WITH SECS-II, GEM AND OSS\n\nNOTICE:  This related information is not an official part of SEMI T12 and was derived from the work of the originating task force.  This related information was approved for publication by full letter ballot procedures on January 9, 2004.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R3-1  Example with GEM plus OSS\n\nR3-1.1  This example is a possible implementation of attachment tracking capabilities “Acquisition of Minimum Tracking Information”, “Action on Expiration” and “Identification and Verification of Attachments” with SEMI E5 (SECS-II), SEMI E30 (GEM) and SEMI E39 (OSS).  \nR3-1.2  Object base system modeling and OSS has been recognized recently by equipment users especially in 300 mm fabs as handy tools to access data on equipment because the allows accessing unit by object rather than all values or just one data.\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R3-2  Example Scenario\n\nR3-2.1  An example scenario consists of verification of attachment/setting up expiry, tracing data of an attachment and hitting expiration.  \nR3-2.2  Verification of Attachment/Setting up Expiry  \nFigure R3-1\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R3-2.3  Tracing Data of an Attachment and Hitting Expiration (Part 1)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R3-2.3  Tracing Data of an Attachment and Hitting Expiration\n\nContent: Figure R3-2 Copyright by SEMI® (Semiconductor Equipment and Materials International), 3081 Zanker Road, San Jose, CA 95134. Reproduction of the contents in whole or in part is forbidden without express written consent of SEMI. NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer's instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any\n\nSEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R3-2.3  Tracing Data of an Attachment and Hitting Expiration (Part 2)\n\nTitle: SEMI T12-0305SPECIFICATION FOR TRACING JIGS AND IMPLEMENTS - # R3-2.3  Tracing Data of an Attachment and Hitting Expiration\n\nContent: such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS\n\nThis specification was technically approved by the Global Traceability Committee and is the direct responsibility of the Japanese Traceability Committee. Current edition approved by the Japanese Regional Standards Committee on April 30, 2004.  Initially available at www.semi.org June 2004; to be published July 2004.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 1  Purpose\n\n1.1  The purpose of this document is to map Services and data in Specification of Tracking Jig and Implements into SECS protocol.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 2  Scope\n\n2.1  This document is applied to SECS implementation of Jigs and Implements traceability with some interoperability with semiconductor Manufacturing Execution System (MES).  \nNOTICE: This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 3.1  SEMI Standards\n\nSEMI E5 — SEMI Equipment Communication Standard 2 Message Content (SECS-II)  \nSEMI E39 — Object Service Standard: Concepts, Behavior and Services  \nSEMI T12 — Specification for Tracing Jigs and Implements  \nNOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 4  Requirements (Part 1)\n\nTitle: SEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 4  Requirements\n\nContent: 4.1 Service Mapping — This specification maps service instructions defined in “Specification for Jigs and Implements” into SECS stream/functions as follows. Supporting Class names specified in the following table are used as OBJSPEC or a part of OBJSPEC to request services. Table 1 Service Message Instruction Mapping 4.2 Service Parameter Mapping — The Following Table shows the mapping between service parameters defined by “Specification for Tracking Jigs and Implements” standard and Data Items defined by SEMI E5. The data item SVCNAME used with S14F19 is the text string defined in the above table. The data item SPNAME used with S14F19/F20 is also text string defined in following table. It is recommended but not limited to be case sensitive for both data items for future extension. Table 2 Service Message Parameter Mapping 4.3 The Other Communication — The other SECS-II communication may additionally take place to run manufacturing systems. Such communications as event report and exception notification are usually\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 4  Requirements (Part 2)\n\nTitle: SEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 4  Requirements\n\nContent: done from equipment to host. Also some instructive communications for manufacturing as job management and remote command are done from host to equipment. But they are just recommended to do regularly and independently to this specification because they are not in the scope of traceability but in production scope.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # RELATED INFORMATION 1 LEGACY SECS MAPPING FOR RESTRICTED CAPABILITIES\n\nNOTICE:  This related information is not an official part of SEMI T12.1 and was derived from the Japanese Traceability Committee.  This related information was approved for publication by full letter ballot on April 30, 2004.\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # R1-1  Legacy Mapping for Older Equipment (Part 1)\n\nTitle: SEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # R1-1  Legacy Mapping for Older Equipment\n\nContent: R1-1.1 Often older equipment may not have Object Service capability implemented with functions of stream 14. Limited service messages and their parameters are mapped as shown in the following tables. This mapping is one of example legacy mappings and there are not a full mapping but effective functions for Jigs and Implements Tracking. Table R1-1 Service Instructions Mapping Table R1-2 Service Parameters Mapping NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer' s instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position\n\nSEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # R1-1  Legacy Mapping for Older Equipment (Part 2)\n\nTitle: SEMI T12.1-0704 SPECIFICATION FOR SECS PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # R1-1  Legacy Mapping for Older Equipment\n\nContent: respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS\n\nThis specification was technically approved by the Global Traceability Committee and is the direct responsibility of the Japanese Traceability Committee. Current edition approved by the Japnese Regional Standards Committee on April 30, 2004.  Initially available at www.semi.org June 2004; to be published July 2004.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 1  Purpose\n\n1.1  The purpose of this document is to map Services and data in Specification of Tracking Jig and Implements into XML protocol.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 2  Scope\n\n2.1  This document is applied to XML implementation of Jigs and Implements traceability with some interoperability with Surface Mount Technology (SMT) equipment.  \nNOTICE: This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 3  Limitations\n\n3.1  This protocol mapping has a consideration being interoperable with SMT manufacturing it may be used in such area, using this specification on such manufacturing area is not guaranteed because this specification is originally planned to be working on semiconductor manufacturing systems including equipment.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 4.1  SEMI Standards\n\nSEMI T12 — Specification for Tracing Jigs and Implements  \n4.2  Association Connecting Electronics Industries (IPC)/National Electronics Manufacturing Initiative (NEMI)/American National Standard institute (ANSI)  \nIPC-2501 — Definition for Web-Based Exchange of XML data; (July, 2003)  \nIPC-2541 — Generic Requirements for Electronics Manufacturing Shop-Floor Equipment Communication  \n(CAMX); (October, 2001 / ANSI Approved November, 2001)  \n4.3  World Wide Web Consortium (W3C)2  \nREC-xml-20001006 — Extensible Markup Language (XML) 1.0  (Second Edition)  \nNOTE-SOAP-20000508 — Simple Object Access Protocol (SOAP) 1.1  \n4.4  Internet Engineering Task Force3  \nRFC2045 Multipurpose Internet Message Extensions (MIME) Part 1: Format of Internet Message Bodies  \nRFC2616 — Hyper Text Transfer Protocol – HTTP/1.1  \nNOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 5  Terminology\n\n5.1  Acronyms and Abbreviations  \n5.1.1  MIME Multipurpose Internet Message Extensions  \n5.1.2  SOAP — Simple Object Access Protocol  \n5.1.3  XML — eXtensible Markup Language\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements (Part 1)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements\n\nContent: 6.1 Base Protocol Mapping — This XML protocol specification adopts Simple Object Access Protocol (SOAP) over Hyper Text Transfer Protocol (HTTP) on Transmission Control Protocol/Internet Protocol (TCP/IP). Some equipment users produce not only semiconductor devices but also Print Circuit Boards (PCBs). It is convenient for such users to have common messaging protocol with standard messaging for Surface Mount Technology (SMT). For this purpose this protocol mapping extension standard specifies the messaging mechanism conformant to IPC-2501 “Definition for Web-Based Exchange of XML Data” as one of mapping means. Also this extension standard document follows IPC-2541 “Generic Requirements for Electronics Manufacturing Shop-Floor Equipment Communication Messages” and IPC-2551 “Sectional Requirements for Manufacturing Execution System” for that reason. The following subsections describe a part of these specifications for introduction. Refer to these documents for detail reference. 6.2 SOAP Structure — A HTTP message\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements (Part 2)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements\n\nContent: in this specification has an envelope to contain a couple of MIME blocks. One is for SOAP Envelope and the other is for message detail to be able to mix with such nonXML information as binary data. The service message specified in “Specification for Tracking Jigs and Implements” is contained in latter one. SOAP standard envelop MIME Block contains SOAP Header which has message information and SOAP Body which contains SOAP Faults. Outlined diagram is shown in Related Information. Official definitions are given in referenced documents. 6.3 Messaging Mechanism — Message Broker, that is logical middle ware server to handle and relay messages, is assumed somewhere on communication network. While the broker behaves as communication server, the other logical nodes are message clients. Every message starts with a client and responded by the server. Messages communicated between clients are exchanged through the server. The server keeps posted messages from clients in a queue for each individual client. Expecting\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements (Part 3)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements\n\nContent: recipient client asks the server for messages and a topmost message in the queue for the client is responded if the queue is not empty. The recipient client posts acknowledge back to the server. When the recipient replies back a message to the original sender client, same thing happens with switched roles between sender and recipient clients. Explanatory diagrams for this outline are shown in Related Information. Official specification is given in referenced documents. 6.4 Issues Specific to this Messaging — A few issues for IPC based communication protocol for Jigs and Implements Tracking are introduced here. 6.4.1 Domain Configuration — Message Broker has domain configuration information to make sure all acting entities, possible messages with related publisher, recipient and subscriber clients. Also it has other detail characteristics of the domain of communication. Every client needs to look up the information before the first messaging. 6.4.2 Message Information — This is an element contained in SOAP Header.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements (Part 4)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 6  Base Requirements\n\nContent: This information provides time of transaction, sender, destination, message identification and schema type used for service message detail in the second MIME block. 6.4.3 Attributes in Service Message Element — The top element of each service message has date/time of the message, session ID or session reference, request ID or request reference, and optional values. Some of the optional values are extended for Jigs and Implements Tracking communication: linkId, linkCnt and linkExp. The extension may be used for delayed reply message and multiple divided replies to keep conformance of related messages. Table 1 Service Instruction Mapping\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements (Part 1)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements\n\nContent: 7.1 Service Mapping Services defined in “Specification for Tracking Jigs and Implement” are mapped on the following table. 7.1.1 Capitalized Service Message Element Name Base — Each service message is mapped into an XML element with capitalized heading letter to prevent collision with XML or XML Schema native words. 7.1.2 Service Message Element Name Suffix — Because of symmetry of message broker communication and for XML element naming convention, suffix of ‘Request’ or ‘Response’ is added to each service message element name for request or response respectively: e.g. AddEventRequest to request service and AddEventResponse for its response message. 7.2 Service Parameter Mapping — Service parameter type mapping is shown in the following table. Table 2 Service Parameter Type Mapping 7.3 Additional Parameters for Service Messages — Because this protocol mapping works for asynchronous HTTP server-client communication on message broker, such additional parameters to give complementary information as issued time and\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements (Part 2)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements\n\nContent: transaction identification are required to be attached to each message. The information may be dependent to the role of the message. Type mapping of them are shown in the following table. Table 3 Type Mapping of Additional Parameters 7.4 Example XML Message Fragments — The following subsections give examples of some fragments of service messages in XML. A full message is given with envelopes and headers. 7.4.1 addEvent Request — The following XML description is an example of the principal part of service request message for addEvent provided by HistoryRecord objects. Because the structure of parameter ‘History’ is dependent to event, attachment type and equipment, the standard doesn’t define it. Suppliers are required to define the structure or negotiate with specific user. Users need to discuss with suppliers or interpret their structures. <AddEventRequest dateTime ${ \\scriptstyle \\mathsf { \\iota } = ^ { \\prime \\prime } 2 0 0 4 - 0 3 - 2 9 \\mathrm { T } 1 3 : 0 5 : 2 5 . 0 0 0 - 0 8 : 0 0 ^ { \\prime \\prime } }$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements (Part 3)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements\n\nContent: SessionRe $\\scriptstyle { \\mathsf { E } } = { \\mathsf { \\Omega } } ^ { \\prime \\prime }$ SemiJitQs-9876543210” RequestId=”123456”> <History> <HistoryIndex> <Id>120123456789</Id> <Type>UPXB Modl Die XYZ737</Type> </ HistoryIndex> <Event> <Id>12345678</Id> <EventClass $>$ Milestone</EventClass> <NamedValue> <SetPoint>10000</SetPoint> <TotalTimes>150000</TotalTimes> </NamedValue> <Machine>UPXB039</Machine> <TimeStamp>2004-03-29T13:05:18.000-08:00</TimeStamp> <Event> </History> </AddEventRequest> 7.4.2 showTypes Response — The following XML description is an example of the principal part of service response message for showTypes provided by Invoice objects. <ShowTypesResponse dateTim $\\mathsf { a } = ^ { \\prime \\prime } 2 0 0 4 - 0 3 - 2 9 \\mathbb { T } 0 9 : 0 7 : 5 9 . 0 0 0 - 0 8 : 0 0 ^ { \\prime \\prime }$ SessionRef $\\ c =$ ”SemiJitQs-9876543123” RequestRef $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ ”123443” status $\\ c =$ ”GRANTED”> <AttachmentType>UPXB Modl Die XYZ737</AttachmentType> <ServiceStatus> <SvcAck $>$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements (Part 4)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # 7  Requirements\n\nContent: Successful</SvcAck> </ServiceStstus> </ShowTypesResponse>\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # APPENDIX 1 XML SCHEMA\n\nNOTICE:  The material in this appendix is an official part of SEMI T12.2 and was approved by full letter ballot procedures on April 30, 2004.\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 1)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: A1-1.1 XML Schema — XML Schema is a kind of template for documents. The following XML Schemas shows how messages in this XML protocol are represented. A1-1.1.1 Message Schema — Each message in T12 has one XML Schema. Parsing with the schema, application can understand what elements and attributes mean. Also it can check syntax easily. A1-1.1.2 Common Definitions — Common part of the schema is separated and it is included in each message schema. A1-1.2 Enumeration — Attachment specific or eqiopment specific enumeration may not be addressed here. Corresponding part of the shema should be extended or restricted with ‘redefine’ element, for example, in application schema. XML Message Schema Name: T12ChangeNameRequestAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\">\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 2)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Change Name Request - <xsd:element name $\\ c =$ \"ChangeNameRequest\" type $\\ c =$ \"ChangeNameRequestType\"/> <xsd:complexType name $\\ c =$ \"ChangeNameRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"AttachmentName\" type $\\ c =$ \"xsd:string\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType></xxx> </xsd:schema> XML Message Schema Name: T12ChangeNameResponseAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Change Name Response <xsd:element name $\\ c =$ \"ChangeNameResponse\" type $\\\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 3)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: c =$ \"ChangeNameResponseType\"/> <xsd:complexType name $\\ c =$ \"ChangeNameResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"AttachmentName\" type $\\ c =$ \"xsd:string\" minOccurs $\\ c =$ \"0\" maxOccurs $\\ c =$ \"1\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowHistoryRequestAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show History Request <xsd:element name $\\ c =$ \"ShowHistoryRequest\" type $\\ c =$ \"ShowHistoryRequestType\"/> <xsd:complexType name $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 4)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: \"ShowHistoryRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Items\" type $\\ c =$ \"xsd:string\" minOccur $\\begin{array} { r } { \\mathfrak { s } = } \\end{array}$ \"0\" maxOccurs $\\ c =$ \"unbounded” /> <xsd:element name $\\ c =$ \"Restriction\" type $\\ c =$ \"xsd:string\" minOccurs $\\ l =$ \"0\" maxOccurs $\\ c =$ \"unbounded\"/> xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowHistoryResponseAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show History Response <xsd:element name $\\ c =$ \"ShowHistoryResponse\" type $\\ c =$ \"ShowHistoryResponseType\"/>\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 5)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:complexType name $\\ c =$ \"ShowHistoyResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"History\" type $\\ c =$ \"HistoryType\" minOccurs $\\ c =$ \"0\" maxOccurs $\\ c =$ \"unbounded\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowIdRequestAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show ID Request - <xsd:element name $\\ c =$ \"ShowIdRequest\" type $\\ c =$ \"ShowIdRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowIdRequestType\"> <xsd:atributeGroup ref\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 6)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowIdResponseAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show ID Response <xsd:element name $\\ c =$ \"ShowIdResponse\" type $\\ c =$ \"ShowIdResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowIdResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"AttachmentId\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> ML Message Schema Name:\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 7)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: T12ShowNameRequestAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Name Request <xsd:element name $\\ c =$ \"ShowNameRequest\" type $\\ c =$ \"ShowNameRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowNameRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowNameResponseAtt.xsd <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\">\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 8)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show Name Response - <xsd:element name $\\ c =$ \"ShowNameResponse\" type $\\ c =$ \"ShowNameResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowNameResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"AttachmentName\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowTypeRequestAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 9)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: Type Request - - <xsd:element name $\\ c =$ \"ShowTypeRequest\" type $\\ c =$ \"ShowTypeRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowTypeRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> ML Message Schema Name: T12ShowTypeResponseAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Type Response <xsd:element name $\\ c =$ \"ShowTypeResponse\" type $\\ c =$ \"ShowTypeResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowTypeResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"AttachmentType\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 10)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> ML Message Schema Name: T12UpdateHistoryRequestAtt.xsd for Attachment Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Update History Request <xsd:element name $\\ c =$ \"UpdateHistoryRequest\" type $\\ c =$ \"UpdateHistoryRequestType\"/> <xsd:complexType name $\\ c =$ \"UpdateHistoryRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Items\" type $\\ c =$ \"xsd:string\"/>> <xsd:element name $\\ c =$ \"History\" type $\\ c =$ \"HistoryType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 11)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12UpdateHistoryResponseAtt.xsd <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Update History Response <xsd:element name $\\ O =$ \"UpdateHistoryResponse\" type $\\ c =$ \"UpdateHistoryResponseType\"/> <xsd:complexType name $\\ c =$ \"UpdateHistoyResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12DestructRequestExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 12)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Destruct Request - <xsd:element name $\\ c =$ \"DestructRequest\" type $\\ c =$ \"DestructRequestType\"/> <xsd:complexType name $\\ c =$ \"DestructRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12DestructResponseExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 13)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Destruct Response <xsd:element name $\\ c =$ \"DestructResponse\" type $\\ c =$ \"DestructResponseType\"/> <xsd:complexType name $\\ c =$ \"DestructResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"State\" type $\\ c =$ \"ExceptionStateType\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> <!-- - -\\$\\$\\$ State for Exception \\$\\$\\$- <xsd:simpleType name $\\ c =$ \"ExceptionStateType\"> <restriction base $\\ c =$ \"xsd:string\"> <enumeration value $\\ c =$ \"CLEARED\"/> <enumeration value $\\ c =$ \"SET\"/> <enumeration value $\\ c =$ \"NO STATE\"/> </restriction> </xsd:simpleType> </xsd:schema> XML Message Schema Name: T12ShowCategoryRequestExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 14)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Category Request - <xsd:element name $\\ c =$ \"ShowCategoryRequest\" type $\\ c =$ \"ShowCategoryRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowCategoryRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show Category Response - <xsd:element name $\\ c =$ \"ShowCategoryResponse\" type $\\ c =$ \"ShowCategoryResponseType\"/>\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 15)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:complexType name $\\ c =$ \"ShowCategoryResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Category\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowCodeRequestExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show Code Request - <xsd:element name $\\ O =$ \"ShowCodeRequest\" type $\\ c =$ \"ShowCodeRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowCodeRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 16)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> ML Message Schema Name: T12ShowCodeResponseExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Code Response <xsd:element name $\\ c =$ \"ShowCodeResponse\" type $\\ c =$ \"ShowCodeResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowCodeResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Code\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> Message Schema Name: T12ShowDescriptionRequestExc.xsd for Exception Class\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 17)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show Description Request - <xsd:element name $\\ O =$ \"ShowDescriptionRequest\" type $\\ c =$ \"ShowDescriptionRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowDescriptionRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowDescriptionResponseExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 18)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Description Response <xsd:element name $\\ c =$ \"ShowDescriptionResponse\" type $\\ c =$ \"ShowDescriptionResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowDescriptionResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Description\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowIdRequestExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 19)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show ID Request <xsd:element name $\\ O =$ \"ShowIdRequest\" type $\\ O =$ \"ShowIdRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowIdRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowIdResponseExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show ID Response <xsd:element name $\\ c =$ \"ShowIdResponse\" type $\\ c =$ \"ShowIdResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowIdResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"ExceptionId\" type $\\ c =$ \"xsd:string\"/>\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 20)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowStateRequestExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- - Show State Request - <xsd:element name $\\ O =$ \"ShowStateRequest\" type $\\ c =$ \"ShowStateRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowStateRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowStateResponseExc.xsd for Exception Class\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 21)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show State Response - <xsd:element name $\\ c =$ \"ShowStateResponse\" type $\\ c =$ \"ShowStateResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowStateResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"State\" type $\\ c =$ \"ExeptionStateType\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> <!- - -\\$\\$\\$ State for Exception \\$\\$\\$- - <xsd:simpleType name $\\ c =$ \"ExceptionStateType\"> <restriction base $\\ O =$ \"xsd:string\"> <enumeration value $\\ c =$ \"CLEARED\"/> <enumeration value $\\ c\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 22)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: =$ \"SET\"/> <enumeration value $\\ c =$ \"NO STATE\"/> </restriction> </xsd:simpleType> </xsd:schema> XML Message Schema Name: T12ShowSubjectRequestExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Show Subject Request - <xsd:element name $\\ c =$ \"ShowSubjectRequest\" type $\\ c =$ \"ShowSubjectRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowSubjectRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowSubjectResponseExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 23)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Subject Response <xsd:element name $\\ c =$ \"ShowSubjectResponse\" type $\\ c =$ \"ShowSubjectResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowSubjectResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"AttachmentId\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12UpdateStateRequestExc.xsd <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 24)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualifi <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Update State Request <xsd:element name $\\ c =$ \"UpdateStateRequest\" type $\\ c =$ \"UpdateStateRequestType\"/> <xsd:complexType name $\\ c =$ \"UpdateStateRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"State\" type $\\ c =$ \"ExeptionStateType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> <!- -\\$\\$\\$ State for Exception \\$\\$\\$- <xsd:simpleType name $\\ c =$ \"ExceptionStateType\"> <restriction base $\\ c =$ \"xsd:string\"> <enumeration value $\\ c =$ \"CLEARED\"/> <enumeration value $\\ c =$ \"SET\"/> <enumeration value $\\ c =$ \"NO STATE\"/> </restriction> </xsd:simpleType> </xsd:schema> XML Message Schema Name: T12UpdateStateResponseExc.xsd for Exception Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 25)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Update State Response <xsd:element name $\\ c =$ \"UpdateStateResponse\" type $\\ c =$ \"UpdateStateResponseType\"/> <xsd:complexType name $\\ c =$ \"UpdateStateResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ChangeActionRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 26)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> Change Action Request <xsd:element name $\\ c =$ \"ChangeActionRequest\" type $\\ c =$ \"ChangeActionRequestType\"/> <xsd:complexType name $\\ c =$ \"ChangeActionRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Action\" type $\\ c =$ \"xsd:string\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ChangeActionResponseExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Change Action Response - <xsd:element name $\\ c =$ \"ChangeActionResponse\"\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 27)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: type $\\ c =$ \"ChangeActionResponseType\"/> <xsd:complexType name $\\ c =$ \"ChangeActionResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ChangeExpirationRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Change Expiration Request - <xsd:element name $\\ c =$ \"ChangeExpirationRequest\" type $\\ c =$ \"ChangeExpirationRequestType\"/ <xsd:complexType name $\\ c =$ \"ChangeExpirationRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Expiration\"\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 28)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: type $\\ c =$ \"xsd:string\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ChangeExpirationResponseExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Change Expiration Response - - -> <xsd:element name $\\ c =$ \"ChangeExpirationResponse\" type $\\ c =$ \"ChangeExpirationResponseType\"/> <xsd:complexType name $\\ c =$ \"ChangeExpirationResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/>\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 29)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ChangeDescriptionRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- Change Description Request - -> <xsd:element name $\\ c =$ \"ChangeDescriptionRequest\" type $\\ c =$ \"ChangeDescriptionRequestType\"/> <xsd:complexType name $\\ c =$ \"ChangeDescriptionRequestType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Description\" type $\\ c =$ \"xsd:string\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ChangeDescriptionResponseExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 30)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Change Description Response <xsd:element name $\\ c =$ \"ChangeDescriptionResponse\" type $\\ c =$ \"ChangeDescriptionResponseType\"/ <xsd:complexType name $\\ c =$ \"ChangeDescriptionResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12DestructRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 31)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Destruct Request - <xsd:element name $\\ c =$ \"DestructRequest\" type $\\ c =$ \"DestructRequestType\"/> <xsd:complexType name $\\ c =$ \"DestructRequestType\" $>$ <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12DestructResponseExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Destruct Response <xsd:element name $\\ c =$ \"DestructResponse\" type $\\\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 32)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: c =$ \"DestructResponseType\"/> <xsd:complexType name $\\ c =$ \"DestructResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"State\" type $\\ c =$ \"ExpiryStateType\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> <!- -\\$\\$\\$ State for Expiry \\$\\$\\$- <xsd:simpleType name $\\ c =$ \"ExpiryStateType\" $>$ <restriction base $\\ c =$ \"xsd:string\"> <enumeration value $\\ c =$ \"EXPIRED\"/> <enumeration value $\\ c =$ \"VALID\"/> <enumeration value $\\ c =$ \"NO STATE\"/> </restriction> </xsd:simpleType> </xsd:schema> XML Message Schema Name: T12ShowActionRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 33)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Action Request - <xsd:element name $\\ c =$ \"ShowActionRequest\" type $\\ c =$ \"ShowActionRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowActionRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> ML Message Schema Name: T12ShowActionResponseExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Action Response <xsd:element name $\\ c =$ \"ShowActionResponse\" type $\\ c =$ \"ShowActionResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowActionResponseType\"> <xsd:sequence> <xsd:element name $\\ c\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 34)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: =$ \"Action\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowDescriptionRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Description Request - <xsd:element name $\\ c =$ \"ShowDescriptionRequest\" type $\\ c =$ \"ShowDescriptionRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowDescriptionRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 35)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: Schema Name: T12ShowDescriptionResponseExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Description Response - <xsd:element name $\\ c =$ \"ShowDescriptionResponse\" type $\\ c =$ \"ShowDescriptionResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowDescriptionResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Description\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowExpirationRequestExp.xsd for Expiry Class <xsd:schema xmlns:xsd $\\\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 36)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!-- - - - Show Expiration Request - - - --> <xsd:element name $\\ c =$ \"ShowExpirationRequest\" type $\\ c =$ \"ShowExpirationRequestType\"/> <xsd:complexType name $\\ c =$ \"ShowExpirationRequestType\"> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegRequestAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowExpirationResponseExp.xsd for Expiry Cla <xsd:schema xmlns:xsd $\\ c =$ http://www.w3.org/2001/XMLSchema xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualified\"> <xsd:include\n\nSEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema (Part 37)\n\nTitle: SEMI T12.2-0704 SPECIFICATION FOR XML PROTOCOL FOR TRACKING JIGS AND IMPLEMENTS - # A1-1  XML Message Schema\n\nContent: schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show Expiration Response <xsd:element name $\\ c =$ \"ShowExpirationResponse\" type $\\ c =$ \"ShowExpirationResponseType\"/> <xsd:complexType name $\\ c =$ \"ShowExpirationResponseType\"> <xsd:sequence> <xsd:element name $\\ c =$ \"Expiration\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ServiceStatus\" type $\\ c =$ \"ServiceStatusType\"/> </xsd:sequence> <xsd:atributeGroup ref $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"RegResponseAttr\"/> </xsd:complexType> </xsd:schema> XML Message Schema Name: T12ShowIdRequestExp.xsd for Expiry Class xmlns:jit $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 targetNamespace $\\ c =$ http://www.semi.org/Traceability/T12.2-V01 elementFormDefault $\\ c =$ \"qualified\" attributeFormDefault $\\ c =$ \"qualifi <xsd:include schemaLocation $\\ c =$ \"http://www.semi.org/Traceability/T12.2-V01/CommonDefinitions\"/> <!- Show ID Request - <xsd:element name $\\ c =$ \"ShowIdRequest\" type $\\ O =$",
  "images": []
}