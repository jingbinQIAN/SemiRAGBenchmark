[
  {
    "title": "SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # Table 8  Substrate Transfer Path Object Attribute Specification",
    "content": "7.4  Data Table Object — Table 9 specifies the attributes of the Data Table Object.  \nTable 9  Data Table Object Attribute Specification  \n7.5  IMM Data Table Object — Table 10 specifies the attributes of the IMM Data Table Object.  Note that the IMM Data Table Object inherits the attributes of a Data Table Object (Table 9)."
  },
  {
    "title": "SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # Table 10  IMM Data Table Object Attribute Specification (Part 1)",
    "content": "Title: SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # Table 10  IMM Data Table Object Attribute Specification\n\nContent: 7.5.1 Elements of the complex attributes of the IMM Data Table Object are mapped in Table 11. Table 11 Elements of Complex Attributes of IMM Data Table Object 7.6 IMM Calibration Data Table Object — Table 12 specifies the attributes of the IMM Calibration Data Table Object. Table 12 IMM Calibration Data Table Object Attribute Specification 7.7 IMM Converted Data Table Object — Note that the IMM Converted Data Table Object inherits the attributes of the IMM Data Table Object (Table 10). Table 13 specifies the additional attributes of the IMM Converted Data Table Object. Table 13 IMM Converted Data Table Object Attribute Specification 7.8 IMM Raw Data Table Object — Table 14 specifies the attributes of the IMM Raw Data Table Object. Note that the IMM Raw Data Table Object inherits the attributes of an IMM Data Table Object (Table 10) Table 14 IMM Raw Data Table Object Attribute Specification 7.9 Data Row Object — Table 15 specifies the attributes of the"
  },
  {
    "title": "SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # Table 10  IMM Data Table Object Attribute Specification (Part 2)",
    "content": "Title: SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # Table 10  IMM Data Table Object Attribute Specification\n\nContent: Data Row Object. Table 15 Data Row Object Attribute Specification 7.10 Data Row Template Object — Table 16 specifies the attributes of the Data Row Template object. Table 16 Data Row Template Object Attribute Specification 7.11 Data Information Object — Table 17 specifies the attributes of the Data Table object. Table 17 Data Table Object Attribute Specification 7.12 Additional Attributes of the Substrate Object — Table 18 specifies the attributes of the Substrate object in addition to those specified in SEMI E90. Table 18 Additional Substrate Object Attribute Specification"
  },
  {
    "title": "SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # 8  Event Variables",
    "content": "8.1  Table 19 shows the mapping of event variables to SECS-II format.  All event variables are DVVALs."
  },
  {
    "title": "SEMI E127.1-0705 SPECIFICATION FOR SECS-II PROTOCOL FOR INTEGRATED MEASUREMENT MODULE COMMUNICATIONS (IMMC) - # Table 19  Event Variables mapped to SECS-II",
    "content": "NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application.  The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer's instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein.  These standards are subject to change without notice.  \nBy publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard.  Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES",
    "content": "This provisional specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee.  Current edition approved by the North American Regional Standards Committee on October 16, 2003 and December 4, 2003. Initially available at www.semi.org February 2004; to be published March 2004.  Originally published July 2003."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 1  Purpose (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 1  Purpose\n\nContent: 1.1 This standard specifies XML structures required to encode message header or “envelope” information for asynchronous messages. It applies to applications conforming to other SEMI standards only if they use asynchronous XML messaging for communication. XML is used in software applications to encode information with tags that provide structure and data type information specified in XML Schemas. XML is also used to structure information needed to route and deliver messages between applications. A standard for message headers is required to avoid development and use of multiple incompatible protocols based on XML. This specification will be referred to as “The XML Messaging Specification.” 1.2 The XML Messaging Specification provides definitions of message headers needed for messages exchanged in an asynchronous fashion. Asynchronous messages are delivered independently without dependence on transport technology to correlate related messages. The rationale for choosing an asynchronous message delivery mechanism is based on the"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 1  Purpose (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 1  Purpose\n\nContent: characteristics of the interaction between two software systems. Some of these reasons are that: Support for long-running Request/Reply interactions may not be practical in a synchronous session-oriented communication. Some messaging interactions require additional callback messages reporting on server activity which supplement the reply message. Clients may wish to interleave requests and replies to manage parallel or overlapping activities in multiple concurrent messaging conversations. 1.3 The base technology supporting asynchronous messaging may also support synchronous interactions that rely on transport sessions for identification and correlation of related messages. The XML Messaging Specification does not prevent these synchronous messaging dialogs since the specified header elements are not required in these cases. However, there may be benefits of using the message header elements specified here even in synchronous interactions. The message header elements provide self describing information about messages that may be useful"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 1  Purpose (Part 3)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 1  Purpose\n\nContent: for debugging or tracking message traffic. Their use may also enable future migration to different message transports. 1.4 The XML Messaging Specification uses established, openly referenceable industry standards for XML messaging where possible. It only specifies extensions to existing industry standards when needed to meet the immediate requirements for messaging in a SEMI Standard application context. The intent of this standard is not to replicate existing standards or offer competing specifications, but to align with and cite the usage of existing standards."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 2  Scope (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 2  Scope\n\nContent: 2.1 In Scope — The XML Messaging Specification will include within its scope the following: 2.1.1 Use of the W3C Simple Object Access Protocol (SOAP) — SOAP is used as a basic message foundation for SEMI messaging applications. 2.1.2 Definition of SOAP Extensions This specification defines SOAP extensions for header and body elements needed to support asynchronous messaging interactions. 2.1.3 Structures for Request/Reply Point-to-Point Message Dialogs — This specification will address the message header data needed to support request/reply interactions with a request message and corresponding reply message using asynchronous, one-way messages. 2.1.4 Structures for Asynchronous Point-to-Point Callback Messages — This specification will address the message header data needed to enable atomic, asynchronous callback messages that complement a request/reply dialog between two endpoints. 2.1.5 Structures for Asynchronous Multicast Event Messages — This specification will address the message header data needed to enable atomic, asynchronous"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 2  Scope (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 2  Scope\n\nContent: event messages distributed via a publication multicast to multiple subscribers. 2.1.6 Use of W3C Web Services Definition Language (WSDL) — WSDL is a message metadata specification language for describing signatures of web service interfaces. This specification will define how WSDL will be used to represent the interfaces intended for asynchronous message exchange patterns. 2.2 Out of Scope — The following topics are beyond the scope of this specification. These topics may be addressed in separate specifications, but are not intended as future additions to this standard. 2.2.1 Message Security — The specification does not provide mechanisms for authentication of the message sender or receiver or for securing the content of messages from unauthorized access. 2.2.2 Quality of Performance — The XML Messaging Specification does not provide performance requirements or conformance testing for the performance characteristics of message transports. There may be environments in which XML messaging structures are not appropriate or effective for"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 2  Scope (Part 3)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 2  Scope\n\nContent: high performance communications. The definition of the environments where XML Messaging may or may not be appropriate is beyond the scope of this document. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 3  Limitations (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 3  Limitations\n\nContent: 3.1 Provisional Standard Deficiencies — This document is Provisional due to areas where the specification needs additions. When these missing topics are addressed with subsequent revisions, this standard will be upgraded to remove Provisional status. The following items are cited as deficiencies in this document: 3.1.1 SOAP 1.2 — This specification depends on the W3C SOAP standard. The release of the full SOAP 1.2 W3C Recommendation is anticipated in early 2003. Once it is formally adopted, this specification will need to make adjustments for changes between SOAP 1.1 and SOAP 1.2. 3.1.2 Namespace for XML Messaging Schema — This provisional specification will need to be aligned with a future guideline for the specification of namespaces belonging to SEMI Standards. 3.1.3 Structure for Publish/Subscribe Event Messages — This provisional specification does not yet provide mechanisms for defining messages for distribution via a multicast publish/subscribe mechanism. 3.1.4 Structure for Attachments with Non-XML Data — This provisional"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 3  Limitations (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 3  Limitations\n\nContent: specification does not yet specify the message structure for messages that have both a SOAP envelope and a message attachment containing non-XML data. 3.1.5 WSDL Requirements The provisional specification does not yet specify the form of WSDL required for exposing services for access using asynchronous messaging. Additional investigation into WSDL and SOAP 1.2 Message Exchange Patterns is required before completing the WSDL section of this specification."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 4  Referenced Standards (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 4  Referenced Standards\n\nContent: 4.1 World Wide Web Consortium (W3C) Standards1 Extensible Markup Language (XML) 1.0 (Second Edition) — W3C Recommendation, 6 October 2000. (See http://www.w3.org/TR/2000/REC-xml-20001006.) The latest version of Extensible Markup Lanuage (XML) 1.0 is available at http://www.w3.org/TR/RECxml. Namespaces in XML — W3C Recommendation, 14 January 1999. (See http://www.w3.org/TR/1999/RECxml-names-19990114/.) The latest version of Namespaces in XML is available at http://www.w3.org/TR/REC-xml-names. XML Schema Part 1: Structures — W3C Recommendation, 2 May 2001. (See http://www.w3.org/TR/2001/REC-xmlschema-1- 20010502/.) The latest version of XML Schema Part 1: Structures is available at http://www.w3.org/TR/xmlschema-1/ XML Schema Part 2: Datatypes — W3C Recommendation, 2 May 2001. (See http://www.w3.org/TR/2001/REC-xmlschema-2- 20010502/.) The latest version of XML Schema Part 2: Datatypes is available at http://www.w3.org/TR/xmlschema-2/. Simple Object Access Protocol 1.1 (SOAP) — W3C Note, 8 May 2000. See"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 4  Referenced Standards (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 4  Referenced Standards\n\nContent: http://www.w3.org/TR/2000/NOTE-SOAP-20000508). The latest version of Simple Object Access Protocol 1.1 is available at http://www.w3.org/TR/SOAP. Web Services Description Language 1.1 (WSDL) — World Wide Web Consortium, 15 March 2002. This version of the Web Services Description Language Note is http://www.w3.org/TR/2001/NOTE-wsdl 20010315. The latest version of Web Services Description Language is available at http://www.w3.org/TR/wsdl. NOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 5  Terminology",
    "content": "5.1  Abbreviations and Acronyms  \n5.1.1  SOAP — Simple Object Access Protocol  \n5.1.2  WSDL — Web Services Definition Language  \n5.1.3  XML — Extensible Markup Language"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 5.2  Definitions",
    "content": "5.2.1  asynchronous messaging — a style of communication based on the exchange of atomic messages separated in time and implemented with oneway message deliveries.  \n5.2.2  callback message a message that communicates supplemental information resulting from performance of an action initiated by a related request/reply conversation.  \n5.2.3  message document — an XML document that contains the message envelope and encapsulated message header and message content.  \n5.2.4  message envelope — the encapsulating XML structures that define an overall framework for expressing what is in a message; who should deal with it, and whether it is optional or mandatory.  \n5.2.5  reply message — a message that contains data resulting from the completion of an action initiated by a related request message.  \n5.2.6  request message — a message that contains necessary information to allow a server to perform a requested action on behalf of the requester."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: 6.1 Simple Object Access Protocol (SOAP) Envelope — Messages shall be enclosed in the Envelope element as specified in the SOAP 1.1 document. The SOAP Envelope shall include a Header element and a Body element. Within the Header element, message documents shall include an element named MessageHeader that contains data required for message preparation and transport as specified below. 6.2 SEMI XML Messaging Namespace — All XML items defined in this specification belong to the reserved SEMI namespace “urn:semiorg:schema:xmlmsg:0:0”. The following XML Namespace declaration shall be used to specify the namespace. <xsd:schema xmlns $\\ c =$ \"urn:semiorg:schema:xmlmsg:0:0\" elementFormDefault $\\ c =$ \"qualified\" > 6.3 Use of SOAP Messages for Synchronous Request/Reply Interactions — The XML Messaging Specification does not preclude the use of SOAP for synchronous interactions. The SOAP Header Extensions specified in this document are not required for a synchronous exchange, but may be useful even in those cases. A standard adopting a"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: synchronous use of SOAP shall clearly indicate whether the header extensions are required for conformant implementations. 6.4 SOAP Header Entry for Messaging — The SOAP message shall have an entry contained in the SOAP-ENV:Header element named MessageHeader that contains elements as defined in this section. The MessageHeader element shall be defined with a mustUnderstand $\\mathbf { \\Sigma } = \\mathbf { \\Sigma }$ “1” attribute that requires all conformant implementations to process the header element or return a “MustUnderstand” fault to the message sender. 6.4.1 From — The From element shall identify the application that sent this message. The format of the value in the From element shall be a valid URI. The domain of the value in the From element may vary by transport binding. 6.4.2 To — The To element shall identify the application that is the intended recipient of this message. The format of the value in the To element shall be a valid URI. The domain of the value in the To element may vary by transport binding. 6.4.3"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 3)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: MessageType — The MessageType element shall identify the role of the message in a conversation. A message shall be either a request, reply or callback message. 6.4.4 Request Message — A request message shall originate from an endpoint in the client role and shall establish a new RequestId. The RequestId shall be unique within the domain of all such Ids generated by the originating client. The request message body contains the information needed by the server to enable it to perform a requested action on behalf of the client. 6.4.4.1 Reply Message — A reply message shall originate from an endpoint in the server role and shall echo the RequestId received from a client in a prior request message as a CorrelationId. The reply message body may contain information that conveys the completion of an action initiated by a related request message. It may instead include a body entry for a Fault that communicates the reason for a failure. In other cases the Fault may provide information such as warnings that supplement the normal content of"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 4)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: the body. 6.4.4.2 Callback Message — A callback message shall originate from an endpoint in the server role and shall echo the RequestId received from a client in a prior request message. A callback message body contains unspecified information that relates to the requested action initiated by a related request message. A callback message may precede the reply message (a leading callback message), or it may follow the reply message (a trailing callback message). The callback message shall also contain an element for the EventIndex if the server will send more than one callback message. The body of a callback message may also contain SOAP Faults if there is a processing error that needs to be conveyed to the client. 6.4.5 RequestId — The RequestId element shall be used in a request message to identify it as the first of a series of messages that belong to a single interaction. The value of RequestId shall be generated by a client with the initial request message and then shall be echoed back as the CorrelationId in subsequent"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 5)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: callback messages or reply messages from the responding server. The XML Schema shall specify a choice between RequestId and CorrelationId. RequestId shall be the choice when MessageType is “Request”. 6.4.6 CorrelationId — The CorrelationId element shall be used in each reply or callback message to identify it as part of an interaction that was initiated by a prior request message. The value of CorrelationId shall be identical to the RequestId from the initial request message. The same CorrelationId value shall be echoed back in all callback messages or reply messages sent from the server in response to the client’s initial request message. The XML Schema shall specify a choice between RequestId and CorrelationId. CorrelationId shall be chosen when MessageType is “Reply” or “Callback”. 6.4.7 Action — The Action element shall be a string that serves to identify the unit of functionality invoked by the request message. An Action value shall be unique to the recipient of the message. 6.4.8 ReplyExpected — The ReplyExpected element is"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 6)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: optional. When present, the ReplyExpected element shall indicate whether the client expects to receive a reply message by a “true” value. When present with a value of “false”, the ReplyExpected element shall indicate that the client does not expect to receive a reply message. If not present, the server receiving the request shall assume that a reply is expected (equivalent to a “true” value). A service shall be prepared to return a reply for every request, and a client shall be prepared to receive replies even if this element is set to “false”. ReplyExpected is intended only for optimizing conversations where the client intends to ignore reply messages. 6.4.9 MessageId — The MessageId element shall be optional in the MessageHeader to define a string value to uniquely identify the message. MessageId need not be included in the MessageHeader if there is no value established for uniquely identifying each message by the selected message transport. If present, MessageId shall be globally unique. 6.4.10 EventIndex — The EventIndex"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 7)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: element shall be optional in the MessageHeader of a callback message. EventIndex shall not be included in request or reply messages. Within the MessageHeader of a callback message, EventIndex is optional only if there is just one callback message in an interaction, but required if there are a series of callbacks. EventIndex is used to identify this message’s position in relation to multiple callback messages resulting from the original request. 6.4.10.1 EventIndex Sub-elements — EventIndex shall contain sub-elements for Position, and either Total or Finished as specified in the following paragraphs. Either Total or Finished shall be present, but not both. 6.4.10.2 Position — The Position element shall indicate this message’s position in a stream of callback messages. Position shall be greater than or equal to 1. Position shall be less than or equal to Total, when Total is present. 6.4.10.3 Total — The Total element shall indicate the final count of callback messages to be delivered in this interaction (that is, all messages"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 8)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: sharing a common RequestId/CorrelationId). Total shall have the same value in each callback message in the sequence. 6.4.10.4 Finished — The Finished element shall indicate whether this is the last in a sequence of callback messages. Finished shall be present in callback messages for interactions in which the total number of callback messages cannot be known in advance. A value of “false” shall indicate that additional callback messages will be sent. A value of “true” shall indicate that no further callback messages will be sent. 6.4.10.5 Default Interpretation if EventIndex is not Present — If EventIndex is not present, the client receiving the callback message shall interpret it as equivalent to a EventIndex element with Position $= 1$ and Total $= 1$ , indicating a single callback message from server to client. 6.4.11 MessageHeader XML Schema — The XML schema in Figure 1 defines the MessageHeader element that is required by this specification. <?xml version $ = \" 1$ .0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\bar {"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 9)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: \\rho } }$ \"UTF-8\"?> <xsd:schema targetNamespace $\\ c =$ \"urn:semi-org:schema:xmlmsg:0:0\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault $\\ c =$ \"qualified\"> <xsd:element name $\\ c =$ \"MessageHeader\" $>$ <xsd:complexType> <xsd:sequence> <xsd:element name $\\ c =$ \"From\" type $\\ c =$ \"xsd:anyURI\"/> <xsd:element name $\\ c =$ \"To\" type $\\ L =$ \"xsd:anyURI\"/> <xsd:element name $\\ L =$ \"MessageType\"> <xsd:simpleType> <xsd:restriction base $\\ c =$ \"xsd:string\"> <xsd:enumeration value $\\ c =$ \"REQUEST\"/> <xsd:enumeration value $\\ c =$ \"REPLY\"/> <xsd:enumeration value $\\ c =$ \"CALLBACK\"/> </xsd:restriction> </xsd:simpleType> </xsd:element> <xsd:choice> <xsd:element name $\\ c =$ \"RequestId\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"CorrelationId\" type $\\ c =$ \"xsd:string\"/> </xsd:choice> <xsd:element name $\\ c =$ \"Action\" type $\\ c =$ \"xsd:string\"/> <xsd:element name $\\ c =$ \"ReplyExpected\" type $\\ c =$ \"xsd:boolean\" minOccurs $\\ c =$ \"0\"/> <xsd:element name $\\ c =$ \"MessageId\" type $\\ c =$ \"xsd:string\""
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements (Part 10)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 6  Requirements\n\nContent: minOccurs=\"0\"/> <xsd:element name $\\ c =$ \"EventIndex\" minOccur $\\mathbf { \\Lambda } _ { \\mathrm { S } } = \\ \" 0 \\mathrm { ~ \\ \" > ~ }$ <xsd:complexType> <xsd:sequence> <xsd:element name $\\ c =$ \"Position\" type $\\ c =$ \"xsd:nonNegativeInteger\"/> <xsd:choice> <xsd:element name $\\ c =$ \"Total\" type $\\ c =$ \"xsd:nonNegativeInteger\"/> <xsd:element name $\\ c =$ \"Finished\" type $\\ c =$ \"xsd:boolean\"/> </xsd:choice> </xsd:sequence> </xsd:complexType> </xsd:element> </xsd:sequence> </xsd:complexType> </xsd:element> </xsd:schema>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: 6.5 SOAP Body Extensions — Any exceptions that occur shall be communicated with the use of SOAP Faults. 6.5.1 SOAP Faults — A SOAP Fault element shall be inserted into the SOAP body element as a body entry to relay error status from the server back to the client. A body entry is a top level element within the Body element of the SOAP envelope. SOAP Fault subelements are specified in SOAP 1.1 Section 4.4. Their usage is specified here. 6.5.1.1 fault — The fault element shall appear in the body of the SOAP envelope as a body entry whenever there is an abnormal outcome in the server’s processing of a request message. 6.5.1.2 faultcode — The faultcode element shall be present in a SOAP fault element. The values specified in the SOAP specification shall be used to indicate the nature of the error that occurred. • “Client” indicates that the request message was not correct and could not be processed by the server. • “Server” indicates that the request message was valid, but the server could not complete the requested"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: action. 6.5.1.3 faultstring — The faultstring element shall be present to describe the cause of the fault in human understandable text. 6.5.1.4 faultactor — The use of the faultactor element is optional. 6.5.1.5 detail — The detail element is optional. It may be used to describe the cause of a fault that resulted from processing the body of the request message. 6.6 XML Message Examples — The examples of XML messages presented in this section are intended to help the reader understand the structure of messages that conform to this specification. 6.6.1 Example SOAP Envelope — The SOAP envelope illustrated in Figure 2 contains the required Header and Body elements. It also includes the MessageHeader element specified in this standard. The contents of these elements are intentionally left empty in this example. <?xml version $\\ c =$ \"1.0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"UTF-8\"?> <SOAP-ENV:Envelope xmlns:SOAP ENV $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 3)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: \"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP-ENV:Header> <MessageHeader> </MessageHeader> </SOAP-ENV:Header> <SOAP-ENV:Body> <PayloadData> </PayloadData> </SOAP-ENV:Body> </SOAP-ENV:Envelope> 6.6.2 Example Request Message — The message example shown in Figure 3 illustrates the completed MessageHeader for a message from a client to a server to request a service. In this example, the SOAP Body contains an element that identifies the data that is being requested with the Action “dataRequest.” The RequestId assigned by the client is “7.” The client will expect a reply message that contains “7” in the CorrelationId. <?xml version $\\ c =$ \"1.0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"UTF-8\"?> <SOAP-ENV:Envelope xmlns:SOAP ENV $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP-ENV:Header> <MessageHeader xmlns $\\ c =$ \"urn:semi-org:schema:xmlmsg:0:0\" elementFormDefault $\\ c =$ \"qualified\"> <From>EqHost</From> <To>EQ99</To>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 4)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: <MessageType>REQUEST</MessageType> <RequestId>7</RequestId> <Action>dataRequest</Action> <ReplyExpected>true</ReplyExpected> </MessageHeader> </SOAP-ENV:Header> <SOAP-ENV:Body> <data> <DATAID type $\\ c =$ \"ASC\" $>$ 420</DATAID> </data> </SOAP-ENV:Body> </SOAP-ENV:Envelope> 6.6.3 Example Successful Reply Message — The message example shown in Figure 4 illustrates the completed MessageHeader for a reply message from a server to a client with a response to a prior request message. This example represents a reply to the request message in the previous example. The CorrelationId of “7” serves to associate this reply with the RequestId of the earlier request message. <?xml version $\\ c =$ \"1.0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"UTF-8\"?> <SOAP-ENV:Envelope xmlns:SOAP ENV $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP-ENV:Header> <MessageHeader xmlns $\\ c =$ \"urn:semi-org:schema:xmlmsg:0:0\" elementFormDefault $\\ c =$ \"qualified\"> <From>EQ99</From>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 5)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: <To>EqHost</To> <MessageType>REPLY</MessageType> <CorrelationId>7</CorrelationId> <Action>dataRequest</Action> </MessageHeader> </SOAP-ENV:Header> <SOAP-ENV:Body> <data> <DATAID type $\\ c =$ \"ASC\" $>$ 420</DATAID> <CEID type $\\ c =$ \"ASC\" $>$ GAS</CEID> <DATASETS type $\\ c =$ \"LIST\"> <DATASET> </DATASET> </DATASETS> </data> </SOAP-ENV:Body> </SOAP-ENV:Envelope> Reply Message (Successful) Example 6.6.4 Example Reply Message for a Bad Request — In Figure 5, a faultcode value of “SOAP-ENV:Client” indicates that the error was caused by bad format or data in the request message from the client. <?xml version $\\ c =$ \"1.0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"UTF-8\"?> <SOAP-ENV:Envelope xmlns:SOAP ENV $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP-ENV:Header> <MessageHeader xmlns $\\ c =$ \"urn:semi-org:schema:xmlmsg:0:0\" elementFormDefault $\\ c =$ \"qualified\"> <From>EQ99</From> <To>EqHost</To> <MessageType>REPLY</MessageType>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 6)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: <CorrelationId>7</CorrelationId> <Action>dataRequest</Action> </MessageHeader> </SOAP-ENV:Header> <SOAP-ENV:Body> <SOAP-ENV:Fault> <faultcode>SOAP-ENV:Client</faultcode> <faultstring>BadSyntax</faultstring> <detail>DATAID not found in request.</detail> </SOAP-ENV:Fault> </SOAP-ENV:Envelope> 6.6.5 Example Reply Message for a Processing Error — In Figure 6, a faultcode value of “SOAP-ENV:Server” indicates that the error occurred during processing of the message. The request message was complete and valid to allow the server to begin processing, but some occurrence prevented successful completion of the action requested by the client. <?xml version $\\ c =$ \"1.0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"UTF-8\"?> <SOAP-ENV:Envelope xmlns:SOAP ENV $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP-ENV:Header> <MessageHeader xmlns $\\ c =$ \"urn:semi-org:schema:xmlmsg:0:0\" elementFormDefault $\\ c =$ \"qualified\"> <From>EQ99</From> <To>EqHost</To>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 7)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: <MessageType>REPLY $<$ </MessageType> <CorrelationId>7</CorrelationId> <Action>dataRequest</Action> </MessageHeader> </SOAP-ENV:Header> <SOAP-ENV:Body> <SOAP-ENV:Fault> <faultcode $>$ SOAP-ENV:Server</faultcode> <faultstring>IdNotFound</faultstring> <detail $>$ DATAID requested not known to tool.</detail> </SOAP-ENV:Fault> /SOAP-ENV:Body> </SOAP-ENV:Body> </SOAP-ENV:Envelope> Reply Message (Processing Error) Example 6.6.6 Example Callback Message for a Variable Number of Events — Figure 7 shows a callback message from a server to a client. The callback delivers some additional data related to a prior request message. The CorrelationId “8” allows the client to correlate the callback with a prior request message. This callback uses the EventIndex element to convey that this callback is the third of a variable number of callbacks. When the value of Finished is “true” then the client will know not to expect any further callback messages with this CorrelationId. 6.6.7 Example Callback Message for a Fixed Number of"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 8)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: Events — Figure 8 shows another callback message from a server to a client. The CorrelationId “9” allows the client to correlate the callback with a prior request message. The EventIndex element establishes this callback as the third of five callbacks. When the value of Position equals the value of Total, then the client will know not to expect any further callback messages with this CorrelationId. <?xml version $\\ c =$ \"1.0\" encoding $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"UTF-8\"?> <SOAP-ENV:Envelope xmlns:SOAP ENV $\\mathbf { \\bar { \\rho } } = \\mathbf { \\rho }$ \"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP-ENV:Header> <MessageHeader xmlns $\\ c =$ \"urn:semi-org:schema:xmlmsg:0:0\" elementFormDefault $\\ c =$ \"qualified\"> <From>EQ99</From> <To>EqHost</To> <MessageType>CALLBACK</MessageType> <CorrelationId>9</CorrelationId> <Action>dataSubscribe</Action> <EventIndex> <Position>3</Position> <Total>5</Total> </EventIndex> </MessageHeader> </SOAP-ENV:Header> <SOAP-ENV:Body> <data> <DATAID type $\\ c =$"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema (Part 9)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure 1 Message Header XML Schema\n\nContent: \"ASC\" $>$ 420</DATAID> <CEID type $\\ c =$ \"ASC\" $>$ GAS</CEID> <DATASETS type $\\ c =$ \"LIST\"> <DATASET> </DATASET> </DATASETS> </data> </SOAP-ENV:Body> </SOAP-ENV:Envelope> Callback Message (Fixed Number of Events) Example"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # 7  Related Documents",
    "content": "None.  \nNOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application.  The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein.  These standards are subject to change without notice.  \nBy publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard.  Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # RELATED INFORMATION 1 USAGE SCENARIOS",
    "content": "NOTICE:  This related information is not an official part of SEMI E128 and was derived from the work of the originating committee.  This related information was approved for publication by full letter ballot procedures."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-1  Request/Reply (Synchronous) (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-1  Request/Reply (Synchronous)\n\nContent: Figure R1-1 Synchronous Request/Reply Interaction R1-1.1 The synchronous form of request reply shows the client blocking after sending a request message to wait for the reply message. The transport used in a synchronous interaction typically manages the correlation of the request with the reply by completing the interaction in a single step. Synchronous interactions have the advantage of simplicity. R1-1.2 Synchronous interactions often also come with limitations. The client may not perform other activities while waiting for the reply. If the requested action takes a long time, this can limit the client’s ability to respond to other events. Another limitation is the risk of having a failure occur in the server that is not reported to the client. In general, synchronous interactions may prove more fragile than asynchronous messaging in distributed systems. R1-2 Request/Reply (Asynchronous) Figure R1-2 Asynchronous Request/Reply Interaction R1-2.1 An asynchronous interaction can also support the semantics of a"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-1  Request/Reply (Synchronous) (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-1  Request/Reply (Synchronous)\n\nContent: request/reply interaction. The request message includes envelope header data that enables the service to perform the requested action and then construct a “callback” reply message that is delivered to the request originator in a separate message delivery. In addition to data identifying the request and reply endpoints, the message envelope header must include a request identity that allows the requestor to correlate the reply message with the previously sent request message. R1-3 Request/Reply with Interleaved Requests Figure R1-3 Interleaved Requests Interaction R1-3.1 An asynchronous messaging interaction may involve more than one request being processed at a time. In this example, the Client requests actions from two separate Servers. The servers perform the actions and reply with the results independently. The client receives the reply message in a non-deterministic order. In some cases, the client may need to wait for both responses to proceed with its processing. This mechanism for parallel requests is a"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-1  Request/Reply (Synchronous) (Part 3)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-1  Request/Reply (Synchronous)\n\nContent: natural use of asynchronous messaging that does not require the complexities of multi-threaded implementations and thread-safe programming."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-4  Request/Reply with Trailing Callbacks",
    "content": "Figure R1-4 Request with Trailing Callback Interaction  \nR1-4.1  A request may ask a Server to establish some activity that generates a series of callback messages.  The Client may just require a reply that acknowledges that the activity has been initiated with a trailing sequence of independent messages that deliver the data of interest to the Client.  This message pattern uses the RequestId from the request message and the matching CorrelationId in the reply message to acknowledge the contract to deliver data in the callback messages that follow.  The use of a message body element for the MessageSequence enables the Server to dynamically communicate the message sequence and establish intent to generate additional callback messages."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-5  Request/Reply with Leading Callbacks (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-5  Request/Reply with Leading Callbacks\n\nContent: Figure R1-5 Request with Leading Callback Interaction R1-5.1 Another common message exchange pattern involves a request message, followed by a series of callback messages providing status updates, with a final reply message that ends the interaction. This pattern is often used in an application where there are events that might be of interest that occur during the performance of the requested action. It is particularly useful if the Client may need to make decisions or take other actions based on the interim callback messages that are provided in lead of the reply. R1-6 Request/Reply with Timeout Figure R1-6 Request/Reply with Timeout Interaction R1-6.1 A common messaging pattern that takes advantage is a request/reply that enables the Client to take alternate action if a reply is not received within a predefined time interval. This enables fault tolerant design that ensures that the client can recover from errors that prevent timely, or any, response from the server. The mechanism for the triggering of"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-5  Request/Reply with Leading Callbacks (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R1-5  Request/Reply with Leading Callbacks\n\nContent: the timeout can itself be based on a messaging interaction with the request setting a timer and the reply reporting the timer expiration."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # RELATED INFORMATION 2 MESSAGE TRANSPORT EXAMPLES",
    "content": "NOTICE:  This related information is not an official part of SEMI E128 and was derived from the work of the originating committee.  This related information was approved for publication by full letter ballot procedures."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-1  Transport Independence (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-1  Transport Independence\n\nContent: R2-1.1 The aim of these examples is to keep implementation and transport mechanism specifics separated from the use of the XML Messaging Specification. The example interface consists of five operations: start(myName) — starts the messaging send/receive endpoint, send(destName, envelope) — sends a message to another endpoint, stop()— terminates the messaging endpoint, onMessage(envelope) — callback provided by an application to process incoming messages, and receive() — waits for next message (needed when onMessage is not supported). R2-1.2 This kind of interface abstracts the minimum functionality needed to send and receive messages. Any potential message transport (HTTP, JMS, HSMS, RMI, etc.) could be encapsulated into methods similar to these to keep the messaging implementation independent of the transport. An application could then be written using HTTP today and then easily switched to JMS a year later. Also, new applications could be prototyped with lightweight transports and deployed with robust MOM transports"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-1  Transport Independence (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-1  Transport Independence\n\nContent: with no change to application code. R2-1.3 This Related Information is based on a simple example (illustrated in Figure R2-1) of a typical interaction between a client application sending requests to a server which provides the service and sends reply messages. The purpose of this example is to illustrate the way the message header elements proposed in this specification are realized in an asynchronous messaging implementation over HTTP. Figure R2-1 Sample Interaction for Messaging Examples R2-1.4 In order to show this example in an application context, it was implemented in Java for both HTTP and JMS transports. The examples that follow were extracted from this sample application and the debug output of the running example."
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP\n\nContent: R2-2.1 Since HTTP is inherently synchronous, a common implementation would support only synchronous request/reply and would not use any of the MessageHeader elements that support asynchronous messaging. In the synchronous case, only the To and Action elements would be present in the MessageHeader. The To element would map to the URL of the target service and Action could also be URL encoded. R2-2.2 To implement asynchronous messages over HTTP, both client and server endpoints must listen for messages coming through the selected transport. Each message is interpreted based on both the transport properties and the XML MessageHeader included in the SOAP header. Unlike more typical HTTP usage, the request and reply are not constrained to a single session context, and can be separated in time. There is no “blocking” on pending replies. This model lends itself better to clients or servers that deal with many messaging partners at a time, while still needing to act on common data. R2-2.3 In the HTTP/SOAP transport example, each of the"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP\n\nContent: messages in the sample scenario will be sent with an HTTP Post operation. Every message will include an XML document containing a SOAP envelope and the MessageHeader specified in this standard. The message body will contain the application specific elements that communicate the content of each message. R2-2.4 The elements of the MessageHeader contain data that is used to construct the appropriate HTTP message and to populate the properties of the SOAP message. Specifically, the destination URL for each message appears in the To attribute of the MessageHeader. The From attribute contains the URL of the sender of each message. The SOAPAction HTTP header replicates the Action element in the transport specific header attribute. R2-2.5 This example (and the ones that follow) include both the HTTP properties and the XML message from the client perspective. The request message shown in Figure R2-2 illustrates the HTTP transport form of the message. Sending HTTP POST: POST getCounter HTTP/1.1 Host: localhost:9001 Content-Type:"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP (Part 3)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP\n\nContent: application/soap+xml; charset $\\mathbf { \\lambda } =$ \"utf-8\" Content-Length: 369 SOAPAction: getCounter <Envelope> <Header> <MessageHeader> <From>localhost:9001</From> <To>localhost:9000</To> <MessageType>REQUEST</MessageType> <RequestId>1</RequestId> <Action>getCounter</Action> </MessageHeader> </Header> <Body /> </Envelope> Figure R2-2 Example HTTP Post Request Message R2-2.6 The reply message in Figure R2-3 follows the same pattern, with the TO header element reflected in the HTTP Post and the SOAPAction mapping to the MessageHeader Action element. In this example, the same Action value is echoed back with the reply message. Received HTTP POST: POST getCounter HTTP/1.1 Host: localhost:9000 Content-Type: application/soap+xml; charset $\\mathbf { \\lambda } =$ \"utf-8\" Content-Length: 416 SOAPAction: getCounter <Envelope> <Header> <MessageHeader> <From>localhost:9000</From> <To>localhost:9001</To> <MessageType>REPLY $<$ /MessageType> <CorrelationId $> 1 <$ /CorrelationId> <Action>getCounter</Action> </MessageHeader> </Header>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP (Part 4)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-2  SOAP/HTTP\n\nContent: <Body> <counter>0</counter> </Body> </Envelope>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-3  Java Message Service (Part 1)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-3  Java Message Service\n\nContent: R2-3.1 The Java Message Service example is based on the same example application, but with a JMS implementation. This example shows how message-oriented middleware can be used to provide persistent and guaranteed messaging, without changing application code. All transport-specific messaging is confined to the Java classes that implement the example. Application code is only exposed to the XML messaging transport interface and the XML Envelope specification. R2-3.2 The JMS header properties illustrated below show how the XML messaging elements are mapped to JMS. Figure R2-4 shows the headers for the request and the reply message as they map to the JMS header properties. Sending JMS Message: JMS Header Property: To $\\ c =$ myServer JMS Header Property: Action $\\ c =$ getCounter JMS Header Property: From $\\ c =$ myClient JMS Header Property: RequestId $_ { . = 1 }$ JMS Header Property: MessageType $\\ c =$ REQUEST JMS Message Body: <Body /> COMMAND: Receiving JMS Message: JMS Header Property: To $\\ c =$ myClient JMS Header"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-3  Java Message Service (Part 2)",
    "content": "Title: SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # R2-3  Java Message Service\n\nContent: Property: CorrelationId $_ { . = 1 }$ JMS Header Property: Action $\\ c =$ getCounter JMS Header Property: From $\\ c =$ myServer JMS Header Property: MessageType $\\ c =$ REPLY JMS Message Body: <Body> <counter>0</counter> </Body> Message received: <Envelope> <Header> <MessageHeader> <To>myClient</To> <CorrelationId>1</CorrelationId> <Action>getCounter</Action> <From>myServer</From> <MessageType>REPLY $<$ /MessageType> </MessageHeader> </Header> <Body> <counter>0</counter> </Body> </Envelope>"
  },
  {
    "title": "SEMI E128-0304PROVISIONAL SPECIFICATION FOR XML MESSAGE STRUCTURES - # Figure R2-4 Example JMS Message",
    "content": "NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application.  The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein.  These standards are subject to change without notice.  \nBy publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard.  Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300)",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee.  Current edition approved by the North American Regional Standards Committee on September 3, 2003.  Initially available at www.semi.org October 2003; to be published November 2003.  \nNOTICE:  The designation of SEMI E130 was updated during the 1104 publishing cycle to reflect the creation of SEMI E130.1."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 1  Purpose",
    "content": "1.1  This document establishes a Prober Specific Equipment Model for prober equipment deployed in a factory adhering to the Global Joint Guidance for 300 mm standards (PSEM300).  The PSEM300 consists of equipment characteristics and behaviors that apply to this class of equipment and are required to be implemented.  The intent of this document is to facilitate the integration of prober equipment into an automated semiconductor factory.  This document accomplishes this by defining an operational model for prober equipment as viewed by a host.  This definition provides a standard host interface and equipment operational behavior."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 2  Scope (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 2  Scope\n\nContent: 2.1 The PSEM300 extends the generic Process State Model of SEMI E30 (GEM) with a Specific Process State model for prober equipment. This standard attempts to be protocol independent. There is no attempt to replace the protocol dependent aspects of SEMI E30 (GEM). Instead, this document assumes that certain equipment features not covered within the concepts and behaviors of the related $3 0 0 \\mathrm { m m }$ standards will be supported using the concepts and behaviors defined within SEMI E30. See Section 9 for a description of the SEMI E30 provisions. 2.2 This document does not attempt to define the full set of equipment capabilities. It is understood that additional value-added features will be provided in addition to the requirements set forth in this document. 2.3 This document intends host-instructed indexing of sites within a substrate and the loading/unloading of the substrates. Automated self-indexing with such communications as GPIB or RS-232C between tester and prober equipment is outside the scope"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 2  Scope (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 2  Scope\n\nContent: of this specification but is not precluded. See the Related Information section for reference. 2.4 This document does not describe much about recovery of exception or manual operation to recover from alarm / potential-alarm (warning) situations. Such conditions are usually configuration specific. 2.5 This standard presents a solution from the concepts and behavior down to the messaging services. It does not define the messaging protocol. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 3  Limitations",
    "content": "3.1  This document does not define the format of each data item specified in the equipment recipe.  \n3.2  This document does not define a communications protocol.  In order to implement this specification, it requires a standard communications protocol and data format specification."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 4.1  SEMI Standards",
    "content": "SEMI E5 — SEMI Equipment Communication\nStandard II Message Content (SECS II)\nSEMI E30 — Generic Model for Communications and\nControl of Manufacturing Equipment (GEM)\nSEMI E40 — Standard for Processing Management\nSEMI E42 — Recipe Management Standard: Concepts,\nBehavior, and Message Services\nSEMI E87 — Specification for Carrier Management\n(CMS)\nSEMI E90 — Specification for Substrate Tracking\nSEMI E94 — Provisional Specification for Control Job\nManagement\nSEMI G81 ― Specification for Map Data Items\nSEMI G85 ― Specification for Map Data Format\nSEMI M20 ― Specification for Establishing a Wafer\nCoordinate System  \nSEMI M21 ― Specification for Assigning Addresses to Rectangular Elements in a Cartesian Array  \n4.2  IEEE Standards1  \nIEEE 754-1985 – IEEE Standard for Binary FloatingPoint Arithmetic  \n4.3  Other Documents  \nHarel, D., “Statechart: A Visual Formalism for Complex Systems”, Science of Computer Programming 8 (1987) 231-274.  \nNOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Terminology (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Terminology\n\nContent: 5.1 Definitions 5.1.1 alignment — a procedure in which a coordinate system is established on a substrate. 5.1.2 cassette — a physical object containing one or more substrate locations. See SEMI E87. 5.1.3 chuck — the primary stage for processing a substrate. 5.1.4 column — synonymous with the term “Xcoordinate”. Columns increase along the X axis. 5.1.5 die — 1. A field sub-unit. 2. An area of substrate that contains the device being manufactured. 5.1.6 fiducial – flat or notch in the physical substrate used to identify the substrate orientation. 5.1.7 inker — a resource of the prober. The electromechanical units to put ink mark on die. 5.1.8 load — 1. Move a substrate onto a substrate location. 2. Move a carrier onto the equipment. 5.1.9 marking — the process of the prober that deposits an ink mark on a die using the inker. 5.1.10 pre-align – set up a substrate to be processed on the chuck. The equipment may have a separate stage for performing the pre-align function. 5.1.11 probe card — the"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Terminology (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Terminology\n\nContent: electromechanical interface necessary to enable temporary electrical contact between the substrate to be tested and the tester resource. May consist of multiple components. 5.1.12 pipeline an equipment configuration consisting of multiple stages through which the equipment sequences material in succession. 5.1.13 row synonymous with the term “Ycoordinate”. Rows increase along the Y axis. 5.1.14 stage – a general term for a substrate location that serves a specific function such as pre-align or chuck. 5.1.15 state — 1. A static set of conditions. If the conditions are met, the state is current (SEMI E30). 2. A state reacts predictably to specific stimuli. 5.1.16 substrate — 1. The basic unit of material, processed by PSEM300 equipment such as wafers. 5.1.17 unload — 1. Remove a substrate from a substrate location. 2. Remove a carrier from the equipment. 5.1.18 X axis — the X axis is the horizontal axis from left to right when the substrate is rotated according to Orientation. 5.1.19 Y axis — the Y axis"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Terminology (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Terminology\n\nContent: is the vertical axis from bottom to top when the substrate is rotated according to Orientation."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.1  Remote Command Parameter Table Definitions",
    "content": "6.1.1  The table below provides an example of the tables used to list and describe arguments for services or remote commands defined in this specification.  \n6.1.2  Parameter – Specifies the name of the parameter.  \n6.1.3  Req/Ind – Specifies relationship of the parameter for the command request or indication message.  See below table for codes used.  \n6.1.4  Rsp/Cnf – Specifies relationship of the parameter for the command response or confirmation message.  See below table for codes used.  \n6.1.5  Form – Specifies the data type of the parameter.  Data types are as defined in the SEMI compilation of terms or are included in this specification.  Specific representation of the data types will depend on and be defined by the communications protocol and data format adjunct specification.  \n6.1.6  The following codes appear in the Req/Ind and Rsp/Cnf columns to define how each parameter is used in each direction:"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 7  Requirements",
    "content": "7.1  Following sections in this document, except such supplementary descriptions as Related Information, are requirements of this specification."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8  State Model (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8  State Model\n\nContent: 8.1 The purpose is to define the equipment-specific processing state model to portray the expected operational states of the equipment to enable host tracking and control in place of a local operator. Process Job Management standard (SEMI E40) is part of the required behavior of this document as described in Section 9. For additional description of this behavior see Section 10 or See the actual standard, SEMI E40. 8.1.1 The Process State model tracks the state of the equipment with regard to its ability to perform processing on a substrate. The Process State model is used to inform the host when a substrate is loaded on the main chuck and has been properly setup for processing. 8.1.2 It is expected that the prober will be preparing a substrate to be loaded on the main chuck while the host is processing an existing substrate on the main chuck. This concurrent activity does not impact the host’s ability to process the existing substrate and therefore does not cause a change in the Process State model."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8  State Model (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8  State Model\n\nContent: The standard for Substrate Tracking (SEMI E90) is used for tracking substrates between individual substrate locations. 8.1.3 The processing state model in this document is required for implementing a PSEM300-compliant prober, in addition to the required state models in the related standards. A state model consists of a state model diagram, state definitions, and a state transition table. A state model represents the host’s view of the prober, but not necessarily the actual prober operations. All PSEM300 state model transitions shall be mapped sequentially into the actual equipment events that satisfy the requirements of those transitions. In certain implementations, the prober may enter a state and has already satisfied all of the conditions required by the PSEM300 state model for transition to another state. In this situation, the prober makes the required transition without any additional actions. 8.1.4 Some equipment may need to include additional states. However, any additional states must not"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8  State Model (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8  State Model\n\nContent: change the PSEM300-defined state transitions. All expected transitions between PSEM300 states must occur."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.5  Description of Prober Processing States (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.5  Description of Prober Processing States\n\nContent: 8.1.5.1 AWAITING COMMAND (SUBSTRATE LOADED Sub-state) — A substrate on the main chuck is ready for processing. The prober is ready to receive an instruction from the host. 8.1.5.2 AWAITING LOAD (EXECUTING Sub-state) — At least one Process Job is in the PROCESSING state. No substrate is loaded on the main chuck. The prober is waiting for a host command to load a substrate. 8.1.5.3 EXECUTING (PROCESS Sub-state) — One of the following conditions exists: A) At least one Process Job is in the PROCESSING state and the prober is processing material as directed by the host. B) A single Process Job is active in either the STOPPING or ABORTING state and the prober is removing material. 8.1.5.4 IDLE — No Process Jobs are in the ACTIVE state and the processing resource is available without alarms. 8.1.5.5 HANDLING MATERIAL (EXECUTING Sub-state) — The prober is loading a substrate, unloading a substrate, or a combined action of loading and unloading substrates on the main chuck."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.5  Description of Prober Processing States (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.5  Description of Prober Processing States\n\nContent: When loading a substrate onto the main chuck, the HANDLING MATERIAL state is maintained until all preconditioning tasks (i.e. aligning, profiling, etc.) are completed and the substrate is ready for processing. If a condition arises where the substrate on a chuck must be re-aligned, the HANDLING MATERIAL state is active until the alignment task has completed. 8.1.5.6 MOVING XYZ (SUBSTRATE LOADED Sub-state) — The prober is executing a move command. This state is maintained until the move is complete. This includes motion in the z-axis. When this state is exited, the target unit(s) on the substrate is in position to be processed. 8.1.5.7 PROCESS (PROCESSING ACTIVE Sub-state) — This state is the parent of those sub-states that refer to the preparation and execution of a process job. 8.1.5.8 PROCESSING ACTIVE — The state in which at least one Process Job is active. 8.1.5.9 PROCESSING BLOCKED — The processing resource is not available for processing. 8.1.5.10 SETTING UP"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.5  Description of Prober Processing States (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.5  Description of Prober Processing States\n\nContent: (PROCESS Sub-state) — A single ACTIVE Process Job is in the SETTING UP state. 8.1.5.11 SERVICE TASK (SUBSTRATE LOADED Sub-state) — A service task such as inking, cleaning, or inspection is being performed by the prober."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.6  PSEM Processing State Transition Table",
    "content": "Table 1  PSEM Processing State Transition Table"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 8.1.7  Process Model Conditional Table",
    "content": "Table 2  Process Model Conditional Table"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 9  Related Standards Hierarchy",
    "content": "9.1  SEMI E30 Relationship — This document does not attempt to redefine the concepts and behaviors of SEMI E30 (GEM).  Instead, this document takes an hierarchical approach to identifying the methods for achieving a given task as shown in Related Standards Hierarchy.  \n9.1.1  SEMI E30 Inclusions — All of the SEMI E30 state models are required with exception of the processing state diagram.  This diagram is replaced with the one defined in this standard.  \n9.1.2  SEMI E30 Exclusions — Data Type restrictions may conflict with the newer $3 0 0 \\ \\mathrm { m m }$ standards and therefore, the constraints found within the newer standards shall take precedence over the restrictions found in SEMI E30 section 5 “Data Types”."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 10  Process Jobs (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 10  Process Jobs\n\nContent: NOTE 1: SEMI E40 is required for PSEM300 compliance. 10.1 A PSEM300 prober is not able to operate as an independent processing agent. It requires a host to coordinate interaction with the tester. This document defines a suitable GEM interface consisting of the Process State Model and associated remote commands to allow the host to act as the processing agent on behalf of the prober to complete the execution of the process job. 10.2 This standard assumes that if the equipment has a pipeline (e.g. pre-align stage and main chuck), the equipment will support concurrent process jobs such that when the last substrate of an active process job leaves the first pipeline stage, the equipment will launch another process job thus maintaining continuous material flow. 10.3 Process Job Preconditioning — This standard does not attempt to define the set of recipe attributes that, when different from the current equipment configuration, will require a transition to the Process Job SETTING UP state (preconditioning"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 10  Process Jobs (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 10  Process Jobs\n\nContent: required). The recipe attributes that do impact the Process Job transition to SETTING UP will be user defined and documented as such. 10.4 A PM compliance checklist must be filled out to indicate the level of compliance to both the Fundamental and Additional PM capabilities."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 11  Control Job",
    "content": "NOTE 2:  SEMI E94 is required for PSEM300 compliance.  \n11.1  See SEMI E94 for details of Control Job management.  \n11.2  A substrate’s destination substrate location is specified in the Control Job’s MtrlOutSpec attribute.  If the MtrlOutSpec attribute is not set, the destination substrate location defaults to the source substrate location.  \n11.3  A CJM compliance checklist must be filled out to indicate the level of compliance to Fundamental CJM capabilities (no Additional capabilities are defined at this time)."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 12  Carrier Management",
    "content": "NOTE 3:  SEMI E87 is required for PSEM300 compliance.  \n12.1  CarrierReCreate — After processing material for a given carrier, the host must be able to define a new CJ/PJ for the same carrier without having to remove the carrier from the tool.  For this, the equipment must support the CarrierReCreate service.  \n12.2  A CMS compliance checklist must be filled out to indicate the level of support for CMS for a given equipment configuration."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 13  Substrate Tracking",
    "content": "NOTE 4:  SEMI E90 is required for PSEM300 compliance.  \n13.1  Substrate Tracking must be supported for all product substrates and substrate locations where product substrates may reside.  Some of the substrate locations that might exist include: handling robot, postchuck substrate location.  \n13.2  The supplier may choose not to support substrate tracking for certain internal substrate locations.  This is allowable if the substrate location will not be occupied by product substrates (e.g. Cleaning Media tray, AUX Tray).  The supplier must document which substrate locations are available for substrate tracking.  \n13.3  A CMS “CarrierReCreate” service will cause each of the substrates contained within a recreated carrier to be reset to the AT SOURCE and NEEDS PROCESSING state.  \nNOTE 5:  A STS compliance checklist must be filled out to indicate the level of compliance to STS Fundamental and Additional capabilities."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 14  Equipment Configuration",
    "content": "14.1  This standard does not attempt to specify the physical equipment configuration.  The intent of this standard is to provide a generalized specification that applies to all configurations.  The supplier is responsible for assuring that additional features integrate consistently with the relevant standards impacted by the feature.  The purpose of this section is to add clarification to baseline assumptions that are implied throughout this specification."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 14.2  Pipeline",
    "content": "14.2.1  A typical pipeline configuration consists of a pre-align stage used to pre-process a substrate before loading onto the chuck.  The equipment can begin processing the substrate on the chuck while the next substrate is being prepared on the pre-align stage.  For this configuration, the material flow is assumed to follow the path: source substrate location $\\Rightarrow$ pre-align stage $\\Rightarrow$ chuck $\\Rightarrow$ destination substrate location.  There may be additional substrate locations both before and after the chuck."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15  Control Maps",
    "content": "15.1  Control Maps provide a mechanism for communicating the selective sites for processing in a pre-determined manner.  Control Maps are not suitable for adaptive test where dynamic site selection is used."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15.2  Control Map Uses (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15.2  Control Map Uses\n\nContent: 15.2.1 Inking — The host can download a control map containing the sites to be inked. The host issues the INK DIE remote command specifying the control map as the source for the die list. 15.2.2 Normal Processing — When using a Control Map, the host issues the INDEX remote command to move the prober coordinates to the next site listed in the Control Map. The host may issue a move related command other than INDEX to move the chuck to any location on the substrate. Move commands other than INDEX, do not impact the state of the Control Map. The prober processes subsequent INDEX commands by going to the next site listed in the Control Map. If the Control Map does not contain additional sites the equipment sends an event to the host indicating that the control map has been completed. 15.2.3 Interrupted Processing — If the processing of a substrate using a Control Map is interrupted (i.e. Correlation Test, Probe Cleaning with a cleaning substrate, Chuck Reset, etc...), the equipment shall resume"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15.2  Control Map Uses (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15.2  Control Map Uses\n\nContent: processing with the Control Map from the point where processing was suspended when the substrate processing resumes. The exceptions to this requirement are 15.2.3.1 If the current Process Job is altered such that the suspended substrate is no longer in the IN PROCESS state, the Control Map is no longer valid. 15.2.3.2 If the host issues a RESET-CONTROL-MAP command, the Control Map will resume at the first site. If the host designates coordinates with the RESETCONTROL-MAP command, the prober will resume the Control Map with the designated coordinates. It is the responsibility of the host to assure that the coordinates provided with this command are contained in the Control Map. 15.3 If the host issues a SET-CONTROL-MAP command, the prober will begin processing the Control Map at the first site of the designated Control Map. If the host designates coordinates with the SETCONTROL-MAP command, the prober will process the Control Map beginning with the designated coordinates. It is the"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15.2  Control Map Uses (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 15.2  Control Map Uses\n\nContent: responsibility of the host to assure that the coordinates provided with this command are contained in the Control Map. 15.4 Control Map Transmission — The method for downloading/uploading control maps is outside the scope of this document. 15.5 Control Map Structure — The structure of the control map is outside the scope of this document. The use of SEMI G81 or SEMI G85 standards is recommended to describe map structures. 15.6 Control Map Modifications — The option to update a control map to register sites as they are processed is a user specific detail. In the event that control maps are modified on the prober, the prober must support uploading the modified maps to the host."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17  Material Movement",
    "content": "16.1  The recipe on a PSEM300 compliant prober contains setup parameters and references to a collection of service recipes.  (See SEMI E42 for a description of Service Recipe’s).  The host can issue a command to execute a service task.  The instructions for performing the specified task are contained in the respective service recipe.  This standard makes no attempt to define the full list of service tasks available for a given equipment. However, when a service task is available, the supplier is responsible for documenting the command and parameters required for the host to request the task. When a service task is performed, the Process State model transitions to the SERVICE TASK state and provides the host with a descriptive TaskID."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 16.2  Inking",
    "content": "16.2.1  The host can perform inking on individual devices by issuing the INK-DEVICE command, or the host can ink a list of devices by issuing the INK-DIE command and a die list.  The die list parameter may reference a Control Map containing the die selection."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 16.3  Inspecting",
    "content": "16.3.1  There are several inspections the prober may be capable of performing such as inspecting the probes, inspecting ink marks, and inspecting the Probe to Pad alignment.  The supplier must document the inspections that are supported and provide remote commands for selecting the designated inspection.  \n16.3.2  The Inspection associated with the maintenance activity is not to be confused with the process of Inspecting as defined in this section.  The activity of inspecting the equipment in a maintenance capacity may involve the use of subsystems including one or more inspection process steps.  While the use of an inspection subsystem in a process capacity constitutes a transition to the SERVICE TASK state, the equivalent use of the same subsystem in a maintenance capacity does not."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 16.4  Probe Cleaning",
    "content": "16.4.1  This document does not attempt to specify the full set of probe cleaning features.  However, this document does require at minimum the ability to designate logical zones within a cleaning media type to prevent cross-contamination between wafer technology types.  The supplier must provide suitable means through the use of Equipment Constants and Status Variables to allow the user full selectivity of the available options.  \n17.1  Between Substrate Locations (Inter-Substrate Moves)"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.1  Loading Substrates (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.1  Loading Substrates\n\nContent: 17.1.1.1 The host issues the LOAD-SUBSTRATE command to load the next substrate identified in the current Process Job’s PRMtlNameList attribute onto the chuck. The order by which the substrates of a process job are processed is fully defined within the Process Job. 17.1.1.2 If the equipment is configured with a multistage pipeline, upon receiving the LOADSUBSTRATE command from the host, the equipment will fill the pipeline up to the point where the substrate to be processed is loaded onto the chuck and readied for processing. Subsequent LOAD-SUBSTRATE commands will maintain a full pipeline as long as additional substrates are available for processing. This assures continuous material flow. 17.1.1.2.1 Example: if the equipment is configured with a two-stage pipeline consisting of a pre-align stage and a main chuck, A LOAD-SUBSTRATE command issued by the host while the Process State model is in the AWAITING LOAD state and the pipeline is empty will cause the first substrate to be processed"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.1  Loading Substrates (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.1  Loading Substrates\n\nContent: through the pre-align stage and onto the chuck. The next substrate will then be loaded onto the pre-align stage."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.2  Loading Substrates—Spanning Process Job Boundaries",
    "content": "17.1.2.1  When the host issues the LOADSUBSTRATE command that moves the last substrate of the current Process Job out of the first pipeline stage (or chuck for non-pipelined configurations) and another Process Job is defined with the PRProcessStart attribute set to TRUE, the equipment will automatically launch the next Process Job.  If Process Job preconditioning is not required for the newly launched Process Job, the first substrate listed in the PRMtlNameList will be loaded into the first pipeline stage (or chuck for nonpipelined configurations)."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.3  Loading Substrates—Substrate State Model",
    "content": "17.1.3.1  Substrate Tracking events (SEMI E90) must be available to the host.  When a substrate is moved from the source carrier to the first pipeline stage (or chuck for non-pipelined configurations), the substrate state model will transition from AT SOURCE to AT WORK.  \n17.1.3.2  When a substrate is loaded on the chuck, the substrate state model will transition from NEEDS PROCESSING to IN PROCESS for substrates that were not previously suspended (see Section 17.1.5  for  \na description of suspending substrates).  A substrate that was suspended will already be in the IN PROCESS state."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.4  Unloading Substrates (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.4  Unloading Substrates\n\nContent: 17.1.4.1 LOAD-SUBSTRATE Command — When the host issues the LOAD-SUBSTRATE command, the substrate currently occupying the chuck is removed from the chuck and placed in the destination substrate location (This assumes that no additional post-chuck substrate locations exist). The substrate state model transitions from the IN PROCESS to PROCESSED state. When the substrate is loaded in its destination substrate location, the substrate transitions from the AT WORK to the AT DESTINATION state. 17.1.4.2 UNLOAD-SUBSTRATE Command — The host issues the UNLOAD-SUBSTRATE command to remove the substrate from the chuck and place it in its destination substrate location leaving the chuck unoccupied. For pipelined configurations, the substrate(s) in the pipeline remain in their current location. The state model for the substrate removed from the chuck transitions from the IN PROCESS to PROCESSED state. When the substrate is loaded in its destination substrate location, the substrate transitions from the"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.4  Unloading Substrates (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.4  Unloading Substrates\n\nContent: AT WORK to the AT DESTINATION state. This command cannot be used to suspend the substrate occupying the chuck. 17.1.4.3 UNLOAD-ALLSUBSTRATES Command The host issues the UNLOAD-ALLSUBSTRATES command to return all substrates occupying the chuck and pipeline stages to their respective carriers. For pipelined configurations, substrates occupying a prechuck pipeline stage are returned to their source substrate location. The state model for these substrates transitions from the AT WORK to AT SOURCE state while remaining in the NEEDS PROCESSING state. 17.1.4.3.1 UNLOAD-ALLSUBSTRATES with SUSPEND — If the host intends to continue processing the substrate occupying the chuck, the host includes the SUSPEND parameter with the UNLOADALLSUBSTRATES command. (See Section 17.1.5 for a description of suspending substrates.) 17.1.4.3.2 UNLOAD-ALLSUBSTRATES no SUSPEND — If the host has completed processing the substrate occupying the chuck, the host issues the UNLOADALLSUBSTRATES without the SUSPEND"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.4  Unloading Substrates (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.4  Unloading Substrates\n\nContent: parameter. The substrate occupying the chuck transitions from the IN PROCESS to PROCESSED state and is delivered to the destination substrate location. When the substrate is loaded in the destination substrate location, the substrate transitions from the AT WORK to the AT DESTINATION state."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.5  Suspending Substrates",
    "content": "NOTE 6:  Substrate Suspending and Resuming are not Job Control collection events (e.g. CJ/PJ PAUSE/RESUME).  A substrate can be suspended as part of a normal process interrupt to allow a service task to be performed as directed by the host.  \n17.1.5.1  The host can suspend processing on a substrate in order to free the chuck for other purposes such as performing diagnostics or maintenance. A suspended substrate will be returned to its source substrate location and remains in the IN PROCESS state.  When the substrate is loaded into the source substrate location, the substrate transitions from the AT WORK to the AT SOURCE state.  \n17.1.5.2  Suspending a substrate does not change the order in which substrates are processed within a Process Job.  \n17.1.5.3  The commands that result in a substrate being suspended are: UNLOAD-ALLSUBSTRATES with SUSPEND and LOAD-TEST-SUBSTRATE.  It is expected that additional capabilities may exist that result in a substrate being suspended (such as cleaning probes with a cleaning disk)."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.1.6  Resuming a Suspended Substrate",
    "content": "17.1.6.1  A substrate that has been suspended will be the first substrate loaded onto the chuck when processing resumes.  \n17.1.6.2  If a substrate was suspended automatically as part of a service task, the equipment will automatically resume the suspended substrate prior to indicating that the service task has completed.  \n17.1.6.3  If the host suspended a substrate by issuing the UNLOAD-ALLSUBSTRATES with SUSPEND, the host resumes the suspended substrate by issuing the LOAD-SUBSTRATE command."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.2  Chuck Movement (Intra-Substrate Moves) (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.2  Chuck Movement (Intra-Substrate Moves)\n\nContent: 17.2.1 When a control map is used to specify stepping, the INDEX Remote command must be used to move to the next die location. When a control map is not used, either the MOVE, MOVE-ABS or MOVE-SUBSTEP Remote commands must be used to specify motion. 17.2.2 Die coordinates are row and column numbers. Moving the wafer one row increases or decreases the DieYCoordinate by one. Moving the wafer one column increases or decreases the DieXCoordinate by one. Following an INDEX command the die coordinates can be retrieved from the variables “DieXCoordinate” and “DieYCoordinate”. 17.2.3 The Z coordinate is zero if the wafer is out of contact (the chuck is down) with the probes and one if it is in contact (the chuck is up). 17.2.4 The MOVE command specifies the number of rows and columns to move from the current position. When the move is complete, DieXCoordinate will be changed to DieXCoordinate $+ X$ ; DieYCoordinate will be changed to DieYCoordinate $+ \\Upsilon$ . When the Z"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.2  Chuck Movement (Intra-Substrate Moves) (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 17.2  Chuck Movement (Intra-Substrate Moves)\n\nContent: parameter is included in the MOVE command, a value of $( Z = - 1 )$ ) moves the chuck to the down coordinate, a value of $( Z = + 1 )$ ) moves the chuck to the up coordinate, and a value of $( Z = 0 )$ ) leaves the chuck in the starting $Z$ coordinate. 17.2.5 The MOVE-ABS command specifies the new die coordinates. When the move is complete, DieXCoordinate will be changed to X; DieYCoordinate will be changed to Y; and the chuck will be down $( Z = 0 )$ ) or up $( Z = 1 )$ ). 17.2.6 The MOVE-SUBSTEP remote command moves the substrate in units smaller than the die size. The step resolution for the X,Y and $Z$ axis is available for query from the equipment status variables MinXStep, MinYStep and MinZStep. X, Y, and $Z$ are all relative motions in the specified units. The prober may apply an appropriate compensation factor to adjust for thermal expansion, etc."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18  Coordinate System",
    "content": "18.1  This standard provides a coordinate system capable of describing simple geometries.  Additional user-defined attributes may be required in addition to the attribute definitions contained in this specification.  \n18.2  This coordinate system does not include information for establishing which devices on a substrate are “good” devices.  The guidelines for assigning the row and column index number are set forth in SEMI G81."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.3  General Coordinate Attributes",
    "content": "18.3.1  Rows — The number of rows on a substrate in the Y-axis.  A row must contain at least one complete device to be included in this count.  \n18.3.2  Columns — The number of columns on a substrate in the X-axis.  A column must contain at least one complete device to be included in this count."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.4  Matrix Substrates",
    "content": "18.4.1  The term “Matrix” is used to describe the step periodicity associated with an exposure field.  Applicable when the step size between adjacent devices spanning an exposure field is different from the step size of adjacent devices within an exposure field.  \n18.4.2  This standard does not address complex geometries where individual device sizes vary within an exposure field or between exposure fields or where exposure step sizes vary across the substrate.  \n18.4.3  A non-matrix substrate is a substrate where the step size between adjacent devices spanning an exposure field is no different from the step size between adjacent devices within an exposure field."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.4.4  Matrix Attributes (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.4.4  Matrix Attributes\n\nContent: 18.4.4.1 MatrixDeviceRows — This is the number of device rows within an exposure field. This value is dependent upon the Orientation recipe attribute but not the OrientationOnChuck attribute. For non-matrix substrates, the value of this attribute is 1. 18.4.4.2 MatrixDeviceCols — This is the number of device columns within an exposure field. This value is dependent upon the Orientation recipe attribute but not on the OrientationOnChuck attribute. For non-matrix substrates, the value of this attribute is 1. 18.4.4.3 MatrixSizeX — The X-axis step size in microns between a device in one exposure field and the same device in an adjacent exposure field. For non-matrix substrates, the value of this attribute is equal to the StepSizeX attribute. This attribute is dependant on the Orientation recipe attribute. 18.4.4.4 MatrixSizeY — The Y-axis step size in microns between a device in one exposure field and the same device in an adjacent exposure field. For non-matrix substrates, the value of this"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.4.4  Matrix Attributes (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.4.4  Matrix Attributes\n\nContent: attribute is equal to the StepSizeY attribute. This attribute is dependant on the Orientation recipe attribute."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.5  Reference Device",
    "content": "18.5.1  The Reference Device establishes the link between the coordinate system Row and Column and the physical location on the substrate."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.5.2  Reference Device Attributes (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.5.2  Reference Device Attributes\n\nContent: 18.5.2.1 RefDevicePosX — This is the offset of the center of the reference device in the $\\mathrm { \\Delta } \\mathrm { X }$ direction from the center of the substrate with the substrate Orientation at $0 ^ { \\circ }$ and OriginLocation $= 3$ . 18.5.2.2 RefDevicePosY — This is the offset of the center of the reference device in the $\\mathrm { Y }$ direction from the center of the substrate with the substrate Orientation at $0 ^ { \\circ }$ and OriginLocation $= 3$ . 18.5.2.3 ReferenceDeviceX — This is the Column number corresponding to the Reference Device. This value is dependent upon the Orientation and OriginLocation recipe attributes but not the OrientationOnChuck attribute. 18.5.2.4 ReferenceDeviceY — This is the Row number corresponding to the Reference Device. This value is dependent upon the Orientation and OriginLocation recipe attributes but not the OrientationOnChuck attribute. 18.5.2.5 RefDeviceMatrixX — This is the Column number corresponding to the Reference Device"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.5.2  Reference Device Attributes (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.5.2  Reference Device Attributes\n\nContent: within a given exposure field. This value is dependent upon the Orientation and OriginLocation recipe attributes but not the OrientationOnChuck attribute. For non-matrix substrates, this attribute is 1. 18.5.2.6 RefDeviceMatrixY — This is the Row number corresponding to the Reference Device within a given exposure field. This value is dependent upon the Orientation and OriginLocation recipe attributes but not the OrientationOnChuck attribute. For non-matrix substrates, this attribute is 1. 18.6 Coordinate Origin — The Coordinate Origin identifies the axis quadrant occupied by the substrate for addressing devices on the substrate. Type: \"BottomLeft\" Type: \"TopLeft\" Type: \"TopRight\" Type: \"BottomRight\" Type: \"Center\" Figure 5"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.6.1  Origin Recipe Attributes",
    "content": "18.6.1.1  OriginLocation — Coordinate system on substrate to address devices. Enumerated:  \n$0 =$ Center, $1 =$ Upper Right, $2 =$ Upper Left $3 =$ Lower Left (default), $4 =$ Lower Right.  \n18.7  Orientation  \n18.7.1  Orientation addresses the location of the substrate primary fiducial (flat or notch)."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.8  Orientation Attributes (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.8  Orientation Attributes\n\nContent: 18.8.1 Orientation — Identifies the orientation of the fiducial when defining the coordinate system on a substrate. This parameter in conjunction with the OriginLocation recipe attribute determines the coordinate and size attributes of devices on a substrate. 18.8.2 OrientationOnChuck — Identifies the orientation of a substrate loaded on the chuck. This attribute does not affect the coordinate and size attributes of devices on a substrate. 18.9 Example Coordinate References — The values presented in this section are for demonstration purposes (measurements are not exact). 18.9.1 Orientation — The recipe attributes presented in Figure 7 reflect an Orientation attribute setting of $0 ^ { \\circ }$ . The recipe attributes presented in Figure 8 reflect an Orientation attribute setting of $9 0 ^ { \\circ }$ . 18.9.2 Orientation on Chuck — The following example demonstrates the effect of probing a substrate with different settings of the OrientationOnChuck recipe attribute. The"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.8  Orientation Attributes (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 18.8  Orientation Attributes\n\nContent: OrientationOnChuck attribute has no impact on the coordinate values communicated between the host and the equipment."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 19.1  Requirements",
    "content": "19.1.1  All GEM-required events are required by the PSEM300.  Since Processing State Model is required by the PSEM300, all state transitions are required collection events.  \n19.1.2  All GEM-required events associated with the Communications, Alarm, and Spooling State Models are required.  This section of the PSEM300 lists only those collection events that are not associated with a change of state or those requiring specific data variables or reports as defined in the PSEM300."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 19.2  Collection Event Table",
    "content": "19.2.1  Table 3 shows events and reports required for the PSEM300 process state transition.  Table 4 shows other collection events.  \nTable 3  Collection Events Required by Process State Transition  \nTable 4  Additional Collection Events"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20  Data Item Variables",
    "content": "20.1  The purpose of this section is to define the list of data item variables required by the PSEM300.  Values of these variables will be available to the host through collection event reports and host status queries."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.2  Requirements",
    "content": "20.2.1  All generic variable data items defined in GEM are required by all PSEM300 equipment.  Any supplierdefined variables shall be documented in the same format used by this document. The following minimum information is required:"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.3  Data Types (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.3  Data Types\n\nContent: 20.3.1 Equipment constants remain in effect until they are overwritten either by manual entry or by a “New Equipment Constant Send” remote command. Equipment constants have various uses in PSEM300, including the following: 1) Equipment offsets that match the performance of several pieces of equipment that would otherwise perform differently due to inherent manufacturing differences. Examples are home values and motion axis scaling factors. 2) Setting the configuration of the equipment to allow for different material specifications, equipment options, material flows, frequency of automatic functions, etc. 3) Managing optional machine features. Examples are constants that tell the system whether optional substrate ID readers are present and control the configuration and function of these optional subsystems when they are present. 20.3.2 Status Variables are valid at all times. A status variable may not be changed by the host but may be changed by the equipment or operator. The value of the status"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.3  Data Types (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.3  Data Types\n\nContent: variables may be queried by the host at anytime using the “Selected Equipment Status Request” remote command (See SEMI E30). Data variables are variables that are valid only upon the occurrence of specific collection events. An attempt to read a data variable at the wrong time will not generate an error, but the data reported may not have relevant meaning."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.3.3  Data Types and Sizes",
    "content": "Table 5  Data Types and Sizes  \nTable 6  Composite Data Types"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 20.4  Data Item Variable Table",
    "content": "Table 7  Data Item Variable Table"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 21  Recipe Management",
    "content": "21.1  PSEM300 does not attempt to specify how recipes are stored on the equipment or the internal structure of a recipe.  Recipe parameters must be available for query by the host.  The equipment must support process tuning as defined in SEMI E40.  \n21.2  Recipe Setup Parameters contains the minimum set of recipe attributes required by PSEM300.  It is expected that additional parameters will be used to reflect the capabilities of the specific equipment configuration and technologies available for use."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 21.3  Recipes and Process Programs",
    "content": "21.3.1  Recipes and Process Programs are considered to be the same in this document. The recipe of the prober consists of the main recipe with optional service recipes referenced within the main recipe."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 21.4  Recipe Requirements",
    "content": "21.4.1  The PSEM300 requires that the GEM capability of recipe management be fully supported for this class of equipment.  The Process Job specifies the recipe to be executed.  \nTable 8  Recipe Setup Parameters"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22  Remote Commands",
    "content": "22.1  The purpose of this section is to identify remote commands, command parameters, and valid commands versus states in the processing state models."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.2  Requirements",
    "content": "22.2.1  All the remote commands defined by PSEM300 are required.  \n22.2.2  The GEM remote commands START, STOP, PAUSE, ABORT, RESUME, PP-SELECT and RCP-SELECT are not used.  \n22.2.3  The alphanumeric strings defined by PSEM300 for remote commands and command parameters are required.  \n22.2.4  If additional remote commands are supported, then the “Remote Command Versus Valid States” matrix must be generated for these additional commands.  Place an “X” in the table for each state in which a given command is valid."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions\n\nContent: 22.3.1 CLEAN-PROBES — This command causes the probe cleaning routine to be executed. The recipe will contain sufficient settings to identify the cleaning processes. If there is more than one cleaning process defined, each must be identified with a name. If The Process State model was in the AWAITING COMMAND state when the CLEAN-PROBES command was issued, and the cleaning task requires the substrate to be removed from the chuck, the Process State model will transition to the SERVICE TASK state the substrate will be suspended. When the cleaning task is completed, a suspended substrate must be restored to the chuck and the chuck will be returned to the pre-task coordinates prior to the transition from SERVICE TASK to AWAITING COMMAND. 22.3.2 INDEX — This command is used in conjunction with Control Maps. The USE CONTROL MAP recipe attribute must be set to TRUE. The INDEX command causes the prober to move the chuck to the next unprocessed site contained in the control map. 22.3.3"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions\n\nContent: INK-DEVICE — This command causes the current die location to be inked. 22.3.3.1 The Process State model transitions to the SERVICE TASK state. When the task is completed, the Process State model transitions from the SERVICE TASK to AWAITING COMMAND state. 22.3.4 INK-DIE — This command causes the die locations contained in the die-list to be inked. Optionally, the host can specify a control map containing the sites to be inked. 22.3.4.1 The Process State model transitions to the SERVICE TASK state. When the task is completed, the chuck is returned to the pre-task coordinates and the Process State model transitions from the SERVICE TASK to AWAITING COMMAND state. 22.3.5 INSPECT-INK-MARKS — This command causes the ink marks to be inspected. The Process model transitions to the SERVICE TASK state. When the inspection task is completed, the chuck is returned to the pretask coordinates and the Process State model transitions from the SERVICE TASK to AWAITING COMMAND state. 22.3.6"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions\n\nContent: INSPECT-PTP-ALIGN — This command causes the probe to pad alignment to be inspected. The Process State model transitions to the SERVICE TASK state. When the inspection task is completed, the chuck is returned to the pre-task coordinates and the Process State model transitions from the SERVICE TASK to AWAITING COMMAND state. 22.3.7 INSPECT-PROBES — This command causes the probes to be inspected. Support for selective probe site inspection is not a fundamental requirement. When this capability exists, the supplier must document the format of the probe site list. If the Process State model is in the AWAITING COMMAND state, the Process State model transitions to the SERVICE TASK state. When the inspection task is completed, the chuck is returned to the pretask coordinates and the Process State model transitions from the SERVICE TASK to AWAITING COMMAND state. 22.3.8 LOAD-SUBSTRATE — This command causes the next substrate identified in the Process Job to be loaded onto the chuck. The"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions (Part 4)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions\n\nContent: prober must perform all the pre-conditioning requirements for probing to begin. The transition from HANDLING MATERIAL to AWAITING COMMAND indicates that probing can commence. If the probe is unable to perform the necessary steps to prepare the substrate for probing, the prober will send an alarm and transition to the PROCESSING BLOCKED state. 22.3.9 LOAD-TEST-SUBST — This command causes a test substrate from the specified substrate location to be loaded onto the chuck. 22.3.9.1 A substrate occupying the chuck is suspended. When the host issues the UNLOAD-TEST-SUBST command, a suspended substrate is automatically resumed. 22.3.10 LOCKOUT-CONTROL — This command is used to enable and disable the equipment console during remote operations. Passing a value of Lockout=TRUE disables the equipment console and requires the user to switch the control state to ONLINE LOCAL to regain console control. 22.3.11 MOVE — This commande is used to perform a relative move operation. At least one of the"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions (Part 5)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions\n\nContent: optional parameters: X, Y, or $Z$ must be included with this command. An omitted X, Y, or $Z$ is equivalent to specifying zero. 22.3.12 MOVE-ABS — This command is used to perform an absolute move. At least one of the optional parameters: X, Y, or Z must be included with this command. An omitted X, Y, or $Z$ is equivalent to specifying the current value, resulting in no net movement in that direction. 22.3.13 MOVE-SUBSTEP — This command is used to perform a sub-index step. At least one of the optional parameters: XSubstep, YSubstep, or ZSubstep must be included with this command. An omitted XSubstep, YSubstep, or ZSubstep is equivalent to specifying zero. 22.3.14 MOVE-TO-REF-DIE — Move to the Reference Die coordinate as defined within the recipe. 22.3.15 UNLOAD-TEST-SUBST — This command unloads the test substrate from the chuck to the specified substrate location. A suspended substrate is automatically resumed. 22.3.16 RESET-CONTACT-CNT — This command is used to reset the"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions (Part 6)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.3  Remote Commands Descriptions\n\nContent: accumulators associated with the number of contacts made for a given probe card. 22.3.17 RESET-CONTROL MAP — This command is used to reset the coordinate index within a current Control Map. The host can designate the coordinate index within the Control Map by providing the optional XY coordinates with this command. 22.3.18 SET-PROBE-CARD-ID — This command is used to set the probe card ID attribute on the tool. 22.3.19 SET-CONTROL-MAP — This command is used to identify the control map. See Section 15 for the discussion of control maps. 22.3.20 UNLOAD-SUBSTRATE — This command is used to unload the substrate occupying the chuck. The chuck is unoccupied upon completion of this command. 22.3.21 UNLOAD-ALLSUBSTRATES — This command is used to unload substrates occupying the chuck and pipeline stages. 22.3.22 ONLINE-LOCAL — This command is used to change the control state from On-Line Remote to On-Line Local."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.4  Remote Commands and PSEM300 Process Model Mapping",
    "content": "22.4.1  Each remote command either can or cannot be executed depending on a state other than the control state.  \n22.4.2  The following table shows remote commands and the relationship between the PSEM300 process states to b operated by these commands."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table 9  Remote Command vs. Process State",
    "content": "O: Operation is allowed."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 22.5  Restriction on the Operator by Control States",
    "content": "22.5.1  For the remote commands, the operator of the prober or the host is restricted by the control states of the equipment.  \nTable 10  Table of Restrictions on the Operator by Control States  \nO: Operation is allowed. X: Operation is prohibited."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 23  GEM Addition Request",
    "content": "23.1  The purpose of this section is to specify all GEM addition requests that are required to support the equipment of this class."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 23.2  Requirements",
    "content": "23.2.1  GEM addition requests required of PSEM300 are as shown below:  \nEstablish Communications, Dynamic Event Report Configuration, Variable Data Collection, Status Data Collection,  \nAlarm Management,\nRemote Control,\nEquipment Constants,\nProcess Program Management, Equipment Terminal Services, Clock,\nSpooling, and\nControl (host-initiated)."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # RELATED INFORMATION 1",
    "content": "NOTICE:  This related information is not an official part of SEMI E130 and was derived from the work of the originating task force.  This related information was approved for publication by full letter ballot procedures on September 3, 2003."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1  Scenarios",
    "content": "R1-1.1  Scenario I – Complete Multiple Process Job Run  \nR1-1.1.1  Job Description  \nR1-1.1.1.1  A single carrier containing six wafers in two lots is processed as two separate Process Jobs. E90 state transitions are omitted for the sake of clarity.  See Section R1-1.2 for a description of the substrate tracking events.  \nCarrierId: “CarrierA” Process Job 1: Id: PJ01 Slots 1-3 Process Job 2: Id: PJ02 Slots 23-25  \nSubstrate Ids: SubstPJ01.01, SubstPJ01.02, SubstPJ01.03\nSubstrate Ids: SubstPJ02.01, SubstPJ02.02, SubstPJ02.03  \nFigure R1-1 Processing Environment for Scenarios"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.1.2  Sequence Diagram",
    "content": "R1-1.1.2.1  Job Setup  \nFigure R1-2 Normal Run - Job Setup Scenario  \nR1-1.1.2.2  Job Start — At this point, the Process Job is in the PROCESSING state and the prober is waiting for the host to begin processing the material identified in the PRMtlNameList.  \nFigure R1-3 Normal Run - Job Start Scenario  \nFigure R1-4 Normal Run $\\mathbf { \\delta } \\cdot \\mathbf { \\delta }$ Material Processing Scenario"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.1.2.4  Load $2 ^ { n d }$ Substrate",
    "content": "Figure R1-5 Normal Run $\\mathbf { \\delta } \\cdot \\mathbf { \\delta }$ Load $2 ^ { \\mathbf { n d } }$ Substrate Scenario"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.1.2.5  Load $3 ^ { r d }$ Substrate – PJ02 Dispatched",
    "content": "Figure R1-6 Normal Run $\\cdot \\cdot$ Load $3 ^ { \\mathrm { r d } }$ Substrate Scenario  \nProcess Substrate SubstPJ01.03 (See Section R1-1.1.2.3 )"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.1.2.6  Load $\\boldsymbol { l } ^ { s t }$ Substrate of PJ02. PJ01 Terminates",
    "content": "Figure R1-7 Normal Run $\\cdot \\cdot$ Load $\\mathbf { \\bar { 1 } ^ { \\bar { s t } } }$ Substrate of PJ02 Scenario  \nProcess Substrate SubstPJ01.01 (See Section R1-1.1.2.3 )"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.1.2.7  Load PJ02 Substrate 2",
    "content": "Figure R1-8 Normal Run $\\mathbf { \\delta } \\cdot \\mathbf { \\delta }$ Load $2 ^ { \\overset { \\underset { \\mathrm { { \\bar { n } } } \\mathrm { { \\bar { d } } } } { } } { } }$ Substrate of PJ02 Scenario  \nProcess Substrate SubstPJ02.02  (See Section R1-1.1.2.3 )  \nR1-1.1.2.8  Load PJ02 substrate 3  \nMessage sequence identical to Section R1-1.1.2.7  \nFigure R1-9 Normal Run - Load $3 ^ { \\mathrm { { \\bar { r } } d } }$ Substrate of PJ02 Scenario  \nProcess Substrate SubstPJ02.03  (See Section R1-1.1.2.3 )  \nFigure R1-10 Normal Run – Unload $\\bf { \\bar { 3 } ^ { r d } }$ Substrate of PJ02 Scenario  \nR1-1.2  Scenario II – Substrate Tracking Events — This scenario demonstrates the E90 Substrate tracking events corresponding to the job defined in Scenario I.  E40 and E94 messages are omitted for clarity.  \nR1-1.2.1  Job Setup  \nFigure R1-11 Substrate Tracking – Job Setup Scenario"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.2.2  Job Start (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.2.2  Job Start\n\nContent: Figure R1-12 Substrate Tracking – Job Start Scenario R1-1.2.3 Process Material — No Substrate Tracking events occur as the substrate on the main chuck is processed. R1-1.2.4 Load $2 ^ { n d }$ Substrate Figure R1-13 Substrate Tracking – Load $2 ^ { \\mathbf { n d } }$ Substrate Scenario R1-1.2.5 Process Remaining Material — The Substrate Tracking events are identical for the remaining substrates in the two process jobs. R1-1.3 Scenario III – PJ1 is Stopped on $2 ^ { n d }$ Substrate — This scenario involves the same job description as Scenario I. After the 2nd substrate from PJ1 is loaded on the chuck, the host issues a PJStop service message. PJ1 is unloaded and PJ2 continues processing. The purpose of this scenario is to demonstrate the affect of an abnormal job event as it relates to the Process State model. R1-1.3.1 Preconditions — This section provides a summary of the sequence steps from scenario I leading up to the PJStop. R1-1.3.1.1 Job setup. See Section R1-1.1.2.1 R1-1.3.1.2 Job Start."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.2.2  Job Start (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.2.2  Job Start\n\nContent: See Section R1-1.1.2.2. R1-1.3.1.3 Process Material. See Section R1-1.1.2.3 R1-1.3.1.4 Load $2 ^ { \\mathrm { n d } }$ substrate. See Section R1-1.1.2.4. R1-1.3.1.5 Process Material. See Section R1-1.1.2.3 R1-1.3.1.6 Physical View Figure R1-14 Physical View after $2 ^ { \\mathbf { n d } }$ Substrate Loaded R1-1.3.1.7 State Models Table R1-1 Object States after $2 ^ { \\mathsf { n d } }$ Substrate Loaded"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.3.1.8  Stop PJ1",
    "content": "Figure R1-15 Stop PJ01 Scenario"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table R1-2  Object States After PJ01 Stopped (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table R1-2  Object States After PJ01 Stopped\n\nContent: R1-1.3.1.10 Post Processing — The following sequence would be followed to complete the job: R1-1.3.1.10.1 Load PJ02 Substrate 2. See Section R1-1.1.2.7 R1-1.3.1.10.2 Process Material. See Section R1-1.1.2.3 R1-1.3.1.10.3 Load PJ02 Substrate 3. See Section R1-1.1.2.8 R1-1.3.1.10.4 Process Material. See Section R1-1.1.2.3 R1-1.3.1.10.5 Unload PJ02 Substrate 3. See Section R1-1.1.2.9 R1-1.4 Scenario IV – Alarm Condition Causes a Process State Model Transition to the PROCESSING BLOCKED State — The purpose of this scenario is to demonstrate the behavior of prober when an alarm condition occurs that causes the processing resource to become unavailable. The Process State model transitions to the PROCESSING BLOCKED state. The condition does not cause a corresponding transition to the PAUSING state within an executing Process Job or a transition to the PAUSED state within the active Control Job. Figure R1-16 Prober Alarm Scenario R1-1.5 Scenario V – Processing Material using"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table R1-2  Object States After PJ01 Stopped (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table R1-2  Object States After PJ01 Stopped\n\nContent: Control Maps — Control maps can be used for identifying the sites to be probed per substrate. The specification for the download of maps is outside the scope of this specification. The format of the maps is user defined. R1-1.5.1 Example Settings — For the sake of demonstration, the control map pertaining to the substrate in this example is communicated using the SEMI G85 map format. The recipe parameter “USE CONTROL MAP” is set to true. Figure R1-17 Control Map Usage Example Settings Figure R1-18 Control Map Usage Scenario R1-1.6 Scenario VI – Recoverable Alarm — An error occurs when the prober is responding to a MOVE XYZ command (the chuck could not complete the motion). The host is able to restart processing after the chuck is initialized. Figure R1-19 Recoverable Alarm Scenario R1-1.7 Scenario VII – Inspect and Clean Probes — The host issues an INSPECT-PROBES command during substrate processing. The probe inspection fails so the host issues the CLEAN-PROBES command."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table R1-2  Object States After PJ01 Stopped (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # Table R1-2  Object States After PJ01 Stopped\n\nContent: The prober is configured to automatically inspect the probes after the probe cleaning operation. The host resumes processing after the successful clean/inspection: Figure R1-20 Probe Inspection and Cleaning Scenario R1-1.7.2 Cleaning Probes – Detail — This scenario assumes the recipe is setup for cleaning probes using a cleaning substrate. The cleaning substrate is stored in an internal storage site. The substrates currently loaded on the chuck and pre-align stage(s) are returned to the source carrier so that the cleaning substrate can be loaded on the chuck. When the cleaning substrate is removed from the chuck, the substrate(s) that occupied the chuck/pre-align stage(s) are restored."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.7.2.1  Points of Interest (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.7.2.1  Points of Interest\n\nContent: R1-1.7.2.1.1 The service task involves moving substrates between substrate locations. This is not reflected in the Process State model. The host is not involved in the service task. Therefore, there is no need for the Process State model to transition to the HANDLING MATERIAL state. R1-1.7.2.2 Pre-Conditions R1-1.7.2.2.1 Job Setup — See Section R1-1.1.2.1 R1-1.7.2.2.2 Job Start — See Section R1-1.1.2.2. R1-1.7.2.2.3 State Models Table R1-3 Object States for Probe Cleaning Scenario Figure R1-21 Clean Probes Detailed Scenario R1-1.7.2.3 Post Conditions — The post conditions match the pre-conditions. R1-1.8 Scenario VIII – Pre-align Failure on $\\boldsymbol { I } ^ { s t }$ Substrate — The prober fails to setup the $1 ^ { \\mathrm { s t } }$ substrate of a job (the chuck is unoccupied). The user manually aligns substrate and presses Start on the prober console to resume processing. Figure R1-22 Pre-Align Failure on ${ \\bf 1 ^ { s t } }$ Substrate Scenario R1-1.9 Scenario $L X - P r e$"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.7.2.1  Points of Interest (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.7.2.1  Points of Interest\n\nContent: -align Fails on Subsequent Substrate. User Clears Condition Prior to the Host Issuing the Next LOAD-SUBSTRATE Command — The prober fails to pre-align a substrate while the host is processing a substrate on the main chuck. The user manually aligns the substrate and presses Start on the prober console to clear the alarm. The next LOAD-SUBSTRATE command from the host proceeds as normal. Figure R1-23 Pre-Align Failure 2 – Alarm Cleared by User R1-1.10 Scenario X – Pre-align Fails on Subsequent Substrate. User Fails to Clear the Condition Prior to the Host Issuing the Next LOAD-SUBSTRATE Command — The prober fails to pre-align a substrate while the host is processing a substrate on the main chuck. The user manually aligns the substrate but fails to complete the manual alignment prior to the host issuing the LOAD-SUBSTRATE command. The Process State model transitions to the PROCESSING BLOCKED state until the user clears the alarm. When the alarm is cleared, the Process State model"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.7.2.1  Points of Interest (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.7.2.1  Points of Interest\n\nContent: transitions to the HANDLING MATERIAL state and processing resumes as normal. Figure R1-24 Pre-Align Failure 3 – User Failed to clear Alarm"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.11  Scenario XI – Correlation Substrate Testing",
    "content": "R1-1.11.1  Overview — This scenario describes the use of a correlation substrate.  The correlation substrate is loaded on the chuck to verify the test results for the current setup.  From the Process/Control Job perspective, correlation substrate testing is a normal task available to the host.  Therefore, there are no job related collection events associated with correlation testing.  \nR1-1.11.1.1  The correlation substrate is not part of a Process Job.  The correlation substrate must be run using the same recipe as the currently loaded process job."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.11.2  Pre-Conditions (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.11.2  Pre-Conditions\n\nContent: R1-1.11.2.1 Job Setup — See Section R1-1.1.2.1 R1-1.11.2.2 Job Start — See Section R1-1.1.2.2. Figure R1-25 Correlation Scenario $\\mathbf { \\delta } \\cdot \\mathbf { \\delta }$ Physical View R1-1.11.2.4 State Models Table R1-4 Correlation Scenario Object States R1-1.11.2.5 Process Correlation Substrate — The substrates in the pipeline are returned to the source FOUP Substrate SubstPJ01.01 is suspended and remains in the IN PROCESS state. Figure R1-26 Correlation Substrate Processing Scenario R1-1.11.2.6 Unload Correlation Substrate — Unloading the correlation substrate triggers the prober to restore the substrates to the state that existed prior to the host issuing the LOAD-TEST-SUBST command. Figure R1-27 Unload Correlation Substrate Scenario R1-1.11.2.7 Post-Conditions — The prober has restored the substrates to their original condition that preceded the host issuing the LOAD-TEST-SUBST command. SubstPJ01.01 is on the chuck. The chuck is positioned at the coordinates: refX,refY."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.11.2  Pre-Conditions (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-1.11.2  Pre-Conditions\n\nContent: R1-1.11.2.7.1 If a control map is being used, the control map is reset and the chuck is positioned on the first site contained in the map."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R1-2  Additional Non-Standardized Behaviors",
    "content": "This section contains a list of behaviors that are desirable but outside the scope of the PSEM300 standard.  \nR1-2.1  Off-Board Inspection  \nR1-2.1.1  When the need exists to remove a substrate for external inspection, the prober should remember that the substrate has been removed from the equipment.  The Process Job pertaining to the given substrate should not terminate until the substrate has been returned to the correct carrier substrate location as designated in the Control Job’s MtrlOutSpec (or to the source location if the MtrlOutSpec was not provided).  \nR1-2.1.2  Support for off-board inspection is not part of this specification due to the challenge of tracking a substrate that has been removed from the tool.  However, this feature can be requested as a user defined feature.  No guidance is available within this specification regarding the tracking of the substrate or the related impact on the PJ/CJ and Carrier states.  \nFigure R1-28 Off-Board Inspection Scenario"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # RELATED INFORMATION 2",
    "content": "NOTICE:  This related information is not an official part of SEMI E130 and was derived from the work of the originating task force.  This related information was approved for publication by full letter ballot procedures on September 3, 2003."
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing (Part 1)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing\n\nContent: R2-1.1 Following ideas for implementation of specific integrations are not a part of this specification but applications for some regency solution to maximize compliance to this specification. R2-1.2 Some wafer prober with combined specific IC testers may index dice automatically by itself synchronized with such communication as GPIB or RS-232C between tester and prober. According state model in this specification, a series of this automated indexing and testing could be execution of a service task (hatched area in following diagram). Figure R2-1 Self-Indexing State Model R2-1.2.1 For the other application to distinguish this normal probing task from such generic service tasks as Cleaning Probes, adding substate “AUTOPROBING” in the state of “PROCESS” is one of ideas as an extension of this specification. The diagram above illustrates the extension (cross-hatched substate) of a part of the state model in this specification. This extension also eliminates loading/unloading"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing (Part 2)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing\n\nContent: remote commands and related states, and is more close to processing state in SEMI E91 (PSEM). R2-1.2.2 Above diagram illustrates the extension (cross-hatched substate) of a part of the state model in this specification. Clarification of extended sub-states and transitions are given below. R2-1.3 AUTOPROBING — Automatic processing state without instruction of host. Programmed such service operations as inking cleaning are included in this states as well as probing sequence with automated self indexing dice. Usually prober communicates with tester through serial or parallel cable in this state. R2-1.4 VERIFYING — One of substates of AUTOPROBING. This states starts before loading the first wafer of PJ and concludes when all set-up conditions and all alignments for the first wafer of PJ including needle-pad alignment for the first dice on the first wafer is completed. R2-1.5 SORTING — One of substates of AUTOPROBING. Prober executes processing automatically without specific"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing (Part 3)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing\n\nContent: host instruction. The prober needs thecapability to index to the right dice by itself, communicate with the tester, and execute programmed sequences including such service operation as cleaning and inking. Table R2-1 Self-Indexing State Transition Table NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard"
  },
  {
    "title": "SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing (Part 4)",
    "content": "Title: SEMI E130-1104 SPECIFICATION FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # R2-1  Application for Self-Indexing Probing\n\nContent: are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300)",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee. Current edition approved by the North American Regional Standards Committee on July 11, 2004.  Initially available at www.semi.org September 2004; to be published November 2004."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 1  Purpose",
    "content": "1.1  This document maps the services and data of SEMI E130 to SECS-II streams and functions, and data definitions."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 2  Scope",
    "content": "2.1  This is a specification covering equipment supporting automated communication of the prober equipment.  \n2.2  This document applies to all implementations of SEMI E130 that use the SECS-II message protocol (SEMI E5).  Compliance to this standard requires compliance to both SEMI E130 and SEMI E5.  \nNOTICE: This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 3  Limitations",
    "content": "3.1  This specification applies to semiconductor equipment that also use SEMI E30 GEM standard.  \n3.2  PSEM300-compliant equipment must support High Speed Messaging Service (SEMI E37) communication standard for sending SEMI E5 messages over TCP/IP."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 4.1  SEMI Standards",
    "content": "SEMI E5 ⎯ SEMI Equipment Communications Standard 2 Message Content (SECS-II)  \nSEMI E30 ⎯ Generic Model for Communications and Control of Manufacturing Equipment (GEM)  \nSEMI E37 ⎯ High Speed SECS Message Services (HSMS) Generic Services  \nSEMI E123 ⎯ Handler Specific Equipment Model (HSEM)  \nNOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5  Service Message Mapping",
    "content": "5.1  This section shows the specific SECS-II streams and functions that shall be used for SECS-II implementation of the services or remote commands defined in SEMI E130, as well as the parameter mapping for data attached to services."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.2  Services Message Mapping",
    "content": "Table 1  Services Message Mapping Table  \n5.2.1  Table 1 defines the relationships between SEMI E130 services and SECS-II messages.  Mapping of service parameters to the SECS-II data items is provided in a separate table.  Conventions and definitions of table fields are as described below."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.2.2  Service Name — Name of the service or remote command defined in SEMI E130.",
    "content": "5.2.3  Stream, Function — Specifies the SECS-II stream and function (SxFx) mapped to the service messages.  Following convention of SECS-II, request and notification messages are mapped to the oddnumbered functions and response or acknowledgement messages are mapped to the corresponding evennumbered functions."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.3  Event Message Mapping",
    "content": "5.3.1  Table 2 defines the relationships between SEMI E130 collection events and SECS-II messages.  Conventions and table field definitions similar to mapping table for the services, here Event Name specifies the event defined in SEMI E130.  This specification follows SEMI E30 Dynamic Report Configuration to define and attach reports to collection events.  \nTable 2  Event Message Mapping Table"
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.4  Service Parameter Mapping (Part 1)",
    "content": "Title: SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.4  Service Parameter Mapping\n\nContent: 5.4.1 Table 3 defines the relationships between SEMI E130 service parameters and SECS-II data definitions or parameter fields in the mapped streams and functions. Parameters for acknowledgements or responses will follow SECS-II specification for that stream and function, no service specific error codes are defined in this specification. Descriptions of each table column are described below. 5.4.2 Service — Specifies the service whose parameters are described. 5.4.3 SECS-II Field — Specifies the SECS-II data item or message parameter used by the service. In this specification, the DATAID and OBJSPEC fields are unspecified for services using the S2F49 SECS-II message. Their values are to be ignored or used for implementation specific purposes. 5.4.4 Values — Value or SECS II format for the specified field. Formats are specified using the SML notation as defined in appendices of SEMI E30 (GEM). 5.4.5 Req. — Indicates whether the specified field or parameter is"
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.4  Service Parameter Mapping (Part 2)",
    "content": "Title: SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 5.4  Service Parameter Mapping\n\nContent: required or not. If an optional CPNAME parameter is used, the corresponding CPVAL must also be given. 5.4.6 Description — Provides a brief description of the SECS-II field in relation to the service parameters defined in SEMI E130. Table 3 Service Parameter to SECS-II Data Items Mapping"
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6  Variable Data Item Mapping",
    "content": "6.1  The purpose of this section is to define the list of variable items required by SEMI E130. Values of these variables will be available to the host through collection event reports and host status queries."
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.2  Requirements",
    "content": "6.2.1  Any supplier-defined variables shall be documented in the same format used by this document. The following minimum information is required:  \n<variable name> Class: <ECV, SV, or DVVAL> Format: <SML>  \nDescription: <If class $\\mathbf { \\tau } = \\mathbf { \\tau }$ DVVAL, description must contain statement of when data is valid.>  \n<If format $= { \\bf A } { \\bf S } { \\bf C } { \\bf I I }$ , then a length is required. It is assumed to be left-justified unless otherwise noted.>"
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.3  Data Types (Part 1)",
    "content": "Title: SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.3  Data Types\n\nContent: 6.3.1 Equipment Constants (ECVs) can be changed by the host using S2,F15 (New Equipment Constant Send). The operator may be able to change some values, but the equipment does not change the values on its own. The value of an equipment constant may be queried by the host at any time, using the S2,F13/14 transaction. They reside in nonvolatile memory of the equipment. Equipment constants remain in effect until they are overwritten either by manual entry or by a S2,F15. 6.3.2 Status Variables (SVs) are valid at all times. An SV may not be changed by the host but may be changed by the equipment or operator. The value of status variables may be queried by the host at anytime using the S1,F3/4 or S6,F19/20 transactions. 6.3.3 DVVALs are variables that are valid only upon the occurrence of specific collection events. An attempt to read a variable item at the wrong time does not generate an error, but the data reported may not have relevant meaning. 6.4 For multiple sites scenarios, if"
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.3  Data Types (Part 2)",
    "content": "Title: SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.3  Data Types\n\nContent: a variable is described as List by number of sites, then a list is expected, one value for each site. Table 4 Variable Item Mapping Table NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer's instructions, product labels, product data sheets, and other relevant literature, respecting any materials or equipment mentioned herein. These standards are subject to change without notice. By publication of this standard, Semiconductor Equipment and Materials International (SEMI) takes no position respecting the validity of any patent rights or copyrights asserted in connection with any items mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such"
  },
  {
    "title": "SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.3  Data Types (Part 3)",
    "content": "Title: SEMI E130.1-1104 SPECIFICATION FOR SECS-II PROTOCOL FOR PROBER SPECIFIC EQUIPMENT MODEL FOR 300 mm ENVIRONMENT (PSEM300) - # 6.3  Data Types\n\nContent: rights are entirely their own responsibility."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION",
    "content": "This specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee.  Current edition approved by the North American Regional Standards Committee on July 11, 2004 and August 16, 2004.  Initially available at www.semi.org September 2004; to be published November 2004. Originally published March 2004; previously published July 2004.  \nNOTICE:  The designation of SEMI E132 was updated during the 0305 publishing cycle to reflect the creation of SEMI E132.1."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 1  Purpose",
    "content": "1.1 This specification describes a method for restricting access to communication with equipment by requiring clients to authenticate to the equipment before proceeding with subsequent communication, and provides a flexible authorization scheme to control client application access.  Authorization allows parties who want to exchange information with or control the equipment to do so on a need-to-know and/or need-to-use basis.  \n1.2 The authorization scheme specified in this standard allows equipment vendor the flexibility to provide access control at any level of granularity, ranging from no access control restrictions, predefined role-based access control, to very fine-grained control."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 2  Scope",
    "content": "2.1 This is a standard that applies to all semiconductor manufacturing equipment that requires authentication and authorization for its services.  It does not apply to communication that is governed by the SEMI E30 communication and control state models.  \n2.2 This standard does not require data transmitted over an established session to be encrypted, encryption is only required as specified by the authentication protocol.  It is assumed that the interface specified by this standard will be operating in an environment where there are no malicious attacks such as inside a closed factory network.  \nNOTICE: This standard does not purport to address safety issues, if any, associated with its use.  It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 3  Limitations",
    "content": "3.1 An adjunct standard will need to be defined that maps specific technologies and protocols to the defined concepts in this document."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 4  Referenced Standards",
    "content": "4.1 SEMI Standards  \nSEMI E30 — Generic Model for Communications and Control of SEMI Equipment (GEM)  \n4.2 Other Standards  \nUniform Resource Identifiers (URI): Generic Syntax, IETF RFC 2396, August 1998 (http://www.ietf.org/rfc/rfc2396.txt)  \nNOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 5  Referenced Documents",
    "content": "5.1 Unified Modeling Language (UML) Specification, Version 1.4, OMG Specification 01-09-67,\nhttp://www.omg.org/technology/documents/\nmodeling_spec_catalog.htm"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions\n\nContent: 6.1.1 administration — the process of configuring equipment client identities, associated credentials, and setting authorizations. 6.1.2 Asymmetric Key Cryptography — see Public Key Cryptography. 6.1.3 authenticated communications — communications with equipment compliant to this specification to establish an authenticated session, to grant authorizations and for administration. This includes any communications over the authenticated session. Note that authenticated communications are not necessarily encrypted. 6.1.4 authenticated session — also referred to as session in this document, this is an application-level concept defined by this specification and is independent of any physical or logical connection or communication protocol “session” layer used in the actual exchange of messages. An authenticated session or session follows the session establishment procedure, state models, and the defined services as described in this specification. 6.1.5 authentication — the process of determining whether a user or process"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions\n\nContent: is, in fact, who or what it is declared to be. In private and public computer networks, authentication is often achieved through the use of passwords. Knowledge of the password is assumed to guarantee that the user is authentic. This standard refers only to the authentication of application processes, and does not support or address authentication of human users. 6.1.6 authorization — the process of granting the privilege to perform a specific action to a user or process. Not that the user or process must be authenticated before authorization may take place. 6.1.7 client — an application process that communicates with the equipment to access equipment resources. This specification uses the terms “client” and “client application” interchangeably. 6.1.8 communication session — a series of two-way message exchanges between a client and the equipment. A session typically begins and ends at the request of the client. 6.1.9 cryptographic algorithm — a transformation of meaningful data into some meaningless data, a process"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions (Part 3)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions\n\nContent: called encryption. If the transformation is reversible, then the reverse process is called decryption. Typically it is computationally difficult to correctly decrypt the data without knowing both the algorithm used and some additional information, referred to as keys. 6.1.10 encryption — see cryptographic algorithm. 6.1.11 message digest — see one-way hash. 6.1.12 one-way hash — a one-way transformation of an arbitrary length of data into a fixed-length code. The transformation is computationally difficult to reverse, and unlikely to have collisions. The same message will always result in the same hash, and any slight modification to the original message will result in a different hash, thus providing message integrity. The terms One-way Hash, Hash and Digest are used interchangeably in this document. 6.1.13 Persistent Session — an Authenticated Session established that survives equipment shutdowns or power offs, it is set to persistent by a client through an equipment service defined in this specification. Behavior"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions (Part 4)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions\n\nContent: of a persistent session during equipment shutdown and startup is as defined by the session state model described in this document. 6.1.14 Public Key Cryptography (PKC) — also known as Asymmetric Key Cryptography, a cryptographic algorithm that employs two keys for encryption and decryption of data. One key is designated as the public key and can be freely advertised, while the other key, designated as the private key, is never revealed. Data encrypted with one key can only be decrypted with the other key. PKC is widely used for key exchange and message signing. 6.1.15 Secret Key Cryptography (SKC) — also known as Symmetric Key Cryptography, a cryptographic algorithm that employs one single key for both encryption and decryption. SKC is widely used for bulk encryption of data due to its speed over PKC. 6.1.16 Session — in this document, the term “session” refers to an Authenticated Session unless specified otherwise It has no relation to the sessions that may be defined elsewhere. 6.1.17 Symmetric Key Cryptography —"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions (Part 5)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 6.1 Definitions\n\nContent: see Secret Key Cryptography."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 7  Conventions",
    "content": "7.1 Unified Modeling Language (UML) Notation — All class and sequence diagrams in this standard make use of the Unified Modeling Language notation.  \n7.2 Attribute Tables — The table below provides an example of the tables used to list and describe attributes of classes defined in this specification.  \nTable 1 Attribute Table Format  \n7.2.1 Form — Defines the data type of the attribute.  The terms used to describe data types used in this column are defined in the SEMI Compilation of Terms, or are included as part of the specification.  Refer to the compilation of terms for the definition of SEMI type name meanings.  \n7.2.2 Association Tables — The table below provides an example of the tables used to list and describe associations between classes defined in this specification."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 2 Association Table Format",
    "content": "7.2.2.1 Association Role Name — The name of the association role being specified.  \n7.2.2.2 Definition — Describes the function or purpose of the association.  \n7.2.2.3 Comments — Any additional comments or notes regarding the association.  \n7.3 Operation Definition Tables — The table below provides an example of the tables used to list and describe the interface operations defined in this specification."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 3 Operation Definition",
    "content": "7.3.1 Operation — Specifies the name of the operation.  \n7.3.2 Type — Specifies the messaging semantics of the operation.  Only Request-Response (RR) and Fire-andForget (FF) semantics are used in this specification.  \n7.3.3 Requestor/Sender — For RR semantics, identifies the entity that makes the request, for FF semantics, identifies the entity that sends the message.  Can be ‘Client’, ‘Admin’, or ‘Equipment’.  Client can be any of the applications communicating to equipment compliant to this specification.  \n7.3.4 Responder/Receiver — For RR semantics, identifies the entity that responds to the request, for FF semantics, identifies the entity that receives the message.  Can be ‘Client’, ‘Admin’, or ‘Equipment’.  \n7.4 Operation Argument Definition Table — The table below provides an example of the tables used to list and describe arguments for interface operations defined in this specification."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # Table 4 Operation Argument Definitions",
    "content": "7.4.1 Argument — Specifies the name of the argument.  \n7.4.2 Kind — Specifies whether the argument is an ‘in’, ‘out’, or ‘error’ argument for the operation.  ‘error’ arguments always function as ‘out’ arguments, but indicate that the operation did not complete successfully.  Not all errors possible for a specific operation will be listed, only select typical ones are.  \n7.4.3 Form — Defines the data type of the argument.  The terms used to describe data types in this column are defined in the SEMI Compilation of Terms, or are included as part of the specification.  Refer to the compilation of terms for the definition of SEMI type name meanings."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 8  Background (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 8  Background\n\nContent: 8.1 In conventional semiconductor equipment communication, such as that defined by SEMI E30, it is assumed that only a single client application can gain access to the equipment for communication. This assumption was valid when the physical transport medium was based on a serial cable connection to the equipment. In such an environment, it is possible to ensure that only a single client application is permitted to interface with the equipment by only providing the serial connection to the machine on which the application runs. 8.2 As equipment communication moves from a serial cable medium to Ethernet, it becomes possible for any client on the network to send requests to the equipment, provided there is a path from the client node to the equipment. Without taking specific measures to secure communication with the equipment, it is not possible to ensure that only authorized clients are permitted to communicate with the equipment. 8.3 Even if the equipment accepts only a single connection request from the network, it is"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 8  Background (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 8  Background\n\nContent: still vulnerable to a race condition among any clients that attempt to connect. This results in a “first-come, first-served” policy in which the first client to attempt a connection with the equipment is granted access, even if that client is not authorized to communicate with that specific equipment. Such an environment is insufficient for providing adequate protection of equipment resources. $8 . 4 \\mathrm { A }$ more secure technique to ensure that only authorized clients are allowed to utilize equipment resources is to require clients to first prove their identity to the equipment. If the equipment knows a client’s identity, then the equipment may be able to assume that the client is authorized to proceed with further requests."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9  Overview (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9  Overview\n\nContent: 9.1 This standard defines a mechanism for clients of manufacturing equipment to authenticate to the equipment prior to any subsequent communication. To facilitate this, both the authentication procedure itself and a means for establishing client identities with the equipment beforehand must be defined. This standard also defines a flexible scheme for authorization and mechanisms to support a centralized administration model. 9.2 Central Administration Model — A conceptual view of a central security administration model is presented i Figure 4 below. 9.2.1 Security Admin — The security admin issues client credentials, establishes client authorizations and possibly client credentials on the equipment, defines custom roles and their authorizations. Client credentials are identifying information for the client. The security admin manages equipment authorizations and client credentials using an administration interface defined in this specification. The interface between security admin and client to communicate the"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9  Overview (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9  Overview\n\nContent: credentials will not be defined in this document, and may be as simple as configurations inside the client application. 9.2.2 Client — The client holds any issued credentials assigned to it, and authenticates to the equipment to establish an authenticated session. 9.2.3 Equipment — The role of equipment in the administration model is to establish the security admin entity for the equipment, hold any defined authorizations, authenticate clients to establish a session, determine client authorization levels and enforce them for the established session. 9.2.4 Interfaces — The authentication, administration, and session establishment interfaces will be defined in later sections along with the concepts of establishing client identities and authorizations, though the actual technology and protocols used maybe defined in further detail in a separate adjunct standard."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9.3 Challenge/Response Authentication",
    "content": "9.3.1 The authentication process begins when a client first attempts to establish a communication session with the equipment.  Upon receiving this request, the equipment challenges the client to prove its identity to the equipment. The client must encrypt some session-generated data using a private or secret key (e.g. a password) that only the claimed client would know.  The equipment can verify client’s claim using the corresponding public key or shared secret key assigned to the client to decrypt the data, if decrypted data matches plaintext then client is verified.  \n9.3.2 For communication technologies in which a separate outgoing connection must be established in order for the equipment to send events, the equipment must also verify that the receiving address is valid.  This is achieved by sending a ping message to the client endpoint (see Section 15.1.1).  This specification currently does not define a mechanism by which a client can transfer an established session to a different endpoint."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9.4 Authorization (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9.4 Authorization\n\nContent: 9.4.1 Any client application wishing to invoke privileged services on the equipment must be authorized to do so. Authorization is implemented by granting access control privileges beforehand to defined clients and later checked against the client’s requests. The general operational flow is as follows: • Authentication and Credentials Exchange — Client application authenticates to equipment as to its identity and establishes an authenticated session. Session Established — Equipment optionally caches client application’s privileges and associates these privileges with the newly-created session. • Service Request — Client application makes a service request. • Privilege Validation — Equipment validates the client application’s request against its assigned privileges. • Session Closed — Client application closes session, all session state information are reset or cleaned. 9.4.2 Since the client does not authenticate itself for each service request, privilege validation is performed against the authenticated session"
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9.4 Authorization (Part 2)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 9.4 Authorization\n\nContent: created for that client. This does not necessarily mean that the implementation of a session requires the use of a stateful or connection-oriented communication protocol, or that authentication must be performed during every protocol-level reconnect. If the implementation protocol is connectionless, the session can be identified by some mutually agreed upon session identifier, negotiated during the authentication process required to establish a session. NOTE 2: This specification does not define a mechanism for controlling end-user access to equipment services or information. The authentication and authorization scheme defined in this specification applies at the application level only. Management of end-user access to equipment functions and information is strictly the responsibility of applications that make use of the authenticated communication sessions defined in this specification."
  },
  {
    "title": "SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication (Part 1)",
    "content": "Title: SEMI E132-0305SPECIFICATION FOR EQUIPMENT CLIENT AUTHENTICATION ANDAUTHORIZATION - # 10  Authentication\n\nContent: 10.1 Authentication Message Flow — The authentication message flow during a normal session establishment is presented in Figure 5. Arrows represent the major messages exchanged during the handshake, with side notes clarifying the key data exchanged in each message. Depending on the actual messaging/transport protocols and encryption algorithms used, some additional messages or data parameters may be added, but the concept remains the same. Specifics of algorithms and protocols will be detailed in a separate technology mapping specification. The terms server and equipment are used interchangeably. 10.1.1 Session Request — This message requests the equipment to initiate establishment of an authenticated session. Upon receiving this message, the equipment begins the authentication handshake as shown in Figure 5. If the request is not accepted, the equipment responds with a protocol specific alert or error message and terminates the connection, see Equipment Challenge. 10.1.2 Equipment Challenge — After the session"
  }
]