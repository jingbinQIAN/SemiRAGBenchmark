{
  "doc_id": "semi_docs_028",
  "chunk_id": 1,
  "content": "SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 6.4.8  Device Profile/Device Data Base (Part 1)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 6.4.8  Device Profile/Device Data Base\n\nContent: 6.4.8.1 PROFIBUS devices have different performance characteristics. Features differ in regard to available functionality (i.e., number of I/O signals and diagnostic messages) or possible bus parameters such as baud rate and time monitoring. These parameters vary individually for each device type and vendor. These parameters are usually documented in the technical manual. To achieve simple plug-and-play configuration of PROFIBUS, the characteristic features are specified in an electronic data sheet called a Device Data Base file or GSD file. 6.4.8.2 The GSD Files provide a clear and comprehensive description of the characteristics of a device type in a precisely defined format. These are prepared individually by the vendor for each type of device and made available to the user in the form of a Device Data Base Sheet and a GSD File. The device data base file is divided into three parts: General Specifications, Master Related Specifications, and Slave Related Specifications. 6.4.8.3 These\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 6.4.8  Device Profile/Device Data Base (Part 2)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 6.4.8  Device Profile/Device Data Base\n\nContent: GSD Files are maintained and managed by the PROFIBUS Trade Organization.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 6.5  Network Management\n\n6.5.1  The PROFIBUS-DP system is managed through several phases of operation.  A Master device must have knowledge of the Device Profile for each of the Slave devices it will connect.  The Device Data Base Files serve this purpose.  Upon initialization, a Master will control a DP-Slave through three operational modes: Parameterization, Configuration, and I/O Data Exchange.  In any operational mode, a Master may interrogate a DP-Slave for its Diagnostic information.  \n6.5.2  In the sections that follow, these operation modes are mapped to related SAN CDM behavior states.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7  Required Object Types\n\n7.1  This section describes a general mapping of the SEMI SAN Object Model to the PROFIBUS-DP environment.\nComponent definitions are clarified and the mapping of Attributes, Services, and Behaviors are specified.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.2  Object Model\n\n7.2.1  The Object Model defined in the CDM is represented in the PROFIBUS NCS.  Specifically, the DM and SAC objects are mapped.  \n7.2.2  The CDM Objects are mapped to slots.  These slots have a unique address space within the device.  The Application Objects associated with the SDM standards are mapped in PROFIBUS-DP Device Data Base documents as defined above in the Device Profile/Device Data Base section. $\\ S 9$ specifies the mapping of SDM Objects in PROFIBUS-DP.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.3  Component Mapping Summary\n\n7.3.1  Figure 2 provides a summary of the components of the CDM object model as they relate to the components of PROFIBUS-DP.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.4  Objects\n\n7.4.1  The required objects of the CDM are identified here.  Additional objects that are contained in the SDM are given identifiers in the Device Profile. $\\ S 9$ specifies additional mapping information.  \n7.4.2  Table 3 lists the Object Identifiers specified for use in protocol messages.  Slot numbers are the way for addressing Objects within PROFIBUS-DP.  \nTable 3  Object Identifiers  \n7.4.3  Assembly Objects and Local Link Objects which are objects embedded in the SAC Object is not explicitly mapped.  \n7.5  Attributes  \n7.5.1  General  \n7.5.1.1  All attributes are accessible via Get_Attribute and Set_Attribute services defined in the sections below. Additionally, attributes are accessible via different PROFIBUS-DP defined methods which are mapped in this document based on attribute type.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.2  DM Attributes\n\n7.5.2.1  All attributes are communicated with Read and Write Service and mapped to IM Blocks.  Status attributes are modeled additionally as Channel Diagnosis.  See Table 18 for detailed mapping.  \n7.5.2.2  Table 4 shows the DM status attribute mapping to Diagnosis.  \nTable 4  Channel Diagnosis mapping of DM Status\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.3  SAC Attributes\n\n7.5.3.1  The attributes of SAC are mapped to Process data objects of PROFIBUS.  \n7.5.3.2  The Slot number used is 0.  The index is the numeric value of the SAC Attribute identifier with an offset of\n64 (see Table 5).  \nTable 5  SAC Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.4  Active Element Attributes\n\n7.5.4.1  The attributes of Active Elements are mapped to Process data objects of PROFIBUS.  These attributes are contained in any Sensor, Actuator and Controller Object.  \n7.5.4.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Active Element Attribute identifier with an offset of 64 (see Table 6).  \nTable 6  Active Element Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.5  Sensor Attributes\n\n7.5.5.1  The attributes of Sensors are mapped to Process data objects of PROFIBUS.  These attributes are contained in any Sensor-AI, Sensor-EI and Sensor-BI Object.  \n7.5.5.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Attribute identifier with an offset of 64 (see Table 7).  \nTable 7  Sensor Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.6  Actuator Attributes\n\n7.5.6.1  The attributes of Actuators are mapped to Process data objects of PROFIBUS.  These attributes are contained in any Actuator-AO, Actuator-EO and Actuator-BO Object.  \n7.5.6.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Actuator Attribute identifier with an offset of 64 (see Table 8).  \nTable 8  Actuator Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.7  Controller Attributes\n\n7.5.7.1  The attributes of Controllers are mapped to Process data objects of PROFIBUS.  \n7.5.7.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Controller Attribute identifier with an offset of 64 (see Table 9).  \nTable 9  Controller Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.8  Sensor Analog Input Attributes\n\n7.5.8.1  The attributes of Sensor Analog Inputs are mapped to Process data objects of PROFIBUS.  \n7.5.8.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Analog Input Attribute identifier with an offset of 64 (see Table 10).  \nTable 10  Sensor Analog Input Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.9  Sensor Binary Input Attributes\n\n7.5.9.1  The attributes of Sensor Binary Inputs are mapped to Process data objects of PROFIBUS.  \n7.5.9.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Binary Input Attribute identifier with an offset of 64 (see Table 11).  \nTable 11  Sensor Binary Input Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.10  Sensor Enumerated Input Attributes\n\n7.5.10.1  The attributes of Sensor Enumerated Inputs are mapped to Process data objects of PROFIBUS.  \n7.5.10.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Enumerated Input Attribute identifier with an offset of 64 (see Table 12).  \nTable 12  Sensor Enumerated Input Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.11  Actuator Analog Output Attributes\n\n7.5.11.1  The attributes of Actuator Analog Outputs are mapped to Process data objects of PROFIBUS.  \n7.5.11.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Actuator Analog Output Attribute identifier with an offset of 64 (see Table 13).  \nTable 13  Actuator Analog Output Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.5.12  Sensor Binary Input Threshold Attributes\n\n7.5.12.1  The attributes of Sensor Binary Input Thresholds are mapped to Process data objects of PROFIBUS.  \n7.5.12.2  The Slot number used is the instance number in the device.  The index is the numeric value of the Sensor Binary Input Threshold Attribute identifier with an offset of 80 (see Table 14).  The different mapping has to be done because there is an Overlap to the Sensor Binary Input Attributes enumeration part.  \nTable 14  Sensor Binary Input Threshold Object Attribute Identifiers  \n7.6  Services  \n7.6.1  DM Services  \n7.6.1.1  Get_Attribute and Set_Attribute are mapped to Read and Write services to the IM Objects.  \n7.6.1.2  The other services are mapped to a write at an UINT Object addressed with Index 96 as described in Table 3 and Table 15.  \n7.6.1.3  A read to Index 96 will return the last command executed successfully.  \nTable 15  DM Service Mapping\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.6.2  SAC Services\n\n7.6.2.1  Get_Attribute and Set_Attribute are mapped to Read and Write services with Slot and Index as described in ¶¶ 7.2 and 7.4.  \n7.6.2.2  The other services are mapped to a write at an UINT Object addressed with Index 64 as described in Table 3 and Table 16.  \n7.6.2.3  A read to Index 64 will return the last command executed successfully (Exception: Restore Default is no mirrored).  \nTable 16  SAC Service Mapping\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.6.3  Active Element Services\n\n7.6.3.1  Get_Attribute and Set_Attribute are mapped to Read and Write services with Slot and Index as described in ¶¶ 7.2 and 7.4.  \n7.6.3.2  The other services are mapped to a write at an UINT Object addressed with Index 64 as described in Table 2 and Table 17.  \n7.6.3.3  A read to Index 64 will return the last command executed successfully (Exception: Restore Default is not mirrored).  \nTable 17  Active Element service mapping\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.7  PROFIBUS-DP Device Data Base\n\n7.7.1  The specification of the Device Data Base (or GSD file) for a given SDM is beyond the scope of this document.  The PROFIBUS Trade Organization is responsible for the management of these files.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 7.8  PROFIBUS-DP I/O Data Exchange\n\n7.8.1  Input/Output attributes of the Application objects are communicated using the I/O Data Exchange method of PROFIBUS-DP.  This method is described in the PROFIBUS-DP standard.  A list of which attributes are accessible with this method is included in the PROFIBUS Device Profile for a given device type  \nTable 18  DM Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 8  Protocol Compliance\n\n8.1  PROFIBUS International has established a qualified certification system, with test laboratories in Europe, Asia and USA, which includes conformance testing and interoperability testing (address list can be found at http://www.PROFIBUS.com/support.html).  Certified products are listed with their certificate number in the PROFIBUS Electronic Product Guide.  \n8.2  GSD files of all PROFIBUS-DP devices that are tested for their conformity to the PROFIBUS standard are available in the GSD library on the World Wide Web Server of the PROFIBUS User Organization at http://www.PROFIBUS.com.\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9  Specific Device Model Mappings (Part 1)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9  Specific Device Model Mappings\n\nContent: 9.1 Every type of device must have an identifier number. Vendors must apply for an identifier number from the PROFIBUS User Organization for every Device Type. In order to receive a valid identifier number, a Device Profile must be submitted in the form of a GSD File and Device Data Base Sheet. 9.2 The Device Profile must specify the identifiers for Objects, Attributes and Services for CDM and SDM components, including data formats and bit mappings for specified parameters, as represented in this document. 9.3 The following sections specify mappings for Sensor Actuator Network Specific Device Models. 9.4 Mass Flow Device 9.4.1 Reference SEMI E54.3 for a complete specification of the SDM for Mass Flow Devices. Accordingly, the following mapping rules apply to the identification tags for the Objects, Attributes and Services of this model. 9.4.2 Objects 9.4.2.1 Consistent with SEMI E54.3 and $\\ P 7 . 4$ above, the DM and SAC objects are identified as Object 1 and Object 2, respectively. 9.4.2.2\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9  Specific Device Model Mappings (Part 2)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9  Specific Device Model Mappings\n\nContent: Notice that references for the Local Link Objects are not included; the existence of these objects are implied by behavior and not explicitly included. Therefore, these objects are not accessible from the network. 9.4.2.3 Table 19 shows the mapping of the SDM. 9.4.2.4 Objects specified in SEMI E54.3 are listed under the heading NCS Module reference. Every instance is allocated to a slot number. The configuration can be modeled in the GSD by using the Module reference as key for the module description. Table 19 Mass Flow Device Object Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.4.3  Attributes\n\n9.4.3.1  The mapping of Attribute Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.4.3.2  Tables 20–24 show the mapping of the specific SDM attributes.  \nTable 20  Sensor AI-MF Object Attribute Identifiers  \nTable 21  Actuator AO-MF Object Attribute Identifiers  \nTable 22  Controller Object Attribute Identifiers  \nTable 23  SISO Object Attribute Identifiers  \nTable 24  SISO Setpoint Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.4.4  Services\n\n9.4.4.1  The mapping of Service Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.4.4.2  The additional Services of Sensor-AI-MF are mapped as described in Table 25.  \nTable 25  Sensor-AI-MF additional Service mapping\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.5  In-Situ Particle Monitor Device\n\n9.5.1  Reference SEMI E54.10 for a complete specification of the SDM for In-Situ Particle Monitor Device (ISPM).  \n9.5.2  Objects  \n9.5.2.1  Consistent with SEMI E54.10 and $\\ P 7 . 4$ above, the DM and SAC objects are identified as Object 1 and Object 2, respectively.  \n9.5.2.2  Notice that references for the Local Link Objects are not included; the existence of these objects are implied by behavior and not explicitly included.  Therefore, these objects are not accessible from the network.  \n9.5.2.3  Table 26 shows the mapping of the SDM.  \n9.5.2.4  Objects specified in SEMI E54.10 are listed under the heading NCS Module reference.  Every instance is allocated to a slot number.  The configuration can be modeled in the GSD by using the Module reference as key for the module description.  \nTable 26  In-Situ Particle Monitor Device Object Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.5.3  Attributes\n\n9.5.3.1  The mapping of Attribute Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.\n9.5.3.2  Tables 27–32 show the mapping of the specific SDM attributes.  \nTable 27  DM Object Additional Attribute Identifiers  \nTable 28  SAC Object Additional Attribute Identifiers  \nTable 29  Sensor AI-LCS Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # Table 30  Sensor AI-SLS Object Attribute Identifiers\n\nTable 31  Sensor AI-MNS Object Attribute Identifiers  \nTable 32  Sensor AI-Counter Object Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.5.4  Services\n\n9.5.4.1  The mapping of Service Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.  \n9.5.4.2  The additional Services of DM are mapped as described in Table 33.  \nTable 33  DM additional Service Mapping  \n9.5.4.3  The additional Services of SAC are mapped as described in Table 34.  \nTable 34  SAC Additional Service Mapping\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6  Endpoint Device (Part 1)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6  Endpoint Device\n\nContent: 9.6.1 Reference SEMI E54.11 for a complete specification of the SDM for Endpoint Devices. 9.6.2 Date-and-Time data structure shall be mapped to PROFIBUS data type Time Of Day. An Offset of 4383 has to be added to Time Of Day day value to obtain the number of days since 1/1/72 (Time Of Day base is 1/1/84). 9.6.3 Objects 9.6.3.1 Consistent with SEMI E54.11 and $\\ P 7 . 4$ above, the DM and SAC objects are identified as Object 1 and Object 2, respectively. 9.6.3.2 Notice that references for the Local Link Objects are not included; the existence of these objects are implied by behavior and not explicitly included. Therefore, these objects are not accessible from the network. 9.6.3.3 Table 35 shows the mapping of the SDM. 9.6.3.4 Objects specified in SEMI E54.11 are listed under the heading NCS Module reference. Every instance is allocated to a slot number. The configuration can be modeled in the GSD by using the Module reference as key for the module description. 9.6.3.5 The Sensor-BI-TH-EP can occur more than\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6  Endpoint Device (Part 2)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6  Endpoint Device\n\nContent: once. This shall be modeled in GSD in that way, that this Module ID can be placed in several slots. Table 35 Endpoint Device Object Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6.4  Attributes\n\n9.6.4.1  The mapping of Attribute Tags and Identifiers is defined in $\\ S 7$ for SAC.  The same method applies here for the SDM.\n9.6.4.2  Tables 36 and 37 show the mapping of the specific SDM attributes.  \nTable 36  DM Object additional Attribute Identifiers  \nTable 37  Sensor-BI-TH-EP Object additional Attribute Identifiers\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6.5  Services (Part 1)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6.5  Services\n\nContent: 9.6.5.1 The mapping of Service Tags and Identifiers is defined in $\\ S 7$ for SAC. The same method applies here for the SDM. 9.6.5.2 The additional Services of SAC are mapped as described in Table 38. Table 38 SAC additional Service mapping 9.6.5.3 The additional Services of Sensor BI-EP are mapped as described in Table 39. Table 39 Sensor BI-EP additional Service mapping NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. By publication of\n\nSEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6.5  Services (Part 2)\n\nTitle: SEMI E54.8-0305SPECIFICATION FOR SENSOR/ACTUATOR NETWORKCOMMUNICATIONS FOR PROFIBUS-DP - # 9.6.5  Services\n\nContent: this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP\n\nThis specification was technically approved by the Global Information and Control Committee and is the direct responsibility of the North American Information and Control Committee. Current edition approved by the North American Regional Standards Committee on October 25, 2002.  Initially available at www.semi.org December 2002; to be published March 2003. Originally published February 2000; previously published October 2000.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 1  Purpose\n\n1.1  This standard defines a communication specification based on the Modbus/TCP protocol over a Transmission Control Protocol/Internet Protocol (TCP/IP) network to enable communications between intelligent devices on a sensor/actuator network (SAN) that operate according to SEMI specified device models (common and device specific) in a semiconductor manufacturing tool.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 1.2  Background and Motivation\n\n1.2.1  Modbus/TCP over TCP/IP is a component level network which provides a simple, inexpensive, and fast means of exchanging data among control level industrial devices (e.g., sensors and actuators) and higher level devices such as controllers.  Modbus/TCP over TCP/IP provides:  \nA solution to low-level device networking, Access to intelligence present in low-level devices, Networking between higher level controllers, and Master/Slave and Peer-to-Peer communication capabilities.  \n1.2.2  Modbus/TCP specifies a communication model and protocol. The Physical, Data Link, and Network Layer definitions are defined by the network in which the Modbus/TCP protocol is embedded such as TCP/IP Ethernet.  \n1.2.3  This document enables communications between intelligent devices on a SEMI compliant SAN by providing a presentation mapping of common and specific device network visible structure and behavior to Modbus/TCP over a TCP/IP network.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 2  Scope\n\n2.1  This document specifies the protocol and services that compliant intelligent devices must support to exchange information over this semiconductor equipment sensor/actuator network.  \n2.2  This document specifies the utilization of the Modbus/TCP protocol to present externally visible device structure and behavior, specified in the Common Device Model (CDM) and appropriate Specific Device Models (SDMs), for the Modbus/TCP protocol over a TCP/IP network.  \n2.3  This document is used in conjunction with a SEMI standard SAN Common Device Model specification, one or more SEMI standard Specific Device Model (SDM) specifications (e.g., for a mass flow device), the Modicon Modbus Protocol Reference Guide and the Open Modbus/TCP Specification. Together, they describe the Modbus/TCP protocol, the externally visible data structures and behaviors of devices utilizing the Modbus/TCP networking capability in a SEMI compliant SAN system.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 3  Limitations (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 3  Limitations\n\nContent: 3.1 This document specifies a semiconductor equipment SAN based solely on Modbus/TCP over a TCP/IP network and is a companion document to the Open Modbus/TCP Specification; thus a complete specification of this standard necessarily includes the Modbus/TCP and Modbus protocol specifications. There are other semiconductor equipment SAN communications options. The specifications for these options are not included here. 3.2 This standard specifies enhancements that provide additional capabilities over and above those currently required by Modbus/TCP. In order to avoid document consistency problems, information in the Modbus/TCP standard specifications that relate to this standard is not repeated in this document. This document is limited to describing enhancements or limitations to the Modbus/TCP standard specifications that are imposed by this standard. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 3  Limitations (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 3  Limitations\n\nContent: to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 4.1  SEMI Standards\n\nSEMI E39 — Object Services Standard: Concepts, Behavior, and Services (OSS)  \nSEMI E54.1 — Standard for Sensor/Actuator Network Common Device Model  \nSEMI E54.3 — Specification for Sensor/Actuator Network Specific Device Model for Mass Flow Device\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 4.2  Other Standards\n\nIEEE 802.3 –– Telecommunication and Information Exchange between System Local and Metropolitan Networks Specific Requirement Part 3: Carrier Sense Multiple Access CSMA/CD Method and Physical Layer Specification, $1 9 9 8 ^ { 1 }$  \nIP RFC 791 — Reference for data transmission2  \nISO 7498 — Basic Reference Model for Open Systems Interconnection3  \nPI-MBUS-300 Rev. E — Modicon Modbus Protocol Reference Guide, March $1 9 9 3 ^ { 4 }$  \nSpecification — Open Modbus/TCP Specification Version 1.0 March 29, 19994  \nNOTICE: As listed or revised, all documents cited shall be the latest publications of adopted standards.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 5  Terminology\n\n5.1  Terminology that is common to all of the documents in this SAN standard may also be defined in the Sensor/Actuator Network standard.  Terminology may be reproduced here which is defined in other SEMI standards.  \n5.2  Abbreviations and Acronyms  \n5.2.1  CDM — Common Device Model  \n5.2.2  DM — Device Manager (object)  \n5.2.3  IP — Internet Protocol  \n5.2.4  NCS — Network Communication Standard  \n5.2.5  OSI — Open Systems Interconnect  \n5.2.6  OSS — Object Services Standard  \n5.2.7  SAC — Sensor, Actuator, Controller (Object)  \n5.2.8  SAN — Sensor/Actuator Network  \n5.2.9  SDM — Specific Device Model  \n5.2.10  TCP — Transmission Control Protocol\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 5.3  Device Component Definitions\n\n5.3.1  As this standard defines the presentation or mapping of CDM data structure and behavior over a network, it makes use of many of the terms in SEMI E54.1.  Table 1 provides a mapping of fundamental terminology of the CDM document into this document and the Modbus/TCP standard specifications.  \nNOTE 1: Column 2 contains an equal sign “=” if the definition is used exactly as specified in the CDM specification.  \nTable 1  Mapping of CDM to NCS Terminology\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 5.4  Modbus/TCP Specific Definitions (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 5.4  Modbus/TCP Specific Definitions\n\nContent: 5.4.1 class — a set of objects that represent the same kind of system component. A class is a generalization of an object. All objects in a class are identical in form and behavior, but may contain different attribute values as well as additional attributes and services. Refer to SEMI E39 for further definition. 5.4.2 master/slave — communication over a Modbus network, which is referred to as “client/server”, that provides exclusive control of data by a “master” or “host” device acting as a “client”. All network input data is reported exclusively to the host when requested by the host, and the host has exclusive control over the states of all network output signals of all nodes acting as it’s “slaves” or “servers”. Master/Slave communication provides the typical request/response oriented network communications. 5.4.3 modbus/TCP — an open protocol established at The University of Michigan’s Electronics Manufacturing Laboratory as a standard means of intercon nection for simple\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 5.4  Modbus/TCP Specific Definitions (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 5.4  Modbus/TCP Specific Definitions\n\nContent: field devices. The Modbus/TCP over TCP/IP standard specifies OSI reference model layers 1, 2, 3, 4 and 7 specifically the physical signaling, the media access/data link protocols, internetworking capability, the transport capability of end-to-end transmission of data, and the application layer. 5.4.4 peer-to-peer — on Modbus/TCP over TCP/IP networks, messages formatted according to the Modbus/TCP protocol are embedded into the TCP packet structure that is used on the TCP/IP network. The Modbus protocol over TCP/IP supports the asynchronous or unsolicited bi-directional transmission of data between nodes. This type of communication is referred to as peer-to-peer.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure\n\nContent: 6.1 The Modbus/TCP protocol over TCP/IP is loosely based on a five-layer architecture. These layers constitute a collapsed form of the OSI seven layer architecture, mapping into the physical, data link, network, transport, and application layers of the Reference Model. This section has been formatted to be aligned with the Basic Reference Model for OSI. The high-level protocol architecture is shown in Figure 1. Figure 1 Layered View of Modbus/TCP Over TCP/IP NOTE 2: Figure 1 represents a conceptual view of the communication device architecture. Conforming implementations must implement the services defined in this specification at each layer and must appear (from the network) to have implemented this architecture, however, an internal modular partitioning is not required. Implementations may sacrifice modularity in order to achieve high performance. 6.1.1 The application layer is specified in the Modicon Modbus Protocol Reference Guide and provides for the definition\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure\n\nContent: of Modbus applications as a collection of addressable objects. A subset of these objects may be addressed over the network (as defined by the implementation). 6.1.2 In the remainder of this section the protocol structure is described in more detail in terms of the OSI seven layer reference model, the object model environment and network management specifications. 6.2 Physical Layer — The device shall comply with a physical layer specification identified in the Modbus/TCP specification. The recommended and default Modbus/TCP physical layer is IEEE 802.3. If an accepted physical layer specification other than IEEE 802.3 is being used, this must be clearly specified in product literature. Physical layer specification includes physical signaling (levels and data rates), transceivers, node isolation, media topology, cable specifications, network connectors and taps, and power considerations (load limits, system tolerances, and power supply options). 6.3 Data Link Layer —\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure (Part 3)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure\n\nContent: The device shall comply with a data link layer specification of the Modbus/TCP specification. The recommended and default Modbus/ TCP data link layer is IEEE 802.3. If an accepted data link layer specification other than IEEE 802.3 is being used, this must be clearly specified in product literature. Data link layer specification includes the media access control mechanism and the logical link control mechanism. 6.4 Network Layer — The device shall comply with a network layer specification of the Modbus/TCP specification. This specification is the IP or Internet Protocol as defined in the Modbus/TCP standard specification. The network layer specification includes network routing and internetworking. 6.5 Transport (Messaging) Layer — The device shall comply with the Modbus/TCP standard specification for the Transport Layer. This specification is the Transmission Control Protocol as defined in the Modbus/TCP standard specification. The transport layer provides transparent\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure (Part 4)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6  Communication Protocol High Level Structure\n\nContent: transfer of data between objects in application-entities. Some of the functionality of this layer is implemented in the Application Layer. Specific functions include: object data segmentation/reassembly (fragmentation) for full message delivery.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6.6  Session Layer — There is no distinct session layer. (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6.6  Session Layer — There is no distinct session layer.\n\nContent: 6.7 Presentation Layer — There is no distinct presentation layer. Object addressing and data presentation in Modbus messages are specified as part of the Modbus object definitions and object attribute and service communication protocol. Data byte transmission ordering is defined in IP RFC 791, Appendix B. 6.8 Application Layer — The device shall comply with the Modbus/TCP application layer specification for defining and addressing objects, including their attributes and services, and enabling specified network behavior. The device shall comply with the object messaging and object model specifications included in the Modbus/TCP standard specifications. In addition, the device shall comply with the object specifications defined in Section 7 of this document. 6.8.1 Object Models — The Modbus/TCP protocol has been enhanced to provide an object-oriented specification for creating, defining, and addressing objects explicitly, including their attributes and\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6.6  Session Layer — There is no distinct session layer. (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 6.6  Session Layer — There is no distinct session layer.\n\nContent: services, and creating, defining, and communicating object attributes in an application dependent format. The device shall comply with the object messaging and object model specifications included in the Modbus/TCP standard specification documentation. In addition, the device shall comply with the object specifications defined in Section 7 of this document. 6.9 Network Management — The device shall comply with the Modbus/TCP and TCP/IP network management specifications detailed in the Modbus/TCP Standard Specifications (e.g., physical layer bit rate, master/ slave and peer-to-peer network management, etc.). No (additional) network management functions are specified in this document.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: 7.1 At this time, the Modbus/TCP standard specifications do not require any specific objects to exist in a Modbus/TCP device in order to be a compliant Modbus/TCP device. The Modbus/TCP standard specifications will be extended to identify and describe objects (i.e., classes) that must exist in devices that are to be interoperable and interchangeable on a Modbus/TCP SEMI compliant SAN network. 7.1.1 The Common Device Model (CDM) specification identifies two objects (namely the Device Manager (DM) and Sensor Actuator Controller (SAC) objects) that must exist in all SEMI compliant SAN devices. 7.1.2 The required object types for a SEMI compliant SAN device utilizing the network communication specification described herein, necessarily comprises, at minimum, the union of the Modbus/TCP object type requirements and the CDM specification requirements. 7.1.3 A list of required and optional object types is given in Table 2. Additional objects that are specified in a particular SDM are\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: given identifiers in that SDM specification. Modbus specific presentation information for these identifiers is given in Section 9 of this document. Table 2 Required and Optional Object Types NOTE 1: See Modbus specification for further information; values are decimal: “i”, “j”, “k”, “l”, $\" \\mathrm { m } ^ { \\prime \\prime }$ , “n”, “o”, “p”, “q” and “r” represent arbitrary numbers (greater than or equal to 1) indicating that more than one instance may be supported. $\\mathbf { \\dot { x } } ^ { \\prime \\prime }$ is a number greater than or equal to 129 indicating that one or more application object classes may be supported. NOTE 2: See CDM specification for further information. NOTE 3: Application Dependent objects as specified in SDM. 7.1.4 An embodiment of a specific device type represented as an aggregation of the object types listed in Table 2 that is compliant with both the CDM specification and the Modbus/TCP specification, is a candidate for a SEMI SDM as well as a\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 3)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: Modbus/TCP device definition. Conversely, all SEMI SDM’s and Modbus/TCP device definitions specified for operation over a SEMI compliant Modbus/TCP network must be an aggregation of the object types listed in Table 2, and be compliant with both the CDM specification and the Modbus/TCP standard specifications. 7.1.5 In the following sections the presentation to the network of object addressing, object attributes, and object services for each of the object types listed in Table 2 is described in detail. Refer to the CDM standard to determine if the object instance attribute and service is specified as required or optional. Unless otherwise noted, all attributes and services described are instance level attributes (as opposed to class level attributes). A class level attribute and service is accessed as instance number zero. NOTE 3: The formats of object attributes and services are detailed in the CDM document; the presentation of object attributes and services to the Modbus/TCP\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 4)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: over a TCP/IP network is detailed in the tables contained in the following sub-sections and in the Modbus/TCP standard specifications. 7.2 Device Manager (DM) Object The DM object instance is the device component responsible for managing and consolidating the device operation. Each device must support one (and only one) DM object. The DM object as well as its common required and optional attributes, services and behavior are described in the CDM standard. The presentation of object instance attributes and services to the Modbus/TCP network shall be as indicated in Table 3. Note that all service ID values identified refer to the ID of the request or notification component of that service. Corresponding reply components to request/reply services shall have a service ID value equal to the request component ID plus one. Table 3 DM Object Instance Attributes and Services 7.3 Sensor, Actuator, Controller (SAC) Object –– The SAC object instance is the device component responsible for\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 5)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: coordinating the interaction of the device with the sensory/actuation/control environment. Each device must support one (and only one) SAC object instance. The SAC object instance as well as its common required and optional attributes, services, and behavior are described in the CDM standard. The presentation of object instance attributes and services to the Modbus/TCP network shall be as indicated in Table 4. Table 4 SAC Object Instance Attributes and Services 7.4 Assembly Object (Asm) –– The Assembly (Asm) object instances may be used to provide for grouping more than one attribute from one or more object instances in a device into a single data structure for communication over the Modbus/TCP network. The presentation of object instance attributes and services shall be as indicated in Table 5. Table 5 Assembly Object Instance Attributes and Services 7.5 Local Link Object (Lnk) –– The Local Link (Lnk) object instances may be used to “link” an attribute of one object instance\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 6)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: to an attribute of another object instance. Refer to the CDM for further explanation and use of this object. The presentation of object instance attributes and services are as indicated in Table 6. Table 6 Local Link Object Instance Attributes and Services 7.6 Sensor-AI Object (Sai) –– The presentation of the Sensor Analog Input (Sensor-AI) object instance attributes and services are as indicated in Table 7. Table 7 Sensor-AI Object Instance Attributes and Services 7.7 Sensor-EI Object (Sei) –– The presentation of the Sensor Enumerated Input (Sensor-EI) object instance attributes and services are as indicated in Table 8. Table 8 Sensor-EI Object Instance Attributes and Services 7.8 Sensor-BI Object (Sbi) –– The presentation of the Sensor Binary Input (Sensor-BI) object instance attributes and services are as indicated in Table 9. Table 9 Sensor-BI Object Instance Attributes and Services 7.9 Actuator-AO Object (Aao) –– The presentation of the Actuator Analog Output (Actuator-AO)\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types (Part 7)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 7  Required and Optional Object Types\n\nContent: object instance attributes and services are as indicated in Table 10. Table 10 Actuator-AO Object Instance Attributes and Services 7.10 Actuator-EO Object (Aeo) –– The presentation of the Actuator Enumerated Output (Actuator-EO) object instance attributes and services are as indicated in Table 11. Table 11 Actuator-EO Object Instance Attributes and Services 7.11 Actuator-BO Object (Abo) –– The presentation of the Actuator Binary Output (Actuator-BO) object instance attributes and services are as indicated in Table 12. Table 12 Actuator-BO Object Instance Attributes and Services 7.12 Controller Object $( C A )$ –– The presentation of the Controller (CA) object instance attributes and services are as indicated in Table 13. Table 13 Controller-CA Instance Object Attributes and Services\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 8  Protocol Compliance\n\n8.1  A method of testing protocol compliance is required to verify implementation conformance to the standard. An independent compliance testing laboratory has been established at The University of Michigan’s Electronics Manufacturing Laboratory for the testing of Modbus/TCP over TCP/IP solutions. This laboratory utilizes an established, documented and freely available mechanism for compliance certification of devices on a Modbus/TCP over a TCP/IP network. This certification includes procedures and reporting mechanisms to demonstrate conformance and interoperability of Modbus/ TCP devices. Information on the conformance testing laboratory can be found on the World Wide Web.5 Additional information on certification procedures can also be found on the World Wide Web.6\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings\n\nContent: 9.1 This section provides for the mapping of network visible specific device structure and behavior, specified in a SEMI SDM specification, to the Modbus/TCP network. Each subsection is devoted to a single Specific Device Model (SDM) specification. Additional SDM mappings are added as sub-sections to this NCS specification according to SEMI guidelines and the guidelines SEMI E54. Unless otherwise noted, all attributes and services described are instance level attributes (as opposed to class level attributes). NOTE 4: The formats of object instance attributes and services are detailed in the associated SDM specification; the presentation of object attributes and services to the Modbus/TCP over a TCP/IP network is detailed in the tables contained in the following sub-sections and in the Modbus/TCP standard specifications. NOTE 5: Relationships between object classes, including inheritance is defined in the associated SDM specification and the CDM specification. 9.1.1 The instance\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings\n\nContent: identifier of 1 through r, assigned to an object type, refers to the possibility of multiple instantiations of the object type. Refer to Table 2 of this document and the CDM document for a further explanation of object instance identifier assignments. 9.2 Specific Device Model for Mass Flow Device — These sections detail the network mapping required to support the Specific Device Model for Mass Flow Devices. Table 14 summarizes the Mass Flow Device Object types. Subsequent Tables 15 to 24 detail the instance attributes and services associated with each Mass Flow Device object type. Table 14 Mass Flow Device Object Types 9.2.1 Sensor-AI-MF –– The presentation of the Sensor Analog Input Mass Flow (Sensor-AI-MF) object instance attributes and services are as indicated in Table 15. Table 15 Sensor-AI-MF Object Instance Attributes and Services 9.2.2 Sensor-AI-AT –– The presentation of the Sensor Analog Input Ambient Temperature (Sensor-AI-AT) object instance attributes and services are\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings (Part 3)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings\n\nContent: as indicated in Table 16. Table 16 Sensor-AI-AT Object Instance Attributes and Services 9.2.3 Assembly-MFM –– The presentation of the Assembly Mass Flow Meter (Assembly-MFM) object instance attributes and services are as indicated in Table 17. Table 17 Assembly-MFM Object Instance Attributes and Services 9.2.4 Sensor-AI-Aux –– The presentation of the Sensor Analog Input Auxiliary (Sensor-AI-Aux) object instance attributes and services are as indicated in Table 18. Table 18 Sensor-AI-Aux Object Instance Attributes and Services 9.2.5 Actuator-AO-MF –– The presentation of the Actuator Analog Output Mass Flow (Actuator-AO-MF) object instance attributes and services are as indicated in Table 19. Table 19 Actuator-AO-MF Object Instance Attributes and Services 9.2.6 Controller –– The presentation of the extended Controller $\\mathrm { ( C a ) }$ object instance attributes and services are as indicated in Table 20. Table 20 Controller Object Instance Attributes and Services 9.2.7 Local Link\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings (Part 4)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings\n\nContent: –– The presentation of the extended Local Link (Lnk) object instance attributes and services are as indicated in Table 21. Table 21 Local Link Object Instance Attributes and Services 9.2.8 SISO –– The presentation of the Single Input Single Output (SISO) object instance attributes and services are as indicated in Table 22. Table 22 SISO Object Instance Attributes and Services 9.2.9 SISO-Setpoint –– The presentation of the Single Input Single Output Setpoint (SISO-Setpoint) object instance attributes and services are as indicated in Table 23. Table 23 SISO-Setpoint Object Instance Attributes and Services 9.2.10 Assembly-MFC –– The presentation of the Assembly Mass Flow Controller (Assembly-MFC) object instance attributes and services are as indicated in Table 24. Table 24 Assembly-MFC Object Instance Attributes and Services 9.3 Specific Device Model For In-Situ Particle Monitor Device — These sections detail the network mapping required to support the Specific Device Model for\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings (Part 5)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings\n\nContent: InSitu Particle Monitor (ISPM) Devices. Table 25 summarizes the In-Situ Particle Monitor Device Object types. Subsequent Tables 26 to 40 details the attributes and services associated with each In-Situ Particle Monitor Device object type. Table 25 In-Situ Particle Monitor Device Object Types 9.3.1 Device Manager (DM) –– The presentation of the extended ISPM Device Manager (DM) object attributes and services are as indicated in Table 26. Table 26 DM Object Instance Attributes and Services 9.3.2 Sensor Actuator Controller (SAC) –– The presentation of the extended ISPM Sensor Actuator Controller (SAC) object attributes and services are as indicated in Table 27. Table 27 SAC Object Instance Attributes and Services 9.3.3 Sensor-AI-LCS –– The presentation of the Sensor Analog Input Laser Current Sensor (Sensor-AI-LCS) object attributes and services are as indicated in Table 28. Table 28 Sensor-AI-LCS Object Instance Attributes and Services 9.3.4 Sensor-AI-SLS –– The presentation of the\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings (Part 6)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # 9  Specific Device Model Mappings\n\nContent: Sensor Analog Input Stray Light Sensor (Sensor-AI-SLS) object attributes and services are as indicated in Table 29.\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services (Part 1)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services\n\nContent: 9.3.5 Sensor-AI-MNS –– The presentation of the Sensor Analog Input Medium Noise Sensor (Sensor-AIMNS) object attributes and services are as indicated in Table 30. Table 30 Sensor-AI-MNS Object Instance Attributes and Services 9.3.6 Sensor-AI-Counter –– The presentation of the Sensor Analog Input Counter (Sensor-AI-Counter) object attributes and services are as indicated in Table 31. Table 31 Sensor-AI-Counter Object Instance Attributes and Services 9.3.7 Assembly-ISPM#1 –– The presentation of the Assembly #1 In-Situ Particle Monitor (AssemblyISPM#1) object attributes and services are as indicated in Table 32. Table 32 Assembly-ISPM#1 Object Instance Attributes and Services Table 35 Assembly-ISPM#4 Object Instance Attributes and Services 9.3.8 Assembly-ISPM#2 –– The presentation of the Assembly #2 In-Situ Particle Monitor (AssemblyISPM#2) object attributes and services are as indicated in Table 33. 9.3.11 Assembly-ISPM#5 –– The presentation of the\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services (Part 2)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services\n\nContent: Assembly #5 In-Situ Particle Monitor (AssemblyISPM#5) object attributes and services are as indicated in Table 36. Table 33 Assembly-ISPM#2 Object Instance Attributes and Services Table 36 Assembly-ISPM#5 Object Instance Attributes and Services 9.3.9 Assembly-ISPM#3 –– The presentation of the Assembly #3 In-Situ Particle Monitor (AssemblyISPM#3) object attributes and services are as indicated in Table 34. 9.3.12 Assembly-ISPM#6 –– The presentation of the Assembly #6 In-Situ Particle Monitor (AssemblyISPM#6) object attributes and services are as indicated in Table 37. Table 34 Assembly-ISPM#3 Object Instance Attributes and Services Table 37 Assembly-ISPM#6 Object Instance Attributes and Services 9.3.10 Assembly-ISPM#4 –– The presentation of the Assembly #4 In-Situ Particle Monitor (AssemblyISPM#4) object attributes and services are as indicated in Table 35. 9.3.13 Assembly-ISPM#7 –– The presentation of the Assembly #7 In-Situ Particle Monitor\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services (Part 3)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services\n\nContent: (AssemblyISPM#4) object attributes and services are as indicated in Table 38. Table 38 Assembly-ISPM#7 Object Instance Attributes and Services 9.3.14 Assembly-ISPM#8 –– The presentation of the Assembly #8 In-Situ Particle Monitor (AssemblyISPM#8) object attributes and services are as indicated in Table 39. Table 39 Assembly-ISPM#8 Object Instance Attributes and Services 9.3.15 Assembly-ISPM#9 –– The presentation of the Assembly #9 In-Situ Particle Monitor (AssemblyISPM#9) object attributes and services are as indicated in Table 40. Table 40 Assembly-ISPM#9 Object Instance Attributes and Services 9.4 Specific Device Model for Endpoint Device These sections detail the network mapping required to support the Specific Device Model for Endpoint Devices. Table 41 summarizes the Endpoint Device object types. Subsequent Tables 42 to 48 detail the attributes and services associated with each Endpoint Device object type. Table 41 Endpoint Device Object Types\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services (Part 4)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services\n\nContent: 9.4.1 Device Manager The presentation of the Device Manager object attributes and services that are specified in the CDM is specified in Section 7. The presentation of the extended Device Manager object attributes and services that are specified in the SDM for Endpoint Devices is specified in Table 42. Table 42 DM Object Instance Attributes and Services 9.4.2 Sensor Actuator Controller The presentation of the Sensor Actuator Controller object attributes and services that are specified in the CDM is specified in Section 7. The presentation of the extended Sensor Actuator Controller object attributes and services that are specified in the SDM for Endpoint Devices is specified in Table 43. Table 43 SAC Object Instance Attributes and Services 9.4.3 Sensor-BI-TH-EP The presentation of the Sensor, Binary Input, Threshold type, Endpoint object attributes and services is specified in Table 44. Table 44 Sensor-BI-TH-EP Object Instance Attributes and Services\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services (Part 5)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services\n\nContent: 9.4.4 Assembly-EPD#1 The presentation of the Assembly #1 Endpoint Device object attributes and services is specified in Table 45. Table 45 Assembly-EPD#1 Object Instance Attributes and Services 9.4.5 Assembly-EPD#2 The presentation of the Assembly #2 Endpoint Device object attributes and services is specified in Table 46. Table 46 Assembly-EPD#2 Object Instance Attributes and Services 9.4.6 Assembly-EPD#3 The presentation of the Assembly #3 Endpoint Device object attributes and services is specified in Table 47. Table 47 Assembly-EPD#3 Object Instance Attributes and Services 9.4.7 Assembly-EPD#4 The presentation of the Assembly #4 Endpoint Device object attributes and services is specified in Table 48. Table 48 Assembly-EPD#4 Object Instance Attributes and Services NOTICE: SEMI makes no warranties or representations as to the suitability of the standard set forth herein for any particular application. The determination of the suitability of the\n\nSEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services (Part 6)\n\nTitle: SEMI E54.9-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATION FOR MODBUS/TCP OVER TCP/IP - # Table 29  Sensor-AI-SLS Object Instance Attributes and Services\n\nContent: standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE\n\nThis specification was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee. Current edition approved by the North American Regional Standards Committee on March 2, 2000.  Initially available at www.semi.org May 2000; to be published June 2000.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 1  Purpose\n\n1.1  This specification is part of a s uite of standards that specify the implementation of SEMI standards for the Sensor/Actuator Network. The specific purpose of this specification is to describe a network independent application model comprised of device objects that are common to all In-Situ Particle Monitor Devices on a semiconductor equipment Sensor/Actuator communications network.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 2  Scope (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 2  Scope\n\nContent: 2.1 An In-Situ Particle Monitor (IS PM) is a device that measures and counts particles. These devices classify by size and count, particles in the environment (gaseous, liquid, or vacuum) utilizing a technique such as detecting light from a sample region of the environment’s space. These counts are accumulated in bins and then reported. The number of bins varies by vendor and model. 2.2 This specification specifically addresses the minimum attributes, services, and behavior an In-Situ Particle Monitor (ISPM) device must support to be interoperable on the Sensor/Actuator Network. 2.3 This specification is intended t o ensure a highdegree of device interoperability on the Sensor/Actuator Network, while still allowing flexibility for product differentiation and technology evolution. 2.4 The model specified in this spe cification is used in conjunction with SEMI E54.1 (Standard for Sensor/ Actuator Network Common Device Model (CDM)) to completely describe the ISPM as it appears from the\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 2  Scope (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 2  Scope\n\nContent: network interface. 2.5 This specification, together wi th SEMI E54, SEMI E54.1, and one of the Sensor/Actuator Network Communication Specifications, form a complete interoperability specification for the ISPM. 2.6 To comply with this specificat ion, a device must implement and support, at a minimum, the required attributes, services, and behavior identified in these documents. Support for optional attributes, services, and behavior is not required to be compliant to this specification. Optional attributes, services, and behavior are specified in these documents to promote further device interoperability as features evolve and are adopted by more manufacturers. If optional attributes, services, and behavior are implemented for this device they must be implemented as identified in this document. 2.7 This specification does not pur port to address safety issues, if any, associated with its use. It is the responsibility of the users of this specification to establish appropriate safety and\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 2  Scope (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 2  Scope\n\nContent: health practices and determine the applicability of regulatory limitations prior to use.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 3  Limitations (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 3  Limitations\n\nContent: 3.1 This specification is a compan ion to a suite of specifications that together make up the Sensor/Actuator Network Communication standard. Therefore, using portions of this specification that relate to network communications necessarily requires an understanding of the associated network specification. 3.2 As this document is a specifica tion for the In-Situ Particle Monitor Device Model, it does not contain any definition of objects, attributes, services, or behavioral descriptions that are already defined in SEMI E54.1. Additional attributes, attribute assignments, services, and/or service parameters that are ISPM Device specific and/or implementation specific are contained in this specification. 3.3 While this specification is suff icient to completely describe the ISPM as it appears from the network, it does not fully describe behavior of the ISPM which is not visible from the network. This allows flexibility in implementation techniques and product differentiation between\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 3  Limitations (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 3  Limitations\n\nContent: manufacturers. Manufacturer specific objects may be defined by the manufacturer but are, by definition, outside the scope of this standard. 3.4 This specification is compatibl e, but not compliant with SEMI E39. This means that although this specification does not require compliance with SEMI E39, it is extensible such that implementations may be developed that are fully compliant with both standards. Note that the concepts and terminology of this specification are compatible with those of SEMI E39. However, SEMI E39 has specific requirements that are intended for higher level applications and thus are not applied to the In-Situ Particle Monitor Device Model. 3.5 Operation over the entire rang e specified for an attribute within a specific object is not a requisite for compliance with this specification.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 4.1  SEMI Standards\n\nSEMI E39 — Object Services Standard: Concepts, Behavior, and Services  \nSEMI E54 — Sensor/Actuator Network Standard  \nSEMI E54.1 — Standard for Sensor/Actuator Network Common Device Model  \nNOTE 1: As listed or revised, all documents cited shall be the latest publications of adopted standards.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 5.1  Abbreviations and Acronyms\n\n5.1.1  LCS — an ISPM sensor named the Laser Current Sensor.  \n5.1.2  MNS — an ISPM sensor named the Median Noise Sensor.  \n5.1.3  SLS — an ISPM sensor named the Stray Light Sensor.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 5.2  Terminology Defined in This Document (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 5.2  Terminology Defined in This Document\n\nContent: 5.2.1 In-Situ Particle Monitor (ISPM ) — a self-contained device, consisting of a laser that generates light, a light detector, counters, diagnostics and control and signal-processing electronics, commonly used in the semiconductor industry to measure and count particles in a specific area. 5.3 This document inherits the term inology defined by SEMI E54.1 [3]. 5.3.1 Attribute 5.3.2 Behavior 5.3.3 Boolean 5.3.4 Byte 5.3.5 Character 5.3.6 Common Device Model (CDM ) 5.3.7 Data Type 5.3.8 Data Units 5.3.9 Device 5.3.10 Device Manager (DM) Object 5.3.11 Device Model 5.3.12 Double Integer (DINT) 5.3.13 Enumerated Byte 5.3.14 Full Scale Range 5.3.15 Instance 5.3.16 Last Valid Value (LVV) 5.3.17 Long Integer (LINT) 5.3.18 Long Real (LREAL) 5.3.19 Manufacturer 5.3.20 Nibble 5.3.21 Null Character 5.3.22 Object 5.3.23 Real (REAL) 5.3.24 S, A, and C Objects 5.3.25 Sensor Actuator Controller (SA C) Object 5.3.26 Service 5.3.27 Short Integer (SINT) 5.3.28 Signed\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 5.2  Terminology Defined in This Document (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 5.2  Terminology Defined in This Document\n\nContent: Integer (INT) 5.3.29 State Diagram 5.3.30 Test String 5.3.31 Unsigned Double Integer (UDINT) 5.3.32 Unsigned Double Long Integer (UDLINT) 5.3.33 Unsigned Integer (UINT) 5.3.34 Unsigned Long Integer (ULINT) 5.3.35 Unsigned Short Integer (USINT)\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 6  Requirements and Specifi cations\n\n6.1  In order to implement this stan dard in an In-Situ Particle Monitor Device, it is necessary to also implement SEMI E54.1 and one of the Sensor/Actuator Network Communication Standards [2]. See Section 1.1 for more information on a complete interoperability standard.  \n6.2  This specification also require s the implementation of a Date_And_Time data structure used to represent the current device Date and Time. Table 1 defines the format of the Date_And_Time data type.  \nTable 1  Date_And_Time Format\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 7  Conventions\n\n7.1  This document embraces the c onventions and notations stated in Section 6 of SEMI E54.1 [3].\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1  General Description (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1  General Description\n\nContent: 8.1.1 The high-level object view of an In-Situ Particle Monitor (ISPM) Device is shown in Figure 1. 8.1.2 Note that the “ISPM” device o bject is depicted in Figure 1 only for the purposes of illustrating a high level view of the device and its component objects. In the context of this document, this object is not addressable, does not have addressable attributes, does not have accessible services, and does not exhibit any defined behavior. 8.1.3 In the remainder of this section , this document defines in detail all of the component objects unique to the ISPM device. References, rather than definitions, are included for the DM, the SAC, and other objects defined in SEMI E54.1 [3]. 8.1.4 Many of the objects defined in this document inherit properties from other objects. The properties inherited include attribute, services, and behavior definitions. These other objects are specified here or in SEMI E54.1 [3]. 8.1.5 This document provides for fu ture extensions as well as\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1  General Description (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1  General Description\n\nContent: manufacturer specific enhancements by reserving object attribute identifiers and object service identifiers. Specifically, all object definitions in this document specify or reserve the first 64 attribute identifiers (A1 through A64) and the first 64 service identifiers (S1 through S64) allowing manufacturers to specify identifiers beyond these ranges. Additionally, byte enumerated attributes are specified or reserved from 0 to 63 allowing manufacturers to specify an enumeration beyond this range (64 to 255).\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.6 In-Situ Particle Monitor (ISPM ) Device Description\n\n8.1.6.1  An In-Situ particle Monitor de vice profile is composed of the component objects and object relationships shown in Figure 1.  \nNOTE 1: The DM and SAC are taken from the CDM. Additional attributes and services are added to support the ISPM device.\nFigure 1 In-Situ Particle Monitor Device High Level Structure  \nNOTE 2: Assembly-ISPM #1 and Assembly-ISPM #6 objects are required. Other Assembly-ISPM objects are optional.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements\n\nContent: 8.1.7.1 Device Objects — All objects are defined in terms of their object name and Class/Object identifier. Identifiers for all objects described in this document are summarized in Table 2. Table 2 In-Situ Particle Monitor Device Objects 8.1.7.2 Object Services — Not all object services listed in this document can necessarily be requested over the network. They are included in this document because their behavior may generate network activity. 8.1.7.3 Object Behavior — For all ser vice requests received over the network that are not supported by the object, or contain a parameter value which is beyond the supported range, or which is otherwise invalid, a network specific service error response is generated. 8.2 Device Manager Object (DM) — The Device Manager object is the device component responsible for managing and consolidating the device operation as specified in SEMI E54.1 [3]. The following sections specify the components of the DM object that are not specified\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements\n\nContent: in SEMI E54.1 or require further definition than specified in SEMI E54.1. 8.2.1 Device Manager Object Attrib utes — Required and optional DM object attributes are listed in Table 3. Table 3 DM Object Attributes NOTE 1: “\\*” Indicates that the specific attribute is nonvolatile. Nonvolatile requires that the current attribute value be maintained through a component power cycle. 8.2.1.1 Device $T y p e \\mathrm { ~ - ~ } \\mathrm { A n }$ attribute th at uniquely identifies the type of the device on the network. The device type attribute is assigned as follows: In-Situ Particle Monitor Device $\\mathbf { \\tau } = \\mathbf { \\tau }$ “ISPM” 8.2.1.2 Exception Detail Alarm (Optio nal) — An attribute which identifies the detailed alarm status of the device. Table 4 defines the bit assignments associated with the alarm exception detail. Table 4 Exception Detail Alarm Bit Assignments 8.2.1.3 Exception Detail Warning (Op tional) — An attribute which identifies the detailed warning\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements\n\nContent: status of the device. Table 5 defines the bit assignments associated with the warning exception detail. Table 5 Exception Detail Warning Bit Assignments 8.2.1.4 Manufacturer Exception Detail Size (Optional) — An attribute that specifies the number of exception detail bytes included in the alarm or warning details. 8.2.1.5 Gain (Optional) — An attribu te that specifies the Gain value of the amplifier for the photodiode signal. The factory configured out-of-box value is determined by the manufacturer based on the sensor type. 8.2.1.6 Filter Bandwidth (Optional) — An attribute that determines the bandwidth in kilohertz of the amplifier for the photodiode signal. The factory configured out-of-box value is determined by the manufacturer based on the sensor type. 8.2.1.7 Tool State (Optional) — An at tribute that identifies the current state of the tool that is utilizing the counter. In many cases, the ISPM device can detect and report the Tool State; this variable is\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements (Part 4)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements\n\nContent: utilized for this type of reporting. This attribute is enumerated and is specified by the manufacturer. 8.2.1.8 Laser Status — An attribute th at records the current status of the laser. This attribute is enumerated. The possible enumeration and the requirement for support are as follows: $0 = { \\tt L A S E R }$ OFF (required) $1 = { \\mathrm { L A S E R } }$ TURNING ON (optional) $2 =$ LASER ON BUT NOT STABLE (optional) $3 =$ LASER ON AND STABLE (required) $4 = { \\mathrm { L A S E R } }$ INTERLOCKED (optional) $5 =$ SENSOR MISSING (required) $6 { \\ - } 6 3 = 1$ Reserved $6 4 - 2 5 5 =$ Manufacturer Specified (optional) 8.2.1.9 Flow Path (Optional) — An a ttribute that identifies the current flow path (from multiple sources) being utilized. The source may be modified by a Host at anytime. Changing the “Flow path” attribute connects the ISPM device to a different source. When changing sources, data is not valid for a time interval whose length is a function of the\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements (Part 5)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements\n\nContent: distance to the source. 8.2.1.10 Volume (Optional) — An attribute that maintains the sample volume. This attribute is used primarily by liquid particle counters utilizing a sampling technique in a small container to extrapolate the particle count in the volume of interest. The value of this attribute is the size of the small container. 8.2.1.11 Volume Units (Optional) — A n attribute that specifies the unit for the “Volume” attribute. This attribute is enumerated and can take on one of the following values: milliliters or gallons. (See Appendix 1 of SEMI E54.1 for assigned values.) 8.2.1.12 Leak Status (Optional) — An attribute that indicates which one of the potential leak locations is actually leaking. This attribute is enumerated and is specified by the manufacturer. The enumerated value corresponds to a specific leak location. 8.2.1.13 Time Stamp (Optional) — An attribute that records the time when the last counting event completed. 8.2.1.14 Duration (Optional) —\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements (Part 6)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.1.7  General Requirements\n\nContent: An att ribute that defines the interval of time during which the particle counts are collected and put into the bin assemblies.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values\n\nContent: Table 6 DM Object Attribute Initial and Default Values 8.2.2 Device Manager Object Services — The services provided by the Device Manager object are defined in SEMI E54.1 [1]. The Device Manager object supports the additional services listed below. Table 7 Device Manager Object Services 8.2.2.1 Laser On (Optional) — This s ervice is used to prompt the device to take the laser from the LASER OFF state through supported laser states 1 and/or 2, to state 3, as defined by the Laser Status attribute. If the laser turns on successfully, a “success” response code is returned. If the sensor is missing or interlocked off, a “object state conflict” error response is returned and the laser remains in the appropriate state. 8.2.2.2 Laser Off (Optional) — This s ervice is used to prompt the device to take the laser to the LASER OFF state immediately. If the laser turns off successfully, a “success” response is returned. If the sensor is in an interlocked state, a “object\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values\n\nContent: state conflict” error response is returned and the laser remains in the interlocked off state. 8.2.3 Device Manager Object Behavior — The behavior exhibited by the Device Manager object is defined in SEMI E54.1 [1]. Additional behavior is detailed below. 8.2.3.1 Device Manager EXECUTING State Behavior — Required sub-states within the EXECUTING state, descriptions of these substates, and a transition matrix associated with these sub-states are given in Figure 2, Table 8, and Table 9 respectively. Table 8 Device Manager Behavior EXECUTING Sub-State Description NOTE 1: The “counting” process is defined in Section 8.8.3.1. Table 9 Device Manager Behavior EXECUTING Sub-State Transition Matrix (See NOTE 1.) NOTE 1: Note that this matrix augments the Device Manager Behavior State Transition Matrix as defined in SEMI E54.1 [3]. All transitions are in addition to those specified in SEMI E54.1. NOTE 2: The “counting” process is defined in Section 8.8.3.1. 8.3 Sensor\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values\n\nContent: Actuator Controller Ob ject (SAC) — The Sensor Actuator Controller object is the device component responsible for coordinating the interaction of the ISPM device with the sensory/actuation/control environment as specified in SEMI E54.1 [3]. The following sections specify the components of the SAC object that are not specified in the Common Device model or require further definition than specified in the CDM. 8.3.1 Sensor Actuator Controller Ob ject Attributes — The attributes provided by the Sensor Actuator Controller object are defined in SEMI E54.1 [3]. Table 10 contains the additional attributes required for the Sensor Actuator Controller object. Table 10 SAC Object Attributes NOTE 1: “\\*” Indicates that the specific attribute is nonvolatile. Nonvolatile requires that the current attribute value be maintained through a component power cycle. 8.3.1.1 Number of Bins — An attribut e that specifies the number of counters in the device. This value represents\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values (Part 4)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values\n\nContent: the number of Sensor-AI-Counter objects in the device. 8.3.1.2 Count Mode — An attribute th at specifies whether all count object values are cleared (to zero) when read. This attribute is an enumerated USINT that can take on one of the following values: $0 =$ The particle counter count is not affected by reading the count. $1 =$ The particle counter count is cleared to zero when the count (“value” attribute of the Counter object) is read or reported through a service request to or from an Assembly-ISPM object that contains that count. $2 =$ The particle counter count is cleared to zero when the count (“value” attribute of the Counter object) is read or reported (regardless of the connection) through a service request to or from either an Assembly-ISPM object that contains that count (“value” attribute), or the Counter object that contains the count. $3 \\substack { - 6 3 } =$ Reserved $6 4 - 2 5 5 =$ Manufacturer Specified 8.3.1.3 Duration (Optional) — An att\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values (Part 5)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.2.1.15  Initial and Default Values\n\nContent: ribute that defines the interval of time during which the particle counts (value of Value object attribute) are collected and put into the bin assemblies.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.1.4  Initial and Default Values\n\nTable 11  SAC Object Attributes Initial and Default Values  \n8.3.2  Sensor Actuator Controller Ob ject Services — The services provided by the Sensor Actuator Controller object are defined in SEMI E54.1 [1]. Table 12 contains the additional services required for the Sensor Actuator Controller object.  \nTable 12 SAC Object Services  \n8.3.2.1  Clear Counts (Optional) — Th is service is used to instruct all of the Sensor-AI-Counter object to perform a one-time clear of their respective Sensor-AI-Counter “Value” attributes by setting the value to zero. There are no parameters required for this service.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: 8.3.3.1 The behavior exhibited by the Sensor Actuator Controller object is defined in SEMI E54.1 [3]. Additional behavior is detailed below. 8.3.3.2 The “Value” attribute is cleared (to zero) in each ISPM counter sensor object, after being read, if the “Count Mode” attribute has a value of 1. It may also be cleared by a “Clear Counts” service of the SAC object or the “Reset” service issued to the S-Analog Sensor class. 8.4 Sensor-AI Object — The Senso r-AI object is the device component responsible for coordinating the behavior common to all analog input sensor elements in the ISPM device as specified in SEMI E54.1 [3]. 8.4.1 Sensor-AI Object Attributes — The attributes provided by the Sensor-AI object are defined in SEMI E54.1 [1]. There are no additional attributes required for the Sensor-AI object. 8.4.2 Sensor-AI Object Services — T he services provided by the Sensor-AI object are defined in SEMI E54.1 [3]. There are no additional services\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: required for the Sensor-AI object. 8.4.3 Sensor-AI Object Behavior — The behavior exhibited by the Sensor-AI object is defined in SEMI E54.1 [3]. There is no additional behavior required for the Sensor-AI object. 8.5 Sensor-AI-LCS Object — The Sensor-AI-LCS (Laser Current Sensor) object inherits the attributes, services, and behavior of the Sensor-AI as defined in SEMI E54.1 [3]. The Sensor-AI-LCS is the device component responsible for retrieving a reading from a physical laser current sensor, optionally correcting the reading with a manufacturer specified algorithm, or algorithms, then making the value available through the “Value” attribute. 8.5.1 Sensor-AI-LCS Object Attribu tes — The attributes provided by the Sensor-AI object are defined in SEMI E54.1 [3]. The Sensor-AI object attribute content and its attribute extensions to support the Sensor-AI-LCS object are listed in Table 13. Table 13 Sensor-AI and Sensor-AI-LCS Object Attributes\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: 8.5.1.1 Value — The attribute that ma intains the laser current sensor value. This value is always read as milliAmps. .5.1.2 Gain — The attribute that spec ifies the gain of the laser current measuring circuit. 8.5.1.3 Data Type — The attribute wh ich defines the format of the data associated with the “value” attribute. 8.5.1.4 Data Units — The attribute wh ich specifies the units for the “Value” attribute. This attribute is an enumerated UINT that can take only one value: MilliAmps (as assigned in Appendix 1 of SEMI E54.1). 8.5.1.5 Reading Valid — An attribute which specifies whether the “Value” attribute contains a valid value. This attribute is an enumerated byte that can take on one of the following values: $0 =$ Invalid, or $1 = \\mathrm { V a l i d }$ . 8.5.1.6 Full Scale — An attribute whi ch specifies the maximum value allowed for the “Value” attribute. 8.5.1.7 Alarm Settling Time — An attr ibute which specifies the maximum time in\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 4)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: milliseconds that the “Value” attribute may take to stabilize before an alarm is generated. 8.5.1.8 Warning Settling Time — An a ttribute which specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before a warning is generated.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values\n\nContent: Table 14 Sensor-AI and Sensor-AI-LCS Object Attributes Initial and Default Values 8.5.2 Sensor-AI-LCS Object Services — The services provided by the Sensor-AI-LCS are inherited from the Sensor-AI object defined in SEMI E54.1 [3]. There are no additional services required for the Sensor AI-LCS object. 8.5.3 Sensor-AI-LCS Object Behavio r — The behavior exhibited by the Sensor-AI-LCS object is inherited from the Sensor-AI object defined in SEMI E54.1 [3]. Additional specific behavior associated with the Sensor-AI-LCS object is defined below. 8.5.3.1 Sensor-AI-LCS OPERATING A pplication Process — A reading is retrieved from a physical laser current sensor. This reading may be corrected with a manufacturer-specified algorithm. This corrected reading becomes the input to the gain formula to generate the value attribute as referenced in SEMI E54.1 [3]. This process is executed only when the Device Manager Object is in the EXECUTING state as defined in the Common\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values\n\nContent: Device Model. When not in the EXECUTING state, the value of the “Reading Valid” attribute shall be set to “Invalid”. When in one of the sub-states of the EXECUTING state, the validity of the “Value” attribute shall be manufacturer specific. 8.6 Sensor-AI-SLS Object — The Sensor-AI-SLS (Stray Light Sensor) object inherits the attributes, services, and behavior of the Sensor-AI as defined in SEMI E54.1 [3]. The Sensor-AI-SLS is the device component responsible for retrieving a reading from a physical stray light sensor, optionally correcting the reading with a manufacturer specified algorithm, or algorithms, then making the value available through the “Value” attribute. 8.6.1 Sensor-AI-SLS Object Attributes — The attributes provided by the Sensor-AI object are defined in SEMI E54.1 [3]. The Sensor-AI object attribute content and its attribute extensions to support the Sensor-AI-SLS object is listed in Table 15. Table 15 Sensor-AI and Sensor-AI-SLS Object\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values\n\nContent: Attributes 8.6.1.1 Value — The attribute that ma intains the stray light sensor value. This value is always read as milliVolts. 8.6.1.2 Gain — The attribute that specifies the gain between the photodiode (or some other light detection source) and the stray light reading. 8.6.1.3 Data Type — The attribute wh ich defines the format of the data associated with the “value” attribute. 8.6.1.4 Data Units — The attribute wh ich specifies the units for the “Value” attribute. This attribute is an enumerated UINT and can take only one value: MilliVolts (as assigned in Appendix 1 of SEMI E54.1). 8.6.1.5 Reading Valid — An attribute which specifies whether the “Value” attribute contains a valid value. This attribute is an enumerated byte that can take on one of the following values: $0 =$ Invalid, or $1 =$ Valid. 8.6.1.6 Full Scale — An attribute whi ch specifies the maximum value allowed for the “Value” attribute. 8.6.1.7 Alarm Settling Time — An attr ibute which\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values (Part 4)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.5.1.9  Initial and Default Values\n\nContent: specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before an alarm is generated. 8.6.1.8 Warning Settling Time — An a ttribute which specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before a warning is generated.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: Table 16 Sensor-AI and Sensor-AI-SLS Object Attributes Initial and Default Values 8.6.2 Sensor-AI-SLS Object Services — The services provided by the Sensor-AI-SLS object are inherited from the Sensor-AI object defined in SEMI E54.1 [3]. There are no additional services required for the Sensor AI-SLS object. 8.6.3 Sensor-AI-SLS Object Behavio r — The behavior exhibited by the Sensor-AI-SLS object is inherited from the Sensor-AI object defined in SEMI E54.1 [3]. Additional specific behavior associated with the Sensor-AI-SLS object is defined below. 8.6.3.1 Sensor-AI-SLS OPERATING A pplication Process — A reading is retrieved from a physical stray light sensor. This reading may be corrected with a manufacturer-specified algorithm. This corrected reading becomes the input to the gain formula to generate the value attribute as referenced in SEMI E54.1 [3]. This process is executed only when the Device Manager Object is in the EXECUTING state as defined in the\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: Common Device Model. When not in the EXECUTING state, the value of the “Reading Valid” attribute shall be set to “Invalid”. When in one of the sub-states of the EXECUTING state, the validity of the “Value” attribute shall be manufacturer specific. 8.7 Sensor-AI-MNS Object — The Sensor-AI-MNS (Median Noise Sensor) object inherits the attributes, services, and behavior of the Sensor-AI as defined in SEMI E54.1 [3]. The Sensor-AI-MNS is the device component responsible for retrieving a reading from a physical median noise sensor, optionally correcting the reading with a manufacturer specified algorithm, or algorithms, then making the value available through the “Value” attribute. 8.7.1 Sensor-AI-MNS Object Attribu tes — The attributes provided by the Sensor-AI object are defined in SEMI E54.1 [3]. The Sensor-AI object attribute content and its attribute extensions to support the Sensor-AI-MNS object is listed in Table 17. Table 17 Sensor-AI and Sensor-AI-MNS\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: Object Attributes 8.7.1.1 Value — The attribute that ma intains the median noise sensor value. This is the noise level at the output of the sensor amplifier. The value is calculated by taking the median value of the last manufacturer specific number of rolling samples of the sensor amplifier output. This value is always read as milliVolts. 8.7.1.2 Gain — The attribute that spec ifies the gain of the median noise measuring circuit. 8.7.1.3 Data Type — The attribute wh ich defines the format of the data associated with the “value” attribute. 8.7.1.4 Data Units — The attribute wh ich specifies the units for the “Value” attribute. This attribute is an enumerated UINT and can take only one value: MilliVolts (as assigned in Appendix 1 of SEMI E54.1). 8.7.1.5 Reading Valid — An attribute which specifies whether the “Value” attribute contains a valid value. This attribute is an enumerated byte that can take on one of the following values: $0 =$ Invalid, or $1 =$\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 4)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: Valid. 8.7.1.6 Full Scale — An attribute whi ch specifies the maximum value allowed for the “Value” attribute. 8.7.1.7 Alarm Settling Time — An attr ibute which specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before an alarm is generated. 8.7.1.8 Warning Settling Time — An a ttribute which specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before a warning is generated. 8.7.1.9 Initial and Default Values Table 18 Sensor-AI and Sensor-AI-MNS Object Attributes Initial and Default Values 8.7.2 Sensor-AI-MNS Object Services — The services provided by the Sensor-AI-MNS object are inherited from the Sensor-AI object defined in SEMI E54.1 [3]. There are no additional services required for the Sensor AI-MNS object. 8.7.3 Sensor-AI-MNS Object Behavior — The behavior exhibited by the Sensor-AI-MNS object is inherited from the Sensor-AI object defined in SEMI E54.1 [3]. Additional\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 5)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: specific behavior associated with the Sensor-AI-MNS object is defined below. 8.7.3.1 Sensor-AI-MNS OPERATING Application Process — A reading is retrieved from the physical median noise sensor. This reading is maintained in a rolling count of manufacturer specified samples and then the median value of the manufacturer specified samples is calculated. This median reading becomes the input to the gain formula to generate the value attribute as referenced in SEMI E54.1 [3]. This process is executed only when the Device Manager Object is in the EXECUTING state as defined in SEMI E54.1. When not in the EXECUTING state, the value of the “Reading Valid” attribute shall be set to “Invalid”. When in one of the sub-states of the EXECUTING state, the validity of the “Value” attribute shall be manufacturer specific. 8.8 Sensor-AI-Counter Object — T he Sensor-AI-Counter object inherits the attributes, services, and behavior of the Sensor-AI as defined in SEMI E54.1 [3].\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 6)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: The Sensor-AI-Counter is the device component responsible for maintaining a count of the number of particles deposited in each bin and then making the value available through the “Value” attribute. 8.8.1 Sensor-AI-Counter Object Attr ibutes — The attributes provided by the Sensor-AI object are defined in SEMI E54.1 [3]. The Sensor-AI object attribute content and its attribute extensions to support the Sensor-AI-Counter object is listed in Table 19. Table 19 Sensor-AI and Sensor-AI-Counter Object Attributes NOTE 1: Consult the manufacturer’s specification for specific “Write” capabilities of this attribute. 8.8.1.1 Value — The attribute that ma intains the particle count in the bin. 8.8.1.2 Data Type — The attribute tha t defines the format of the data associated with the “Value” attribute. 8.8.1.3 Data Units — The attribute wh ich specifies the units for the “Value” attribute. This attribute is an enumerated UINT that can take on one of the following values:\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 7)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: raw counts, count per second, counts per milliliter, and counts per gallon. (See Appendix 1 of SEMI E54.1.) 8.8.1.4 Reading Valid — An attribute which specifies whether the “Value” attribute contains a valid value. This attribute is an enumerated byte that can take on one of the following values: $0 =$ Invalid, or $1 =$ Valid. 8.8.1.5 Full Scale — An attribute whi ch specifies the maximum value allowed for the “Value” attribute. 8.8.1.6 Alarm Settling Time — An attr ibute which specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before an alarm is generated. 8.8.1.7 Warning Settling Time — An a ttribute which specifies the maximum time in milliseconds that the “Value” attribute may take to stabilize before a warning is generated. 8.8.1.8 Upper Size — An attribute wh ich specifies the upper bound of the particle size, in microns, included in the bin counts. 8.8.1.9 Lower Size — An attribute wh ich specifies the lower\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values (Part 8)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.6.1.9  Initial and Default Values\n\nContent: bound of particle size, in microns, included in the bin counts.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.1.10  Initial and Default Values\n\nTable 20  Sensor-AI and Sensor-AI-Counter Object Attributes Initial and Default Values  \n8.8.2  Sensor-AI-Counter Object Services — The services provided by the Sensor-AI-Counter object are defined in SEMI E54.1 [1]. There are no additional services required for the Sensor AI-Counter object.  \n8.8.3  Sensor-AI-Counter Object Beh avior — The behavior exhibited by the Sensor-AI-Counter object is inherited from the Sensor-AI object defined in SEMI E54.1. Additional specific behavior associated with the Sensor-AICounter object is defined below.\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 1)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: 8.8.3.1.1 A reading is retrieved from the physical median noise sensor. This reading is filtered through an analysis of a manufacturer specified number of samples. The value attribute is set to this processed reading. This process is called “counting” and is executed only when the Device Manager Object is in the EXECUTING state as defined in the Common Device Model. 8.8.3.1.2 Whenever an Interlock alarm, Sensor Not Detected alarm, Leak Detected alarm, and Sensor Type Change alarm is active the ISPM device shall stop “counting” until the alarm clears (see Section 8.2). 8.8.3.1.3 The ISPM is a device that mea sures and counts particles. As part of counting, particles are classified by size and count and accumulated in bins over time intervals then reported. The number of bins varies by vendor and device model. 8.8.3.1.4 The value attributes for all Sen sor-AI-Counter objects, shall be held at zero unless the device laser is on and stable\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 2)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: (i.e., Laser Status attribute of Device Manager Object has a value indicating “LASER ON AND STABLE”). The value attribute of any Sensor-AI-Counter object may be cleared (to zero) in a counter sensor after being read; the conditions under which this clearing behavior occurs may be further specified in the associated Network Communication Standard or by the manufacturer. The value shall also be cleared (to zero) by a valid “Clear Counts” service from the SAC object or the “Reset” service issued to the Sensor AI Class Object. 8.8.3.1.5 When attempting to set the “Upper Size” attribute to a value above the capability of the sensor, or to a value equal to or below the current “Lower Size” attribute value, an error response shall be generated indicating an invalid operation has been attempted. Similarly, an attempt to set the “Lower Size” attribute to a value below the capability of the sensor, or to a value equal to or above the current “Upper\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 3)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: Size” attribute value, an error response shall be generated indicating an invalid operation has been attempted. 8.9 Assembly-ISPM Objects — As sembly-ISPM objects inherit attributes, services, and behavior from the Assembly object. The Assembly object is the device component which provides a mechanism of grouping more than one attribute from one or more objects into a single data structure for communication over the network. 8.9.1 Table 21 identifies the Assemb ly-ISPM objects defined for the ISPM device. Table 21 Assembly List 8.9.2 Assembly-ISPM Objects Attrib utes — Table 22 provides a list of attributes common to all Assembly-ISPM object types. Table 22 Assembly-ISPM Object Attributes NOTE 1: Inherited from the Assembly object as shown in Figure 1. 8.9.2.1 Data Attribute Format for Ass embly-ISPM Objects — The Data attribute of all Assembly-ISPM objects is a structured attribute containing an ordered list of attributes within its\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 4)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: structure. In the following tables (23 through 31), the structure of the Data attribute for each of the Assembly-ISPM object types is defined. Table 23 Assembly-ISPM #1 Object Data List NOTE 1: “N” is the value of the Sensor-AI-Counter object attribute “Number of Bins”. Note also that the number of bins reported in an assembly is fixed throughout the life of the device, and is specified by the manufacturer. Table 24 Assembly-ISPM #2 Object Data List NOTE 1: “N” is the value of the Sensor-AI-Counter object attribute “Number of Bins”. Note also that the number of bins reported in an assembly is fixed throughout the life of the device, and is specified by the manufacturer. Table 25 Assembly-ISPM #3 Object Data List NOTE 1: “N” is the value of the Sensor-AI-Counter object attribute “Number of Bins”. Note also that the number of bins reported in an assembly is fixed throughout the life of the device, and is specified by the manufacturer. Table\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 5)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: 26 Assembly-ISPM #4 Object Data List NOTE 1: “N” is the value of the Sensor-AI-Counter object attribute “Number of Bins”. Note also that the number of bins reported in an assembly is fixed throughout the life of the device, and is specified by the manufacturer. Table 27 Assembly-ISPM #5 Object Data List NOTE 1: “N” is the value of the Sensor-AI-Counter object attribute “Number of Bins”. Note also that the number of bins reported in an assembly is fixed throughout the life of the device, and is specified by the manufacturer. Table 28 Assembly-ISPM #6 Object Data List Table 29 Assembly-ISPM #7 Object Data List Table 30 Assembly-ISPM #8 Object Data List Table 31 Assembly-ISPM #9 Object Data List Table 32 Assembly-ISPM #40 Object Data List NOTE 1: Objects to which these attributes are linked are optional. If the associated object is not supported in the ISPM device, the data field for the associated attribute in this assembly is set to zero\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 6)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: and should be interpreted as having no meaning. NOTICE: SEMI makes no warranties or representations as to the suitability of the specifications set forth herein for any particular application. The determination of the suitability of the specification is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These specifications are subject to change without notice. The user’s attention is called to the possibility that compliance with this specification may require use of copyrighted material or of an invention covered by patent rights. By publication of this specification, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this specification. Users of this specification are expressly advised that\n\nSEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process (Part 7)\n\nTitle: SEMI E54.10-0600 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK SPECIFIC DEVICE MODEL FOR AN IN-SITU PARTICLE MONITOR DEVICE - # 8.8.3.1  Sensor-AI-Counter OPERATING Application Process\n\nContent: determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES\n\nThis specific device model was technically approved by the Global Information & Control Committee and is the direct responsibility of the North American Information & Control Committee. Current edition approved by the North American Regional Standards Committee on November 22, 2000.  Initially available at www.semi.org January 2001; to be published March 2001.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 1  Purpose\n\n1.1  This specification is part of a s uite of standards that specify the implementation of SEMI standards for the Sensor/Actuator Network. The specific purpose of this specification is to describe a network independent application model comprised of device objects that are common to all Endpoint Devices on a semiconductor equipment Sensor/Actuator communication network.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 2  Scope (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 2  Scope\n\nContent: 2.1 An Endpoint device (EPD) is a device that measures and monitors process characteristics to determine when a specific threshold or event has been obtained usually to signal the completion of a process or process step. These endpoint devices are, but not limited to, devices that may classify a process endpoint by determining the size and count of particles in the process environment, detecting and determining optical light from a sample region of the environment’s space, or determining motor current of an equipment component. 2.2 This specification specifically addresses the minimum attributes, services and behavior an Endpoint (EPD) device must support to be interoperable on the Sensor/Actuator Network. 2.3 This specification is intended t o ensure a highdegree of device interoperability on the Sensor/Actuator Network, while still allowing flexibility for product differentiation and technology evolution. 2.4 The model specified in this spe cification is used in conjunction with the Sensor/Actuator Network Common Device Model (CDM) to\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 2  Scope (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 2  Scope\n\nContent: completely describe the Endpoint device (EPD) as it appears from the network interface. 2.5 This specification, together wi th the Sensor/Actuator Network Standard, the Sensor/Actuator Network Common Device Model, and a Sensor/Actuator Network Communication Specification, form a complete interoperability specification for the EPD. 2.6 To comply with this specificat ion, a device must implement and support, at a minimum, the required attributes, services, and behavior identified in these documents. Support for optional attributes, services and behavior is not required to be compliant to this specification. Optional attributes, services, and behavior are specified in these documents to promote further device interoperability as features evolve and are adopted by more manufacturers. If optional attributes, services, and behavior are implemented for this device they must be implemented as identified in this document. 2.7 This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 2  Scope (Part 3)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 2  Scope\n\nContent: of this standard to establish appropriate safety health practices and determine the applicability or regulatory limitations prior to use\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 3  Limitations (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 3  Limitations\n\nContent: 3.1 This specification is a compan ion to a suite of specifications that together make up the Sensor/Actuator Network Communication standard. Therefore, using portions of this specification that relate to network communications necessarily requires an understanding of the associated network specification. 3.2 As this document is a specifica tion for the Endpoint Device Model, it does not contain any definition of objects, attributes, services, or behavioral descriptions that are already defined in the Sensor/Actuator Network Common Device Model (CDM). Additional attributes, attribute assignments, services and/or service parameters that are Endpoint Device specific and/or implementation specific are contained in this specification. 3.3 While this specification is suff icient to completely describe the EPD as it appears from the network, it does not fully describe behavior of a specific endpoint device type which is not visible from the network. This allows flexibility in implementation techniques and product differentiation between\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 3  Limitations (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 3  Limitations\n\nContent: manufacturers. Manufacturer specific objects may be defined by the manufacturer but are, by definition, outside the scope of this standard. 3.4 This specification is compatibl e, but not compliant with SEMI E39. This means that although this specification does not require compliance with SEMI E39, it is extensible such that implementations may be developed that are fully compliant with both standards. Note that the concepts and terminology of this specification are compatible with those of SEMI E39. However, SEMI E39 has specific requirements that are intended for higher level applications and thus are not applied to the Endpoint Device Model. 3.5 Operation over the entire rang e specified for an attribute within a specific object is not a requisite for compliance with this specification.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 4  Referenced Standards\n\nNOTE 1: As listed or revised, all documents cited shall be the latest publications of adopted standards.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 4.1 SEMI Standards\n\nSEMI E39 — Object Services Standard: Concepts, Behavior, and Services  \nSEMI E54 — Sensor/Actuator Network Standard  \nSEMI E54.1— Standard for Sensor/Actuator Network Common Device Model\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 5.1  Abbreviations and Acronyms\n\n5.1.1 $E P$ — an EPD sensor named E ndpoint.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 5.2  Definitions (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 5.2  Definitions\n\nContent: 5.2.1 Endpoint Device (EPD) — a s elf-contained device, consisting of device specific signal-processing electronics, which is capable of monitoring and measuring the occurrence of a process endpoint. 5.2.2 Endpoint Detection Event — consists of the device operation of monitoring, measuring, analyzing, waiting, and reporting endpoint. 5.3 This document inherits the term inology defined by SEMI E54.1 5.3.1 Attribute 5.3.2 Behavior 5.3.3 Boolean (BOOL) 5.3.4 Byte 5.3.5 Character 5.3.6 Common Device Model (CDM ) 5.3.7 Data Type 5.3.8 Data Units 5.3.9 Device 5.3.10 Device Manager (DM) Object 5.3.11 Device Model 5.3.12 Double Integer (DINT) 5.3.13 Enumerated Byte 5.3.14 Full Scale Range 5.3.15 Instance 5.3.16 Last Valid Value (LVV) 5.3.17 Long Integer (LINT) 5.3.18 Long Real (LREAL) 5.3.19 Manufacturer 5.3.20 Nibble 5.3.21 Null Character 5.3.22 Object 5.3.23 Real (REAL) 5.3.24 S, A, and C Objects 5.3.25 Sensor Actuator Controller (SA C) Object 5.3.26 Service 5.3.27 Signed Integer (INT) 5.3.28 Short Integer (SINT) 5.3.29 State Diagram 5.3.30\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 5.2  Definitions (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 5.2  Definitions\n\nContent: Test String 5.3.31 Unsigned Double Integer (UDINT) 5.3.32 Unsigned Double Long Integer (UDLINT) 5.3.33 Unsigned Integer (UINT) 5.3.34 Unsigned Long Integer (ULINT) 5.3.35 Unsigned Short Integer (USINT)\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 6  Requirements and Specifi cations\n\n6.1  In order to implement this stan dard in an Endpoint Device, it is necessary to also implement SEMI E54.1 and one of the Sensor/Actuator Network Communication Standards (SEMI E54.4–E54.9). See Section 3 for more information on a complete interoperability standard.  \n6.2  This specification also require s the implementation of a Date_And_Time data structure used to represent the current device Date and Time. Table 1 defines the format of the Date_And_Time data type.  \nTable 1   Date_And_Time Format\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 7  Conventions\n\n7.1  This document embraces the c onventions and notations stated in section 6 of SEMI E54.1.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1  General Description\n\n8.1.1  The high-level object view of an Endpoint Device (EPD) profile is shown in Figure 1.  \n8.1.2  Note that the profile for an “EP D Device” object is depicted in Figure 1 only for the purposes of illustrating a high level view of the device and its component objects. In the context of this document, this object is not addressable, does not have addressable attributes, does not have accessible services and, does not exhibit any defined behavior.  \n8.1.3  In the remainder of this section , this document defines in detail the component objects unique to the EPD device. References, rather than definitions, are included for the DM, the SAC and other objects defined\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # in SEMI E54.1. (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # in SEMI E54.1.\n\nContent: 8.1.4 Many of the objects defined in this document inherit properties from other objects. The properties inherited include attribute, service and behavior definitions. These other objects are specified here or in SEMI E54.1. 8.1.5 This document provides for fu ture extensions as well as manufacturer specific enhancements by reserving object attribute identifiers and object service identifiers. Specifically all object definitions in this document specify or reserve the first 64 attribute identifiers (A1 through A64) and the first 64 service identifiers (S1 through S64) allowing manufacturers to specify identifiers beyond these ranges. Additionally, byte enumerated attributes are specified or reserved from 0 to 63 allowing manufacturers to specify an enumeration beyond this range (64 to 255). 8.1.6 Endpoint Device (EPD) Descr iption — An Endpoint device profile is composed of the component objects and object relationships shown in Figure 1. NOTE 1: The Sensor-BI-TH, DM, SAC, and Assembly are defined in the CDM. Additional attributes and\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # in SEMI E54.1. (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # in SEMI E54.1.\n\nContent: services are added to support the EPD. NOTE 2: Assembly-EPD #1 object is required. Other Assembly-EPD objects are optional.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1.7  General Requirements (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1.7  General Requirements\n\nContent: 8.1.7.1 Device Objects — All objects are defined in terms of their object name and Class/Object identifier. Identifiers for all objects described in this document are summarized in Table 2. Table 2 Endpoint Device Objects 8.1.7.2 Object Services — Not all object services listed in this document can necessarily be requested over the network. They are included in this document because their behavior may generate network activity. 8.1.7.3 Object Behavior — A network specific service error response is generated for all service requests received over the network that are not supported by the object, or contain a parameter value which is beyond the supported range, or which is otherwise invalid. 8.2 Device Manager Object (DM) — The Device Manager object is the device component responsible for managing and consolidating the device operation as specified in SEMI E54.1. The following sections specify the components of the DM object that are not specified in the Common Device Model or require further definition than specified in SEMI\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1.7  General Requirements (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1.7  General Requirements\n\nContent: E54.1. 8.2.1 Device Manager Object Attrib utes — Required and optional DM object attributes are listed in Table 3. Table 3 DM Object Attributes 8.2.1.1 Device Type — An attribute th at uniquely identifies the type of the device on the network. The device type attribute is assigned as follows: Endpoint Device $\\ O =$ “EPD” NOTE 2: If the “Endpoint Device” functionality is implemented by another Sensor/Actuator Network Specific Device Model, the Device Type’ attribute value may be specified by the manufacturer to identify the other Specific Device Model. 8.2.1.2 Exception Detail Alarm (Optio nal) — An attribute that identifies the detailed alarm status of the device. Table 4 defines the bit assignments associated with the alarm exception detail. Table 4 Exception Detail Alarm Bit Assignments 8.2.1.3 Exception Detail Warning (Op tional) — An attribute that identifies the detailed warning status of the device. Table 5 defines the bit assignments associated with the warning exception detail. Table 5 Exception Detail Warning Bit\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1.7  General Requirements (Part 3)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.1.7  General Requirements\n\nContent: Assignments 8.2.1.4 Manufacturer Exception Detail Size (Optional) An attribute that specifies the number of exception detail bytes included in the alarm or warning details.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.2.1.5  Initial and Default Values (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.2.1.5  Initial and Default Values\n\nContent: Table 6 DM Object Attribute Initial and Default Values 8.2.2 Device Manager Object Services — The services provided by the Device Manager object are defined in SEMI E54.1. There are no additional services required for the Device Manager object. 8.2.3 Device Manager Object Behavior — The behavior exhibited by the Device Manager object is defined in SEMI E54.1. There is no additional behavior specified for the Device Manager object. 8.3 Sensor Actuator Controller Ob ject (SAC) — The Sensor Actuator Controller object is the device component responsible for coordinating the interaction of the EPD device with the sensory/actuation/control environment as specified in SEMI E54.1. The following sections specify the components of the SAC object that are not specified in the Common Device Model or require further definition than specified in the Common Device Model. 8.3.1 Sensor Actuator Controller Ob ject Attributes — The attributes provided by the Sensor Actuator Controller object are defined in SEMI E54.1. Table 7 contains\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.2.1.5  Initial and Default Values (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.2.1.5  Initial and Default Values\n\nContent: the additional attributes required for the Sensor Actuator Controller object. Table 7 SAC Object Attributes 8.3.1.1 Number of Endpoint Objects — An attribute that specifies the number of endpoint objects in the device. This value represents the number of Sensor-BI-TH-EP objects in the device. If this attribute is not supported then the default value of 1 Endpoint object is supported.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.1.2  Initial and Default Values (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.1.2  Initial and Default Values\n\nContent: Table 8 SAC Object Attributes Initial and Default Values 8.3.2 Sensor Actuator Controller Ob ject Services — The services provided by the Sensor Actuator Controller object are defined in SEMI E54.1. Table 9 contains the additional services required for the Sensor Actuator Controller object. Table 9 SAC Object Services 8.3.2.1 Reset Endpoint (Optional) — This service is used to instruct all of the Sensor-BI-TH-EP objects to perform a ‘Reset’ of their endpoint monitoring and measuring events. A one-time reset of their respective Sensor-BI-TH-EP attributes is performed. There are no parameters required for this service. 8.3.2.2 Download Recipe (Optional) — This service is used to set the recipe parameters associated with the endpoint sensor or a specific Sensor-BI-TH-EP object. The format and type of data comprising recipe data and the mechanism implemented to interrupt recipe data and distribute its contents to the appropriate Sensor-BI-TH-EP object is manufacturer specific. The parameter ‘Recipe Data’ may be a\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.1.2  Initial and Default Values (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.1.2  Initial and Default Values\n\nContent: formatted data structure or a list of individual data items. The following table describes the parameters specified for this service. Table 10 Download Recipe Service Parameter Definitions 8.3.2.3 Upload Recipe (Optional) — T his service is used to read the recipe parameters associated with the endpoint sensor or a specific Sensor-BI-TH-EP object. The format and type of data comprising recipe data and the mechanism implemented to assemble recipe data to be read is manufacturer specific. The parameter ‘Recipe Data’ may be a formatted data structure or a list of individual data items. The following table describes the parameters specified for this service. Table 11 Upload Recipe Service Parameter Definitions 8.3.2.4 Calibrate (Optional) — This s ervice is used to set the calibration parameters associated with the endpoint sensor or a specific Sensor-BI-TH-EP object. The format and type of data comprising calibration data and the mechanism implemented to interrupt calibration data and execute a calibration algorithm is\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.1.2  Initial and Default Values (Part 3)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.1.2  Initial and Default Values\n\nContent: manufacturer specific. The parameter ‘Calibration Data’ may be a formatted data structure or a list of individual data items. The following table describes the parameters specified for this service. Table 12 Calibration Service Parameter Definitions\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: 8.3.3.1 The behavior exhibited by the Sensor Actuator Controller object is defined in SEMI E54.1. Additional behavior is detailed below. 8.3.3.2 The “Reset Endpoint” service will issue an “Endpoint Restart” object service to each Sensor-BI-TH-EP sensor object. 8.4 Sensor-BI-TH Object — The S ensor-BI object is the device component responsible for coordinating the behavior common to all Boolean input threshold sensor elements in the EPD device as specified in SEMI E54.1. 8.4.1 Sensor-BI-TH Object Attributes — The attributes provided by the Sensor-BI-TH object are defined in SEMI E54.1. There are no additional attributes required for the Sensor-BI-TH object. 8.4.2 Sensor-BI-TH Object Services — The services provided by the Sensor-BI-TH object are defined in SEMI E54.1. There are no additional services required for the Sensor-BI-TH object. 8.4.3 Sensor-BI-TH Object Behavio r — The behavior exhibited by the Sensor-BI-TH object is defined in SEMI E54.1. There is no additional behavior required for the\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: Sensor-BI-TH object. 8.5 Sensor-BI-TH-EP Object — T he Sensor-BI-TH-EP (Endpoint) object inherits the attributes, services, and behavior of the Sensor-BI-TH as defined in SEMI E54.1. The Sensor-BI-TH-EP is the device component responsible for retrieving a reading, or readings, from the device specific signal-processing sensors, optionally processing the readings with a manufacturer specified algorithm, or algorithms, and then making the endpoint result available through the “Value” attribute. 8.5.1 Sensor-BI-TH-EP Object Attributes — The attributes provided by the Sensor-BI-TH object are defined in SEMI E54.1. The Sensor-BI-TH object attribute content and its attribute extensions to support the Sensor-BI-TH-EP object are listed in the table below. Table 13 Sensor-BI, Sensor-BI-TH, and Sensor-BI-TH-EP Object Attributes NOTE 1: “\\*” Indicates that the specific attribute is nonvolatile. Nonvolatile requires that the current attribute value be maintained through a component power cycle. 8.5.1.1 Value — The\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 3)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: attribute that ma intains the current endpoint event result. The value of the ‘Value’ attribute is read as a Boolean (True or False) endpoint detection event result. 8.5.1.2 Reading Valid — An attribute which specifies whether the “Value” attribute contains a valid value. This attribute is Boolean that can take on one of the following values: $$ \\begin{array} { l } { 0 = \\mathrm { { I N V } A L I D } } \\\\ { 1 = \\mathrm { { V A L I D } } } \\end{array} $$ NOTE 3: The ‘Reading Valid’ attribute is identified as an optional attribute of the SBITH object class but is identified as a required attribute for the SBITHEP object class. 8.5.1.3 State — An attribute that recor ds the current state of the endpoint object. This attribute is an enumerated byte. The possible enumeration and the requirement for support are as follows: $0 =$ ENDPOINT OFF (required) $1 =$ ENDPOINT IN PROCESS (required) $2 =$ ENDPOINT IDLE (optional) $3 =$ ENDPOINT SUSPENDED (optional) $4 =$ ENDPOINT FAILURE (optional) $5 / 6 3 = \\mathrm {\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 4)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: F }$ eserved $6 4 - 2 5 5 =$ Manufacturer Specified (optional) 8.5.1.4 Status — An attribute which s pecifies whether endpoint detection event reporting is active based upon the services ‘Endpoint $\\mathrm { { O n ^ { \\prime } } }$ , ‘Endpoint Start’, and ‘Endpoint Off or $\\mathrm { O n ^ { \\prime } }$ . This attribute is an enumerated byte that can take on one of the following values: $$ \\begin{array} { l } { 0 = { \\mathrm { E n d p o i n t ~ O f f } } } \\\\ { \\displaystyle 1 = { \\mathrm { E n d p o i n t ~ O n } } } \\end{array} $$ 8.5.1.5 Minimum Time — An attribute that specifies the minimum time in milliseconds for an endpoint detection event. No attempt to report an endpoint detection event will take place until the minimum time specified has expired. 8.5.1.6 Maximum Time — An attribut e that specifies the maximum time in milliseconds for an Endpoint detection event before an alarm is reported. 8.5.1.7 Target Time — An attribute th at specifies the expected time in milliseconds for an Endpoint\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior (Part 5)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.3.3  Sensor Actuator Controller Ob ject Behavior\n\nContent: detectio event. 8.5.1.8 Elapsed Time — An attribute t hat specifies in milliseconds the amount of time that has elapsed since the beginning of the current endpoint detection event. This attribute will behave as a count up timer that is frozen when the endpoint event is detected. 8.5.1.9 Time Stamp — An attribute th at specifies the time when the endpoint detection event completed. 8.5.1.10 Recipe Identifier — An attribu te that specifies a manufacturer specific endpoint algorithm or algorithms to be utilized to determine the current endpoint detection event. The interpretation of this attribute is manufacturer specific. 8.5.1.11 Step Identifier — An attribute that specifies a process recipe step that is associated with the current endpoint detection recipe and/or event. The interpretation of this attribute is manufacturer specific.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values\n\nContent: Table 14 Sensor-BI and Sensor-BI-EP Object Attributes Initial and Default Values 8.5.2 Sensor-BI-EP Object Services — The services provided by the Sensor-BI-EP are inherited from the SensorBI object defined in SEMI E54.1. The Sensor-BI-EP object supports the additional services listed in Table 15 below. Table 15 Sensor-BI-EP Object Services 8.5.2.1 Endpoint On (Required) — This service is used to prompt the endpoint object to go from the ENDPOINT OFF state to the ENDPOINT ON / ENDPOINT IDLE state as defined by the State attribute. If the device does not support the ENDPOINT IDLE state then the endpoint object goes immediately to the ENDPOINT ON / ENDPOINT IN PROCESS state. If the State attribute is already set to ENDPOINT IDLE or ENDPOINT IN PROCESS, the endpoint object is set to the appropriate state. If the device turns on successfully, a “success” response is returned. If the device fails to turn on properly, a “fail” response is returned and the endpoint object remains in the appropriate state. 8.5.2.2 Endpoint\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values\n\nContent: Off (Required) — Th is service is used to prompt the endpoint object to go immediately to the ENDPOINT OFF state from the ENDPOINT ON state as defined by the State attribute. All endpoint detection event processes are aborted and all active timers are stopped. If the state attribute is already set to ENDPOINT OFF, the endpoint object remains in the appropriate state. If the device turns off successfully, a “success” response is returned. If the device fails to turn off properly, a “fail” response is returned and the endpoint object remains in the current state. 8.5.2.3 Endpoint Start (Optional) — T his service is used to prompt the endpoint object to go from the ENDPOINT OFF or ENDPOINT IDLE state to the ENDPOINT IN PROCESS state and begin the endpoint detection event process with the initial endpoint attribute parameter values. If the State attribute is not currently in the ENDPOINT OFF or ENDPOINT IDLE state, an “object state conflict” error response is returned and the endpoint event remains in the appropriate\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values (Part 3)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values\n\nContent: state. 8.5.2.4 Endpoint Suspend (Optional) — This service is used to prompt the endpoint object to go from the ENDPOINT IN PROCESS state to the ENDPOINT SUSPENDED state and suspend the endpoint detection event process. All active timers are suspended and held at their current values. If the State attribute is not currently in the ENDPOINT IN PROCESS state, an “object state conflict” error response is returned and the endpoint object remains in the appropriate state. The Endpoint Suspend service is conditional on the Endpoint Resume service being supported. 8.5.2.5 Endpoint Resume (Optional) — This service is used to prompt the endpoint object to go from the ENDPOINT SUSPENDED state to the ENDPOINT IN PROCESS state and resume the endpoint detection event process. The process resumes using the endpoint attribute parameter values and timer readings that were saved when the endpoint was suspended by the Endpoint Suspend service request. If the Endpoint Resume service is issued while the State attribute is not in the\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values (Part 4)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values\n\nContent: ENDPOINT SUSPENDED state, an “object state conflict” error response is returned and the endpoint event remains in its existing state. The Endpoint Resume service is conditional on the Endpoint Suspend service being supported. 8.5.3 Sensor-BI-TH-EP Object Beha vior — The behavior exhibited by the Sensor-BI-TH-EP object is inherited from the Sensor-BI-TH object defined in SEMI E54.1. Additional specific behavior associated with the Sensor-BI-TH-EP object is defined below. 8.5.3.1 Sensor-BI-EP OPERATING Application Process — When in the ENDPOINT ON / ENDPOINT IN PROCESS state, the ‘Value’ attribute is set to FALSE and the ‘Reading Value’ attribute is set to VALID. A reading, or readings, may be retrieved from the device physical signal processing electronics. This reading may be filtered, analyzed, and corrected with a manufacturer-specified algorithm. This corrected reading becomes the input to the endpoint formula to generate the ‘Value’ attribute as referenced in SEMI E54.1. This process is called “endpoint\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values (Part 5)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.1.12  Initial and Default Values\n\nContent: detection” and is executed only when the Sensor-BI-TH-EP object is in the OPERATING state as defined in SEMI E54.1. When an Endpoint event is detected, the ‘Value’ attribute is set to TRUE and the ‘Reading Valid’ attribute is VALID. When not in the OPERATING state, the value of the ‘Reading Valid’ attribute shall be set to INVALID. When in one of the sub-states of the OPERATING state, the validity of the ‘Value’ attribute shall be manufacturer specific. Required sub-states within the OPERATING state, descriptions of these sub-states, and a transition matrix associated with these sub-states are given in Figure 2, Table 16 and Table 17 respectively.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.3.1.1  Whenever a ‘Sensor Not Detected’ alarm, ‘Endpoint Failure’ alarm or ‘Unexpected Conditions (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.3.1.1  Whenever a ‘Sensor Not Detected’ alarm, ‘Endpoint Failure’ alarm or ‘Unexpected Conditions\n\nContent: Detected’ alarm is active, the EPD device shall turn off the endpoint detection event process and hold the device in the ENDPOINT OFF state until the alarm clears (see Section 8.2). 8.5.3.1.2 A device can concurrently mo nitor and report many endpoint detection events. The number of endpoint detection events varies by vendor and device model. 8.5.3.1.3 The ‘Value’ attributes for all S ensor-BI-THEP objects shall be held at ‘FALSE’ until a valid endpoint detection event is determined. An endpoint detection event is initiated when the endpoint service request ‘Endpoint Start’ or Endpoint On (if the state ENDPOINT ON / ENDPOINT IDLE is not supported) is received and the endpoint object can successfully transition to the ENDPOINT ON / ENDPOINT IN PROCESS state. 8.5.3.1.4 When attempting to set the “Minimum Time”, “Maximum Time”, and “Target Time” attribute to a value above the capability of the endpoint detection event an error response shall be generated\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.3.1.1  Whenever a ‘Sensor Not Detected’ alarm, ‘Endpoint Failure’ alarm or ‘Unexpected Conditions (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # 8.5.3.1.1  Whenever a ‘Sensor Not Detected’ alarm, ‘Endpoint Failure’ alarm or ‘Unexpected Conditions\n\nContent: indicating an invalid operation has been attempted. 8.5.3.1.5 When attempting to set the “Recipe Identifier” or “Step Identifier” attribute to an identifier outside the range of the endpoint detection event an error response shall be generated indicating an invalid operation has been attempted. Table 16 Sensor-BI-TH-EP Behavior OPERATING Sub-state Description\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # Table 17  Sensor-BI-TH-EP Behavior EXECUTING Sub-state Transition Matrix\\*\n\n8.6  Assembly-EP Objects — Assembly-EP objects inherit attributes, services, and behavior from the Assembly object. The Assembly object is the device component that provides a mechanism of grouping more than one attribute from one or more objects into a single data structure for communication over the network.  \nTable 18 identifies the Assembly-EP objects defined for the EPD device.  \nTable 18  Assembly List  \n8.6.1  Assembly-EP Objects Attribute s — Table 19 provides a list of attributes common to all Assembly-EP object types.  \nTable 19  Assembly-EP Object Attributes  \nNOTE 1: Inherited from the Assembly object as shown in Figure 1.  \n8.6.1.1  Data Attribute Format for Ass embly-EP Objects — The Data attribute of all Assembly-EP objects is a structured attribute containing an ordered list of attributes within its structure.  In the following tables (20 through 23), the structure of the Data attribute for each of the Assembly-EP object types is defined.\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # Table 20  Assembly-EPD #1 Object Data List (Part 1)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # Table 20  Assembly-EPD #1 Object Data List\n\nContent: Table 21 Assembly-EPD #2 Object Data List Table 22 Assembly-EPD #3 Object Data List NOTE 1: ‘N’ is the value of the Sensor-BI-EP object attribute “Number of Endpointing Objects”. Note also that the number of endpoints reported in an assembly is fixed throughout the life of the device, and is specified by the manufacturer. Table 23 Assembly-EPD #4 Object Data List NOTICE: SEMI makes no warranties or representations as to the suitability of the standard set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials or equipment mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. By publication of\n\nSEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # Table 20  Assembly-EPD #1 Object Data List (Part 2)\n\nTitle: SEMI E54.11-0301 SPECIFIC DEVICE MODEL FOR ENDPOINT DEVICES - # Table 20  Assembly-EPD #1 Object Data List\n\nContent: this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights, and the risk of infringement of such rights, are entirely their own responsibility.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK\n\nThis specification was technically approved by the Global Information and Control Committee and is the direct responsibility of the North American Global Information and Control Committee.  Current edition approved by the North American Information and Control Committee on April 30, 2001.  Initially available at www.semi.org May 2001; to be published July 2001.  \nE This standard was editorially modified in September 2001 to correct a typographical error and the omission of a required disclaimer. Section 2.3 was added and changes were made to Section 7.6.2.6.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 1  Purpose\n\n1.1  This specification is part of the SEMI Sensor/Actuator Network (SAN) suite of standards and defines a specific communications protocol based on the CC-Link standard. This Network Communication Standard (NCS) taken together with the SEMI Sensor/Actuator Network standard suite and the CCLink standard completely and unambiguously defines an open standard providing an industry specific solution to off-the-shelf interoperability of networked devices in semiconductor manufacturing equipment.  \n1.2  CC-Link is a vendor independent, open device level network standard. Vendor independence and openness are guaranteed by the CC-Link Partner Association.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 2  Scope (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 2  Scope\n\nContent: 2.1 This document specifies a SAN communications standard based on the CC-Link specification that is in compliance with SEMI E54.1. As such, it specifies the protocol, services and behavior that compliant intelligent devices must support in order to interchange information over this SAN in a method compatible with SEMI E39. $2 . 2 \\ \\mathrm { I n }$ conjunction with a SEMI standard SAN Common Device Model (CDM) specification and one or more SEMI standard Specific Device Model (SDM) specifications (e.g., for a mass flow controller), this Network Communication Standard (NCS) with the related CC-Link standard describe the data structures, interactions and behavior that are characteristic of the various devices on the network. This composite model forms a complete interoperability standard for communications among intelligent sensors, actuators and controllers in semiconductor manufacturing equipment. 2.3 This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 2  Scope (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 2  Scope\n\nContent: the users of this standard to establish appropriate safety health practices and determine the applicability or regulatory limitations prior to use.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 3  Limitations (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 3  Limitations\n\nContent: 3.1 This document specifies a semiconductor equipment SAN based solely on CC-Link; thus, a complete specification of this standard necessarily includes the CC-Link specifications. There are other semiconductor equipment SAN communications options. The specifications for these options are not included here. 3.2 The specifications within are strictly enhancements that provide additional capabilities over and above those currently required by CC-Link. Included throughout this document, primarily in Section 6, is information paraphrased from the CC-Link specifications such as: protocol structure, capabilities, options and limitations. This information is provided here for reference only and is not intended to provide specification definitions. In all such areas, refer to the CC-Link specification documents for information. This document is limited to describing enhancements or limitations to the CC-Link specification that are imposed by this standard. 3.3 A complete specification of the conformance testing procedure\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 3  Limitations (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 3  Limitations\n\nContent: shall include the CC-Link protocol conformance testing specification. Conformance testing shall also include enhancements and limitations to the CC-Link specification required by this standard.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 4  Referenced Standards\n\nNOTE 1: Unless otherwise indicated, all documents cited shall be the latest published versions.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 4.1  SEMI Standards\n\nSEMI E39 — Object Services Standard: Concepts, Behavior and Services\nSEMI E54.1 — Sensor/Actuator Network Common Device Model\nSEMI E54.3 — Specification for Sensor/Actuator Network Specific Device Model for Mass Flow Device\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 4.2  ISO1 Standards\n\n7498 OSI — Basic Reference Model for Open Systems Interconnection  \n4.3  CC-Link Partner Association2  \nCC-Link Specification, Version 1.11 (or later)\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 5  Terminology (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 5  Terminology\n\nContent: 5.1 Abbreviations and Acronyms 5.1.1 CDM — Common Device Model 5.1.2 NCS — Network Communication Standard 5.1.3 OSI — Basic Reference Model for Open Systems Interconnection (ISO 7498) 5.1.4 SAN — Sensor/Actuator Network 5.1.5 SDM — Specific Device Model 5.2 Definitions from Sensor/Actuator Network Common Device Model (SEMI E54.1) 5.2.1 Attribute 5.2.2 Behavior 5.2.3 Byte 5.2.4 Common Device Model 5.2.5 Device 5.2.6 Device Manager (DM) Object 5.2.7 Device Model 5.2.8 Instance 5.2.9 Network Communication Standard 5.2.10 Object 5.2.11 Sensor, Actuator and Controller (SAC) Object 5.2.12 Service 5.2.13 Specific Device Model 5.2.14 State Diagram 5.3 Definitions 5.3.1 broadcast polling method — polling to each station and the data communication are executed by the same packet, and the data is transmitted to all of the stations in this method. 5.3.2 cyclic transmission — function to transmit the data from master station to all stations periodically, then for each station to transmit the response data to master station.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 5  Terminology (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 5  Terminology\n\nContent: 5.3.3 intelligent device station — station which can send cyclic transmission and transient transmission to master station. 5.3.4 local station — station which can send cyclic transmission and transient transmission to master station and other local stations. 5.3.5 master station — station that controls all stations on CC-Link. One (and only one) master station per system is required. 5.3.6 profiles Application Object Model specifications. 5.3.7 remote device station — station that handles bit data and word data. 5.3.8 remote I/O station — station that handles only bit data. 5.3.9 remote station — generic name of remote I/O station and remote device station. 5.3.10 slave station — generic name of station other than master station. 5.3.11 station — equipment which can be connected with CC-Link and is assigned a station number of 0–64. 5.3.12 transient transmission — function to transmit the non-periodic data generated in master station, local station, and intelligent device station.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 6  Communication Protocol High Level Structure (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 6  Communication Protocol High Level Structure\n\nContent: 6.1 Message transfer is organized in cycles. A message cycle mainly consists of a request-frame followed by a corresponding acknowledge/response-frame of the addressed station. 6.2 A brief description of the CC-Link protocol as it relates to the ISO 7498 OSI model follows in the sections below. For protocol efficiency, CC-Link does not define layers 3 to 6. NOTE 2: The information contained in this section is for reference only. It in no way represents specifications for CCLink. See related documentation for these specifications. 6.3 Physical Layer - Layer 1 — the Physical Layer conforms to the EIA RS-485 standard. See the CCLink standard for more information. 6.4 Data Link Layer - Layer 2 — the Data Link Layer conforms to the HDLC standard. See the CC-Link standard for more information. 6.5 Application Layer - Layer 7 — the Application Layer defines services and protocols for Network Management, Cyclic Transmission and Non-Cyclic Transmission (or Transient Transmission). Also,\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 6  Communication Protocol High Level Structure (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 6  Communication Protocol High Level Structure\n\nContent: Application Object Models are specified as “Profiles”. See the CC-Link standard for more information. 6.6 Version 1.11 of the CC-Link Standard introduces two methods for request/response messaging. 6.7 Devices that support the CC-Link Transient Transmission capability, use this method, together with a messaging protocol to transmit Service Requests and Responses. 6.8 Devices that do not support the Transient Transmission capability, use the Cyclic Transmission method. A protocol is defined for changing the context of the cyclic data from I/O to a messaging protocol for Service Requests and Responses. 6.9 See the CC-Link standard for more information.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7  Required Object Types (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7  Required Object Types\n\nContent: 7.1 This section describes a general mapping of the SEMI SAN Object Model to the CC-Link environment. Component definitions are clarified and the mapping of Attributes, Services and Behaviors are specified. 7.2 Object Model The Object Model defined in the CDM is represented in the CC-Link NCS. Specifically, the DM and SAC objects are mapped. 7.2.1 Section 9 specifies the mapping of SDM Objects in CC-Link. 7.3 Objects The required objects of the CDM are identified here. Additional objects that are contained in the SDM are given identifiers in the Device Profile. Section 9 specifies additional mapping information. 7.3.1 Table 1 lists the Object Identifiers specified for use in protocol messages. Table 1 Object Identifiers 7.4 Attributes All attributes are accessible via Get_Attribute and Set_Attribute services defined in the sections below. 7.4.1 Attribute Identifiers Every object specified in the CDM and SDMs uses tags to identify its attributes. These tags are formatted with letters (identifying the\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7  Required Object Types (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7  Required Object Types\n\nContent: object) followed by an upper case “A”, followed by a numerical identifier. The Attribute ID used in the CCLink NCS is simply the numerical portion of these tags. 7.5 See Table 2 for a list of DM attributes. Table 2 DM Object Attribute Identifiers\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7.6  Services (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7.6  Services\n\nContent: 7.6.1 Service Identifiers The required services of the CDM are identified here. Additional services that are contained in the SDM are given identifiers in the Device Profile. Table 3 specifies the required services and ID numbers. Table 3 Service Identifiers 7.6.2 Specified Services The following sections define the details associated with each of the services required by the CDM. 7.6.2.1 Reset The Reset Request specifies no parameters. In addition to an explicit Reset Service Request, CC-Link specifies others methods whereby a Slave device can be reset. 7.6.2.2 Abort The Abort Service Request specifies no parameters. 7.6.2.3 Recover The Recover Service Request specifies no parameters. 7.6.2.4 Get Attribute The Get Attribute Request specifies two parameters: the Object ID and the Attribute ID. Each are currently defined in the range 1–255. Both are expandable to 65,535. 7.6.2.5 Set Attribute The Set Attribute Request specifies three parameters: the Object ID, the Attribute ID and the Attribute Value to set. The\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7.6  Services (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 7.6  Services\n\nContent: Object ID and the Attribute ID are defined the same as for the Set Attribute Service. The length of the Attribute Value is based on the specification of the attribute. 7.6.2.6 Execute The Execute Service Request specifies no parameters. 7.6.2.7 Perform Diagnostics The Perform Diagnostic Request specifies one parameter: Test ID. The Test ID parameter is one byte in length.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 8  Protocol Compliance\n\n8.1  The CC-Link Partner Association has established a qualified certification system, with test laboratories in Japan that include conformance testing and interoperability testing.\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings (Part 1)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings\n\nContent: 9.1 The following sections specify mappings for Sensor Actuator Network Specific Device Models. 9.2 Mass Flow Device Reference SEMI E54.3 for a complete specification of the SDM for Mass Flow Devices. Accordingly, the following mapping rules apply to the identification tags for the Objects, Attributes and Services of this model. 9.2.1 Objects Consistent with SEMI E54.3 and Section 7.3 above, the DM and SAC objects are identified as Object 1 and Object 2, respectively. 9.2.1.1 Table 4 shows the mapping of the SDM Object Instances specified in SEMI E54.3 (Instance numbers are listed under heading Inst. in the table) and the CCLink Object ID (listed under ID in the table). Table 4 MFD Object Identifiers 9.2.1.2 Additional objects may be defined by the manufacturer in the Device Profile for a given device. 9.2.2 Attributes The mapping of Attribute Tags and Identifiers is defined in Section 7.4.1 for the CDM. The same method applies here for the SDM. 9.2.3 Services The mapping of Service Tags and\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings (Part 2)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings\n\nContent: Identifiers is defined in Section 7.6.1 for the CDM. The same method applies here for the SDM. 9.3 In-Situ Particle Monitor Reference SEMI E54.10 for a complete specification of the SDM for InSitu Particle Monitor Devices. Accordingly, the following mapping rules apply to the identification tags for the Objects, Attributes and Services of this model. 9.3.1 Objects Consistent with SEMI E54.10 and Section 7.3 above, the DM and SAC objects are identified as Object 1 and Object 2, respectively. 9.3.1.1 Table 5 shows the mapping of the SDM Object Instances specified in SEMI E54.3 (Instance numbers are listed under heading Inst. in the table) and the CCLink Object ID (listed under ID in the table). Table 5 ISPM Object Identifiers 9.3.1.2 Additional objects may be defined by the manufacturer in the Device Profile for a given device. 9.3.2 Attributes The mapping of Attribute Tags and Identifiers is defined in Section 7.4.1 for the CDM. The same method applies here for the SDM. 9.3.3 Services The\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings (Part 3)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings\n\nContent: mapping of Service Tags and Identifiers is defined in Section 7.6.1 for the CDM. The same method applies here for the SDM. NOTICE: SEMI makes no warranties or representations as to the suitability of the standards set forth herein for any particular application. The determination of the suitability of the standard is solely the responsibility of the user. Users are cautioned to refer to manufacturer’s instructions, product labels, product data sheets, and other relevant literature respecting any materials mentioned herein. These standards are subject to change without notice. The user’s attention is called to the possibility that compliance with this standard may require use of copyrighted material or of an invention covered by patent rights. Mitsubishi has filed a statement with SEMI asserting that licenses will be made available to applicants throughout the world for the purpose of implementing this standard without unfair discrimination. Attention is also drawn to the possibility that some\n\nSEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings (Part 4)\n\nTitle: SEMI E54.12-0701E SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR CC-LINK - # 9  Specific Device Model Mappings\n\nContent: elements of this standard may be subject to patented technology or copyrighted items other than those identified above. Semiconductor Equipment and Materials International (SEMI) shall not be held responsible for identifying any or all such patented technology or copyrighted items. By publication of this standard, SEMI takes no position respecting the validity of any patent rights or copyrights asserted in connection with any item mentioned in this standard. Users of this standard are expressly advised that determination of any such patent rights or copyrights and the risk of infringement of such rights are entirely their own responsibility. Copyright by SEMI® (Semiconductor Equipment and Materials International), 3081 Zanker Road, San Jose, CA 95134. Reproduction of the contents in whole or in part is forbidden without express written consent of SEMI.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™\n\nThis specification was technically approved by the Global Information and Control Committee and is the direct responsibility of the North American Information and Control Committee.  Current edition approved by the North American Regional Standards Committee on November 22, 2002.  Initially available at www.semi.org January 2003; to be published March 2003.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 1.1  Introduction\n\n1.1.1  This standard defines a communication specification based on the EtherNet/IP1 (Ethernet/Industrial Protocol) network to enable communications between intelligent devices on a sensor/actuator network (SAN) that operate according to SEMI specified device models (common and device specific) in a semiconductor manufacturing tool.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 1.2  Motivation\n\n1.2.1  EtherNet/IP is a communication system suitable for use in industrial environments.  EtherNet/IP allows intelligent devices to exchange time-critical application information.  These devices include simple I/O devices such as sensors/actuators, as well as complex control devices such as robots, programmable logic controllers, and process controllers.  \n1.2.2  EtherNet/IP uses CIP (Control and Information Protocol), the common network, transport and application layers also shared by DeviceNet (SEMI E54.4).  EtherNet/IP provides:  \nA cost effective solution to bridge factory Ethernet (IEEE 802.3) networks to SEMI E54.4 DeviceNet low-level device networks,\nAccess to intelligence present in low-level devices, and\nProducer/Consumer model for Master/Slave and Peer-to-Peer application relationships.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 1.3  Background (Part 1)\n\nTitle: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 1.3  Background\n\nContent: 1.3.1 EtherNet/IP makes use of standard Ethernet and TCP/IP technology to transport CIP communications packets. The result is a common, open application layer on top of open and highly popular Ethernet and TCP/IP protocols. 1.3.2 EtherNet/IP provides a producer/consumer model for the exchange of time-critical control data. The producer/consumer model allows the exchange of application information between a sending device (e.g., the producer) and many receiving devices (e.g., the consumers) without the need to send the data multiple times to multiple destinations. For EtherNet/IP, this is accomplished by making use of the CIP network and transport layers along with IP Multicast technology. Many EtherNet/IP devices can receive the same produced piece of application information from a single producing device. 1.3.3 EtherNet/IP makes use of standard IEEE 802.3 technology; there are no non-standard additions that attempt to improve determinism. Rather, EtherNet/IP recommends the use of commercial switch\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 1.3  Background (Part 2)\n\nTitle: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 1.3  Background\n\nContent: technology, with 100 Mbps bandwidth and full-duplex operation, to provide for more deterministic performance.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 2  Scope (Part 1)\n\nTitle: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 2  Scope\n\nContent: 2.1 Specification This document specifies a Sensor/Actuator Network Communications Standard (NCS) based on the EtherNet/IP specification that enables communication with SAN devices configured according to SEMI SAN Common Device Model (CDM) and appropriate Specific Device Model (SDM) specifications. 2.2 Use This document is used in conjunction with a SEMI standard SAN CDM specification and one or more SEMI standard SDM specifications (e.g. for a mass flow controller). Together, they describe the externally visible data structure and behavior of devices utilizing the EtherNet/IP networking capability in a SEMI compliant SAN system. The general sensor/actuator network document architecture is described in the SEMI E54.0 Sensor/Actuator Network Standard (the root SAN document). 2.3 Document Structure The EtherNet/IP network communication standard complies with the SEMI SAN NCS template document structure, as described in SEMI E54.0. The standard document is composed of two main parts. The first part (Sections 1\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 2  Scope (Part 2)\n\nTitle: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 2  Scope\n\nContent: through 8) specifies the SAN enabling protocol as well as the presentation (i.e., mapping) of CDM object structure and behavior onto the network (referred to as the “CDM mapping”). The second part (Section 9) specifies the presentation (i.e., mapping) of SDM object structure and behavior onto the network for each SEMI specified SDM (referred to as the “SDM mapping”). 2.4 Adding SDM Mappings SDM mappings added to part two of this document are considered document additions and are balloted as such. An SDM mapping may only be balloted for addition to this document if the corresponding SEMI SDM has been standardized. NOTICE: This standard does not purport to address safety issues, if any, associated with its use. It is the responsibility of the users of this standard to establish appropriate safety and health practices and determine the applicability of regulatory or other limitations prior to use.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 3  Limitations\n\n3.1  This document specifies a semiconductor equipment SAN based solely on EtherNet/IP and is a companion document to the EtherNet/IP specification; thus a complete specification of this standard necessarily includes the EtherNet/IP specifications. There are other semiconductor equipment SAN communications options. The specifications for these options are not included here.  \n3.2  This standard specifies enhancements that provide additional capabilities over and above those currently required by EtherNet/IP.  In order to avoid document consistency problems, information in the EtherNet/IP specification that relates to this standard is not repeated in this document.  This document is limited to describing enhancements or limitations to the EtherNet/IP specification that are imposed by this standard.  \n3.3  A complete specification of the conformance testing procedure shall include the EtherNet/IP conformance testing specification.  Conformance testing shall also include enhancements and limitations to the EtherNet/IP specification required by this standard.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 4.1  SEMI Standards\n\nSEMI E30 — Generic Model for Communications and Control of Manufacturing Equipment (GEM)  \nSEMI E39 — Object Services Standard: Concepts, Behavior, and Services (OSS)  \nSEMI E54 — Sensor/Actuator Network Standard  \nSEMI E54.1 — Standard for Sensor/Actuator Network Common Device Model  \nSEMI E54.2 — Guide for Writing Sensor/Actuator Network (SAN) Standard Ballots\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 4.2  ISO Standards2\n\nISO 7498  Basic Reference Model for Open Systems Interconnection.  \nISO/IEC 8802-3  Carrier Sense Multiple Access with Collision Detection (CSMA/CD) Access Method and Physical Layer Specifications (Ethernet IEEE 802.3).\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 4.3  Other Documents\n\nODVA3 EtherNet/IP Specification  Volume I and Volume II, Release 1.0.  \nNOTICE: Unless otherwise indicated, all documents cited shall be the latest published versions.\n\nSEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5  Terminology (Part 1)\n\nTitle: SEMI E54.13-0303 SPECIFICATION FOR SENSOR/ACTUATOR NETWORK COMMUNICATIONS FOR ETHERNET/IP™ - # 5  Terminology\n\nContent: 5.1 Terminology that is common to all of the documents in this SAN standard may also be defined in SEMI E54. Terminology may be reproduced here which is defined in other SEMI documents. 5.2 Abbreviations and Acronyms 5.2.1 CDM — Common Device Model 5.2.2 CIP — Control and Information Protocol 5.2.3 CM — Connection Manager object 5.2.4 DM — Device Management object 5.2.5 EIP — EtherNet/IP 5.2.6 EL — Ethernet Link object 5.2.7 IP — Internet Protocol 5.2.8 MR — Message Router object 5.2.9 NCS — Network Communication Standard 5.2.10 OSI — Open Systems Interconnect 5.2.11 OSS — Object Services Standard 5.2.12 PDU — Protocol Data Unit 5.2.13 SAC — Sensor, Actuator, Controller object 5.2.14 SAN — Sensor/Actuator Network 5.2.15 SDM — Specific Device Model 5.2.16 S-DS — S-Device Supervisor object 5.2.17 TCP — Transport Control Protocol 5.3 Device Component Definitions 5.3.1 As this standard defines the presentation or mapping of CDM data structure and behavior over a network, it makes use of many of the terms in the",
  "images": []
}